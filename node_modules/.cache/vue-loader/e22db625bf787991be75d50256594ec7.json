{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\HomePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\HomePage.vue","mtime":1559147830663},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import Step from \"../components/Step\";\nimport DataSource from \"../data/datasource\";\nimport PostComponent from \"../components/postCompnent\";\nimport barChart from \"../components/charts/barChart.vue\";\nimport {countDuplicates} from \"../helper/utily\";\nimport Cookies from \"js-cookie\";\nimport DoubleBarChart from \"../components/charts/doubleBarChart\";\n\nexport default {\n    name: 'homePage',\n    data() {\n        return {\n            token: null,\n            userType: null,\n            list: [],\n            results: \"\",\n            usermenu: \"\",\n            dataPoints: null,\n            height: 200,\n            isParent: \"\",\n            activeStudent: \"\",\n            enrollment: \"\",\n            withdraw: \"\",\n            transfer: \"\",\n            post: [],\n            isLoaded: false,\n            countedCrs: {},\n            loading: false,\n            emptyImage: false,\n            noresponse: false,\n            chartdata: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Students by Crs',\n                        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(0, 123, 255, 0.6)', 'rgba(23, 162, 184, 0.6)', 'rgba(255, 193, 7, 0.6)', 'rgba(237, 33, 124, 0.6)', 'rgba(0, 186, 255, 0.6)', 'rgba(18, 189, 215, 0.6)', 'rgba(255, 181, 0, 0.6)', 'rgba(154, 244, 23, 0.6)'],\n                        hoverBackgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(0, 123, 255, 1)', 'rgba(23, 162, 184, 1)', 'rgba(255, 193, 7, 1)', 'rgba(237, 33, 124, 1)', 'rgba(0, 186, 255, 1)', 'rgba(18, 189, 215, 1)', 'rgba(255, 181, 0, 1)', 'rgba(154, 244, 23, 1)'],\n                        borderColor: 'rgba(237, 240, 244, 1)',\n                        borderWidth: 5,\n                        data: []\n                    }\n                ]\n            },\n            chartdata2: {\n                labels: [],\n                datasets: [\n                    {\n                        type: 'bar',\n                        label: '',\n                        backgroundColor: 'rgba(0, 123, 255, 0.6)',\n                        fill: false,\n                        data: []\n                    },\n\n                    {\n                        type: 'bar',\n                        label: '',\n                        backgroundColor: 'rgba(255, 193, 7, 0.6)',\n                        fill: false,\n                        data: []\n                    }\n                ]\n            },\n            chartdata3: {\n                labels: [],\n                datasets: [\n                    {\n                        label: \"\",\n                        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(0, 123, 255, 0.6)', 'rgba(23, 162, 184, 0.6)', 'rgba(255, 193, 7, 0.6)', 'rgba(237, 33, 124, 0.6)', 'rgba(0, 186, 255, 0.6)', 'rgba(18, 189, 215, 0.6)', 'rgba(255, 181, 0, 0.6)', 'rgba(154, 244, 23, 0.6)'],\n                        hoverBackgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(0, 123, 255, 1)', 'rgba(23, 162, 184, 1)', 'rgba(255, 193, 7, 1)', 'rgba(237, 33, 124, 1)', 'rgba(0, 186, 255, 1)', 'rgba(18, 189, 215, 1)', 'rgba(255, 181, 0, 1)', 'rgba(154, 244, 23, 1)'],\n                        borderColor: 'rgba(237, 240, 244, 1)',\n                        borderWidth: 5,\n                        data: []\n                    }\n                ]\n            },\n            chartdata3CustomLabel: [],\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    xAxes: [{\n                        barPercentage: 0.8\n                    }]\n                }\n            },\n            options3: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    xAxes: [{\n                        barPercentage: 0.8\n                    }]\n                }\n            }\n        };\n    },\n    components: {\n        DoubleBarChart,\n        PostComponent,\n        barChart\n        // Step,\n        // LineChart\n    },\n    async mounted() {\n        try {\n\n            this.loading = true;\n            this.isParent = Cookies.get('userTypeSession');\n            this.showSession();\n            // user menu\n            if (this.isParent !== \"Parent\") {\n                this.results = response;\n\n                // window.location.replace(\"/\");\n            }\n            let response = await DataSource.shared.getUserMenu();\n            if (response) {\n                switch (response.code) {\n                    case \"2\":\n                        this.emptyImage = true;\n                        break;\n                    case \"99\":\n                        this.noresponse = true;\n                        this.loading = false;\n                        break;\n                }\n                this.list = response.Table;\n                this.usermenu = response;\n            }\n\n            //login text\n\n            const isLogin = Cookies.get('authToken');\n            if (isLogin && isLogin !== \"null\") {\n                this.results = `You already logged in`;\n                // window.location.replace(\"/\");\n            }\n            // Overwriting base render method with actual data.\n            setInterval(() => {\n                this.fillData();\n            }, 2000);\n\n\n            // activeStudent\n            let activeStudentResponse = await DataSource.shared.getAllActiveStudentsBySchool();\n            if (activeStudentResponse) {\n                switch (activeStudentResponse.code) {\n                    case \"2\":\n                        this.activeStudent = `0`;\n                        break;\n                    case \"99\":\n                        this.emptyImage = true;\n                        this.loading = false;\n                        break;\n\n                }\n                if (activeStudentResponse.Table) {\n                    if (activeStudentResponse.Table && activeStudentResponse.Table.length > 0) {\n                        this.activeStudent = activeStudentResponse.Table.length;\n                    }\n                    const crsNames = activeStudentResponse.Table.map(d => d.CRS_Course_Name);\n                    this.chartdata.labels = [...new Set(crsNames)];\n                    this.countedCrs = countDuplicates(crsNames);\n                    this.chartdata.datasets[0].data = await this.chartdata.labels.map(d => {\n                        for (let key in this.countedCrs) {\n                            if (d === key) {\n                                return this.countedCrs[d];\n                            }\n                        }\n                    });\n                }\n                this.loading = false;\n            }\n\n            //enrollment\n            let enrollmentResponse = await DataSource.shared.getStudentEnrollment();\n            if (enrollmentResponse) {\n                switch (enrollmentResponse.code) {\n                    case \"2\":\n                        this.enrollment = `0`;\n                        break;\n                }\n                if (enrollmentResponse.Table) {\n                    if (enrollmentResponse.Table && enrollmentResponse.Table.length > 0) {\n                        this.enrollment = enrollmentResponse.Table.length;\n                    }\n                }\n            }\n\n            //withdraw\n            let withdrawResponse = await DataSource.shared.getWithdrawStudent();\n            if (withdrawResponse) {\n                switch (withdrawResponse.code) {\n                    case \"2\":\n                        this.withdraw = `0`;\n                        break;\n                }\n                if (withdrawResponse.Table) {\n                    if (withdrawResponse.Table && withdrawResponse.Table.length > 0) {\n                        this.withdraw = withdrawResponse.Table.length;\n                    }\n                }\n            }\n\n\n            //transfer\n            let transferResponse = await DataSource.shared.getTransferStudent();\n            if (transferResponse) {\n                switch (transferResponse.code) {\n                    case \"2\":\n                        this.transfer = `0`;\n                        break;\n                }\n                if (transferResponse.Table) {\n                    if (transferResponse && transferResponse.Table && transferResponse.Table.length > 0) {\n                        this.transfer = transferResponse.Table.length;\n                    }\n                }\n            }\n\n\n            // graph\n\n            //feed\n            if (this.isParent === \"Parent\") {\n                let Parentresponse = await DataSource.shared.getParentPost();\n                if (Parentresponse.Table) {\n                    for (let item of Parentresponse.Table) {\n                        const fileRes = await DataSource.shared.getPostFile(item.PostID);\n                        if (fileRes.Table) {\n                            item.postFiles = fileRes.Table;\n                        }\n                    }\n                    this.post = Parentresponse.Table;\n                }\n            } else {\n                let Staffresponse = await DataSource.shared.getStaffPostHome();\n                if (Staffresponse.Table) {\n                    for (let item of Staffresponse.Table) {\n                        const fileRes = await DataSource.shared.getPostFile(item.PostID);\n                        if (fileRes.Table) {\n                            item.postFiles = fileRes.Table;\n                        }\n                    }\n                    this.post = Staffresponse.Table;\n                }\n            }\n\n            //this.showCompareData();\n            const forecastResponse = await DataSource.shared.getStudentForecastByBranchMonthly();\n            if (forecastResponse) {\n                let compareData = forecastResponse.Table1;\n\n                console.log(\"compareData\", compareData);\n\n                let yearGroup = [];\n                for (const d of compareData) {\n                    if (!yearGroup.includes(d.Year)) {\n                        yearGroup.push(d.Year);\n                    }\n                }\n\n                console.log(\"yearGroup\", yearGroup);\n                yearGroup.forEach((d, i) => {\n                    const data = compareData.filter(a => {\n                        return a.Year === d;\n                    });\n                    console.log(\"data\", data);\n                    const firstDataMonth = Number(data[0].Month);\n                    console.log(\"firstDataMonth\", firstDataMonth);\n\n                    let monthToPush = [];\n                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].forEach((d, index) => {\n                        const startFromOne = index + 1;\n                        if (firstDataMonth > startFromOne) {\n                            monthToPush.push({\n                                Month: String(d),\n                                Value: \"0\",\n                                Year: data[0].Year\n                            });\n                        }\n                    });\n\n                    console.log(\"newData\", monthToPush);\n\n                    const finalData = [...monthToPush, ...data];\n                    console.log(\"finalData\", finalData);\n                    console.log(\"=========\");\n\n                    if (this.chartdata2 && this.chartdata2.datasets && this.chartdata2.datasets[i]) {\n                        console.log(\"this.chartdata2.datasets\", this.chartdata2.datasets);\n                        this.chartdata2.datasets[i].data = finalData.map(b => b.Value);\n                        this.chartdata2.labels = finalData.map(c => c.Month);\n                        this.chartdata2.datasets[i].label = yearGroup;\n                    }\n                });\n\n\n                //CompareData2018\n                // let CompareData2018 = [];\n                // CompareData2018 = compareData.filter(d => {\n                //     return d.Year === \"2018\";\n                // });\n                // // if (this.chartdata2 && this.chartdata2.datasets && this.chartdata2.datasets.length > 0) {\n                // this.chartdata2.datasets[0].data = CompareData2018.map(d => d.Value);\n                // this.chartdata2.labels = CompareData2018.map(d => d.Month);\n                //\n                // //CompareData2019\n                // let CompareData2019 = [];\n                // CompareData2019 = compareData.filter(d => {\n                //     return d.Year === \"2019\";\n                // });\n                // this.chartdata2.datasets[1].data = CompareData2019.map(d => d.Value);\n                // }\n                this.loading = false;\n\n                switch (forecastResponse.code) {\n                    case \"2\":\n                        this.emptyImage = true;\n                        break;\n                    case \"99\":\n                        this.emptyImage = true;\n                        this.loading = false;\n                        break;\n                }\n            }\n\n            //show new enroll graph\n            const newEnrollResponse = await DataSource.shared.getStudentMovementDetailNewEnroll();\n\n\n            // const newEnrollResponse = {\n            //     \"Table1\": [\n            //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"5\"},\n            //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"6\"},\n            //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"7\"},\n            //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"8\"},\n            //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"9\"},\n            //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"10\"},\n            //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"11\"},\n            //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"12\"},\n            //         {\"Year\": \"2020\", \"Enroll\": \"1\", \"Month\": \"1\"},\n            //         {\"Year\": \"2020\", \"Enroll\": \"1\", \"Month\": \"2\"},\n            //         {\"Year\": \"2020\", \"Enroll\": \"1\", \"Month\": \"3\"},\n            //         {\"Year\": \"2020\", \"Enroll\": \"1\", \"Month\": \"4\"}\n            //     ]\n            // };\n            if (newEnrollResponse) {\n                let enrollData = newEnrollResponse.Table;\n\n                console.log(\"enrollData\", enrollData);\n\n                let yearGroup = [];\n                for (const d of enrollData) {\n                    if (!yearGroup.includes(d.Year)) {\n                        yearGroup.push(d.Year);\n                    }\n                }\n\n                console.log(\"yearGroup\", yearGroup);\n                yearGroup.forEach((d, i) => {\n                    const data = enrollData.filter(a => {\n                        console.log(\"d\", a);\n                        console.log();\n                        return a.Year === d;\n                    });\n                    console.log(\"data\", data);\n                    if (this.chartdata3 && this.chartdata3.datasets && this.chartdata3.datasets[i]) {\n                        console.log(\"this.chartdata3\", this.chartdata3);\n                        console.log(\"this.chartdata\", this.chartdata);\n                        this.chartdata3.datasets[i].data = data.map(b => b.Enroll);\n                        this.chartdata3.labels = data.map(c => c.Month);\n                    }\n\n                });\n                this.loading = false;\n                switch (newEnrollResponse.code) {\n                    case \"2\":\n                        this.emptyImage = true;\n                        break;\n                    case \"99\":\n                        this.emptyImage = true;\n                        this.loading = false;\n                        break;\n                }\n\n                this.loading = false;\n                this.isLoaded = true;\n            }\n            // if (newEnrollResponse) {\n            //     console.log(newEnrollResponse);\n            //\n            //     const NewData = newEnrollResponse.Table;\n            //     const NewDataMonth = NewData.map(d => d.Month);\n            //\n            //     this.chartdata3.labels = [...new Set(NewDataMonth)];\n            //     this.chartdata3.datasets[0].data = NewData.map(d => d.Enroll);\n            //\n            //     console.log(this.chartdata3);\n\n\n            //CompareData2019\n            // let Enroll2019 = [];\n            // Enroll2019 = NewData.filter(d => {\n            //     return d.Year === \"2019\";\n            // });\n            // this.chartdata3.datasets[0].data = Enroll2019.map(d => d.Enroll);\n            // this.chartdata3.labels = Enroll2019.map(d => d.Month);\n\n            //CompareData2020\n            // let Enroll2020 = [];\n            // Enroll2020 = NewData.filter(d => {\n            //     return d.Year === \"2020\";\n            // });\n            // this.chartdata3.datasets[1].data = Enroll2020.map(d => d.Enroll);\n\n            // let uniqueMonths = [];\n            // NewData.forEach(object => {\n            //     const isExist = uniqueMonths.find(month => month.Month === object.Month);\n            //     if (!isExist) {\n            //         uniqueMonths.push(object);\n            //     }\n            // });\n            // console.log(uniqueMonths, \"uniqueMonths\");\n            // this.chartdata3.labels = uniqueMonths.map(d => d.Month);\n            // console.log(this.chartdata3.labels, \"uniqueMonths2\");\n            // console.log(this.chartdata3);\n\n\n            // }\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    // mounted() {\n    //     this.showSession()\n    // },\n    methods: {\n        showSession: async function () {\n            this.token = Cookies.get('authToken') || \"no token\";\n            this.userType = Cookies.get('userTypeSession');\n        },\n        increaseHeight() {\n            this.height += 10;\n        },\n        getRandomInt() {\n            return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\n        },\n        fillData() {\n            this.dataPoints = {\n                labels: ['January' + this.getRandomInt(), 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n                datasets: [\n                    {\n                        label: 'Attendance',\n                        backgroundColor: '#f87979',\n                        data: [this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt()]\n                    }\n                ]\n            };\n        },\n        async showCompareData() {\n            console.log(\"aa\");\n            const response = await DataSource.shared.getStudentForecastByBranchMonthly();\n            if (response) {\n                let compareData = response.Table1;\n                let allCompareData = [];\n                allCompareData = compareData && compareData.filter(d => {\n                    return d.Year === \"2019\";\n                });\n\n                if (this.chartdata2 && this.chartdata2.datasets) {\n                    this.chartdata2.datasets[0].data = allCompareData.map(d => d.Value);\n                    console.log(this.chartdata2);\n                }\n\n            }\n        }\n    },\n    computed: {\n        myStyles() {\n            return {\n                height: `${this.height}px`,\n                position: 'relative'\n            };\n        }\n    }\n};\n",{"version":3,"sources":["HomePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"HomePage.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"Content\">\r\n        <div class=\"homeBg\"></div>\r\n        <!--<Step/>-->\r\n        <!--<div>-->\r\n        <!--<b>session token:</b> {{token}}<br/><br/>{{userType}}<br/><br/>-->\r\n        <!--<div v-for=\"object in list\" :key=\"object.UserIDSession\">-->\r\n        <!--{{object.UserIDSession}}-->\r\n        <!--</div>-->\r\n        <!--<h4>USER MENU</h4>-->\r\n        <!--<div style=\"height: 100px;overflow-y: scroll;width:80%;margin: auto;border:1px solid;\">{{usermenu}}</div>-->\r\n        <!--</div>-->\r\n        <div class=\"container\">\r\n            <div class=\"dashboard-title\"><h4 class=\"text-left\" style=\"color: white;\">Overview</h4></div>\r\n            <div class=\"row mb-3\">\r\n                <div class=\"col-md-3 student\">\r\n                    <div class=\"overview__item\">\r\n                        <div class=\"overview__icon\"><img src=\"../assets/home-student.png\"/></div>\r\n                        <div class=\"overview__desc\"><span\r\n                                class=\"large\">{{activeStudent}}</span><span>Students</span></div>\r\n                        <div class=\"quicklink\" v-if=\"isParent !== 'Teacher'\">\r\n                            <a href=\"/student\">NEW STUDENT</a>\r\n                            <a href=\"/student-list?mode=Search\">VIEW ALL</a>\r\n                        </div>\r\n                        <div class=\"quicklink\" v-if=\"isParent === 'Teacher'\">\r\n                            <a href=\"#\">CLASSES</a>\r\n                            <a href=\"#\">STUDENT LIST</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3 teacher\">\r\n                    <div class=\"overview__item\">\r\n                        <div class=\"overview__icon\"><img src=\"../assets/home-enroll.png\"/></div>\r\n                        <div class=\"overview__desc\"><span\r\n                                class=\"large\">{{enrollment}}</span><span>New Enrollment</span></div>\r\n                        <!--<div class=\"quicklink\" v-if=\"isParent !== 'Teacher'\">-->\r\n                        <!--<a href=\"/parent-list\">VIEW / EDIT PARENT</a>-->\r\n                        <!--</div>-->\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3 course\">\r\n                    <div class=\"overview__item\">\r\n                        <div class=\"overview__icon\"><img src=\"../assets/home-withdraw.png\"/></div>\r\n                        <div class=\"overview__desc\"><span class=\"large\">{{withdraw}}</span><span>Withdraw</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3 attendance\">\r\n                    <div class=\"overview__item\">\r\n                        <div class=\"overview__icon\"><img src=\"../assets/home-school.png\"/></div>\r\n                        <div class=\"overview__desc\"><span\r\n                                class=\"large\">{{transfer}}</span><span>Transferred</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mb-4\" style=\"padding: 0 10px;\">\r\n                <div class=\"col-md-9 chartBox\">\r\n                    <div class=\"dashboard-title\"><h4 class=\"text-left\">Statistic</h4></div>\r\n                    <div class=\"small\">\r\n                        <div class=\"chartbox-item\" v-loading=\"loading\">\r\n                            <div class=\"empty-list_image \" v-if=\"emptyImage===true\">\r\n                                <strong class=\"text-left\">No Record Yet...</strong>\r\n                                <img src=\"../assets/notfound.png\"/>\r\n                            </div>\r\n                            <bar-chart\r\n                                    v-if=\"isLoaded\"\r\n                                    :chartdata=\"chartdata\"\r\n                                    :options=\"options\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3 custom-wrapper\">\r\n                    <div class=\"dashboard-title\"><h5 class=\"text-left\">Recent Feed</h5></div>\r\n                    <div class=\"dashboard-subtitle\">\r\n                        <el-tooltip class=\"item\" effect=\"dark\" content=\"View All Activities\" placement=\"top-start\">\r\n                            <a href=\"/feed\">\r\n                                <small>VIEW ALL</small>\r\n                            </a>\r\n                        </el-tooltip>\r\n                    </div>\r\n                    <hr/>\r\n                    <div class=\"dashboard-studentList\">\r\n                        <div class=\"\" v-for=\"object in post\" :key=\"`${object.PostID}`\">\r\n                            <PostComponent\r\n                                    :parent-post=\"object\"\r\n                                    :hideComment=\"true\"\r\n                                    :isHome=\"true\"\r\n                            />\r\n                            <hr/>\r\n                        </div>\r\n                        <!--<li><img src=\"../assets/thumb1.jpg\"/> <span>when an unknown printer took a galley of type </span></li>-->\r\n                    </div>\r\n                    <!--<form class=\"needs-validation form-style\" novalidate @submit.prevent=\"onSubmit\">-->\r\n                    <!--<div class=\"form-group\">-->\r\n                    <!--<label for=\"userID\">ID</label>-->\r\n                    <!--<input type=\"text\" class=\"form-control\" id=\"userID\" v-model=\"userID\"-->\r\n                    <!--required>-->\r\n                    <!--</div>-->\r\n                    <!--<div class=\"form-group\">-->\r\n                    <!--<label for=\"userType\">User Type</label>-->\r\n                    <!--<select class=\"form-control\" id=\"userType\" v-model=\"userType\">-->\r\n                    <!--<option selected value=\"\">Parent</option>-->\r\n                    <!--<option value=\"\">Student</option>-->\r\n                    <!--<option value=\"\">Teacher</option>-->\r\n                    <!--</select>-->\r\n                    <!--</div>-->\r\n                    <!--<div class=\"\">-->\r\n                    <!--<button class=\"custom-btn btn btn-primary col-md-12\" type=\"submit\">Submit-->\r\n                    <!--</button>-->\r\n                    <!--</div>-->\r\n                    <!--</form>-->\r\n                </div>\r\n            </div>\r\n            <div class=\"row mb-3\" style=\"padding: 0 10px;\">\r\n                <div class=\"col-md-6 pl-0\">\r\n                    <div class=\"chartBox\">\r\n                        <div class=\"dashboard-title\"><h4 class=\"text-left\">Student Forecast</h4></div>\r\n                        <div class=\"small\">\r\n                            <!--<line-chart></line-chart>-->\r\n                            <div class=\"chartbox-item\" v-loading=\"loading\">\r\n                                <div class=\"empty-list_image \" v-if=\"emptyImage===true\">\r\n                                    <strong>No Record Yet...</strong>\r\n                                    <img src=\"../assets/notfound.png\"/>\r\n                                </div>\r\n                                <span class=\"d-block text-left\" v-if=\"emptyImage!==true\">Student</span>\r\n                                <double-bar-chart\r\n                                        :chartdata2=\"chartdata2\"\r\n                                        v-if=\"isLoaded\"/>\r\n                                <span class=\"text-right\" v-if=\"emptyImage!==true\">Month</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6 pr-0\">\r\n                    <div class=\"chartBox\">\r\n                        <div class=\"dashboard-title\"><h4 class=\"text-left\">Student Movement</h4></div>\r\n                        <div class=\"small \">\r\n                            <!--<line-chart></line-chart>-->\r\n                            <div class=\"chartbox-item\" v-loading=\"loading\">\r\n                                <div class=\"empty-list_image \" v-if=\"emptyImage===true\">\r\n                                    <strong>No Record Yet...</strong>\r\n                                    <img src=\"../assets/notfound.png\"/>\r\n                                </div>\r\n                                <span class=\"d-block text-left\" v-if=\"emptyImage!==true\">Student</span>\r\n                                <bar-chart\r\n                                        v-if=\"isLoaded\"\r\n                                        :chartdata=\"chartdata3\"\r\n                                        :options=\"options\"/>\r\n                                <!--<double-bar-chart-->\r\n                                <!--:chartdata2=\"chartdata3\"-->\r\n                                <!--v-if=\"isLoaded\"/>-->\r\n                                <span class=\"text-right\" v-if=\"emptyImage!==true\">Month</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--<div class=\" mb-3 home-news\">-->\r\n            <!--<div class=\"dashboard-title\"><h4 class=\"text-left float-left\">Upcoming</h4><a class=\"float-right\"-->\r\n            <!--href=\"#\">MORE </a></div>-->\r\n            <!--<div class=\"row\">-->\r\n            <!--<div class=\"col-md-4 mt-2\">-->\r\n            <!--<div class=\"home-news__item custom-wrapper\">-->\r\n            <!--<strong>Key facts about our school</strong>-->\r\n            <!--<div class=\"thumbnail\">-->\r\n            <!--<img src=\"../assets/news1.jpg\" title=\"News\"/>-->\r\n            <!--</div>-->\r\n            <!--<div class=\"news-content\">-->\r\n            <!--we offer academic, social and personal success for every student. Through opportunities-->\r\n            <!--to learn from the best, experiences beyond the ordinary, and the encouragement to-->\r\n            <!--achieve-->\r\n            <!--more than what they thought possible.-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--<div class=\"col-md-4 mt-2\">-->\r\n            <!--<div class=\"home-news__item custom-wrapper\">-->\r\n            <!--<strong>Key facts about our school</strong>-->\r\n            <!--<div class=\"thumbnail\">-->\r\n            <!--<img src=\"../assets/news2.jpg\" title=\"News\"/>-->\r\n            <!--</div>-->\r\n            <!--<div class=\"news-content\">-->\r\n            <!--we offer academic, social and personal success for every student. Through opportunities-->\r\n            <!--to learn from the best, experiences beyond the ordinary, and the encouragement to-->\r\n            <!--achieve-->\r\n            <!--more than what they thought possible.-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--<div class=\"col-md-4 mt-2\">-->\r\n            <!--<div class=\"home-news__item custom-wrapper\">-->\r\n            <!--<strong>Key facts about our school</strong>-->\r\n            <!--<div class=\"thumbnail\">-->\r\n            <!--<img src=\"../assets/news3.jpg\" title=\"News\"/>-->\r\n            <!--</div>-->\r\n            <!--<div class=\"news-content\">-->\r\n            <!--we offer academic, social and personal success for every student. Through opportunities-->\r\n            <!--to learn from the best, experiences beyond the ordinary, and the encouragement to-->\r\n            <!--achieve-->\r\n            <!--more than what they thought possible.-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    // import Step from \"../components/Step\";\r\n    import DataSource from \"../data/datasource\";\r\n    import PostComponent from \"../components/postCompnent\";\r\n    import barChart from \"../components/charts/barChart.vue\";\r\n    import {countDuplicates} from \"../helper/utily\";\r\n    import Cookies from \"js-cookie\";\r\n    import DoubleBarChart from \"../components/charts/doubleBarChart\";\r\n\r\n    export default {\r\n        name: 'homePage',\r\n        data() {\r\n            return {\r\n                token: null,\r\n                userType: null,\r\n                list: [],\r\n                results: \"\",\r\n                usermenu: \"\",\r\n                dataPoints: null,\r\n                height: 200,\r\n                isParent: \"\",\r\n                activeStudent: \"\",\r\n                enrollment: \"\",\r\n                withdraw: \"\",\r\n                transfer: \"\",\r\n                post: [],\r\n                isLoaded: false,\r\n                countedCrs: {},\r\n                loading: false,\r\n                emptyImage: false,\r\n                noresponse: false,\r\n                chartdata: {\r\n                    labels: [],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Students by Crs',\r\n                            backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(0, 123, 255, 0.6)', 'rgba(23, 162, 184, 0.6)', 'rgba(255, 193, 7, 0.6)', 'rgba(237, 33, 124, 0.6)', 'rgba(0, 186, 255, 0.6)', 'rgba(18, 189, 215, 0.6)', 'rgba(255, 181, 0, 0.6)', 'rgba(154, 244, 23, 0.6)'],\r\n                            hoverBackgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(0, 123, 255, 1)', 'rgba(23, 162, 184, 1)', 'rgba(255, 193, 7, 1)', 'rgba(237, 33, 124, 1)', 'rgba(0, 186, 255, 1)', 'rgba(18, 189, 215, 1)', 'rgba(255, 181, 0, 1)', 'rgba(154, 244, 23, 1)'],\r\n                            borderColor: 'rgba(237, 240, 244, 1)',\r\n                            borderWidth: 5,\r\n                            data: []\r\n                        }\r\n                    ]\r\n                },\r\n                chartdata2: {\r\n                    labels: [],\r\n                    datasets: [\r\n                        {\r\n                            type: 'bar',\r\n                            label: '',\r\n                            backgroundColor: 'rgba(0, 123, 255, 0.6)',\r\n                            fill: false,\r\n                            data: []\r\n                        },\r\n\r\n                        {\r\n                            type: 'bar',\r\n                            label: '',\r\n                            backgroundColor: 'rgba(255, 193, 7, 0.6)',\r\n                            fill: false,\r\n                            data: []\r\n                        }\r\n                    ]\r\n                },\r\n                chartdata3: {\r\n                    labels: [],\r\n                    datasets: [\r\n                        {\r\n                            label: \"\",\r\n                            backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(0, 123, 255, 0.6)', 'rgba(23, 162, 184, 0.6)', 'rgba(255, 193, 7, 0.6)', 'rgba(237, 33, 124, 0.6)', 'rgba(0, 186, 255, 0.6)', 'rgba(18, 189, 215, 0.6)', 'rgba(255, 181, 0, 0.6)', 'rgba(154, 244, 23, 0.6)'],\r\n                            hoverBackgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(0, 123, 255, 1)', 'rgba(23, 162, 184, 1)', 'rgba(255, 193, 7, 1)', 'rgba(237, 33, 124, 1)', 'rgba(0, 186, 255, 1)', 'rgba(18, 189, 215, 1)', 'rgba(255, 181, 0, 1)', 'rgba(154, 244, 23, 1)'],\r\n                            borderColor: 'rgba(237, 240, 244, 1)',\r\n                            borderWidth: 5,\r\n                            data: []\r\n                        }\r\n                    ]\r\n                },\r\n                chartdata3CustomLabel: [],\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        xAxes: [{\r\n                            barPercentage: 0.8\r\n                        }]\r\n                    }\r\n                },\r\n                options3: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        xAxes: [{\r\n                            barPercentage: 0.8\r\n                        }]\r\n                    }\r\n                }\r\n            };\r\n        },\r\n        components: {\r\n            DoubleBarChart,\r\n            PostComponent,\r\n            barChart\r\n            // Step,\r\n            // LineChart\r\n        },\r\n        async mounted() {\r\n            try {\r\n\r\n                this.loading = true;\r\n                this.isParent = Cookies.get('userTypeSession');\r\n                this.showSession();\r\n                // user menu\r\n                if (this.isParent !== \"Parent\") {\r\n                    this.results = response;\r\n\r\n                    // window.location.replace(\"/\");\r\n                }\r\n                let response = await DataSource.shared.getUserMenu();\r\n                if (response) {\r\n                    switch (response.code) {\r\n                        case \"2\":\r\n                            this.emptyImage = true;\r\n                            break;\r\n                        case \"99\":\r\n                            this.noresponse = true;\r\n                            this.loading = false;\r\n                            break;\r\n                    }\r\n                    this.list = response.Table;\r\n                    this.usermenu = response;\r\n                }\r\n\r\n                //login text\r\n\r\n                const isLogin = Cookies.get('authToken');\r\n                if (isLogin && isLogin !== \"null\") {\r\n                    this.results = `You already logged in`;\r\n                    // window.location.replace(\"/\");\r\n                }\r\n                // Overwriting base render method with actual data.\r\n                setInterval(() => {\r\n                    this.fillData();\r\n                }, 2000);\r\n\r\n\r\n                // activeStudent\r\n                let activeStudentResponse = await DataSource.shared.getAllActiveStudentsBySchool();\r\n                if (activeStudentResponse) {\r\n                    switch (activeStudentResponse.code) {\r\n                        case \"2\":\r\n                            this.activeStudent = `0`;\r\n                            break;\r\n                        case \"99\":\r\n                            this.emptyImage = true;\r\n                            this.loading = false;\r\n                            break;\r\n\r\n                    }\r\n                    if (activeStudentResponse.Table) {\r\n                        if (activeStudentResponse.Table && activeStudentResponse.Table.length > 0) {\r\n                            this.activeStudent = activeStudentResponse.Table.length;\r\n                        }\r\n                        const crsNames = activeStudentResponse.Table.map(d => d.CRS_Course_Name);\r\n                        this.chartdata.labels = [...new Set(crsNames)];\r\n                        this.countedCrs = countDuplicates(crsNames);\r\n                        this.chartdata.datasets[0].data = await this.chartdata.labels.map(d => {\r\n                            for (let key in this.countedCrs) {\r\n                                if (d === key) {\r\n                                    return this.countedCrs[d];\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    this.loading = false;\r\n                }\r\n\r\n                //enrollment\r\n                let enrollmentResponse = await DataSource.shared.getStudentEnrollment();\r\n                if (enrollmentResponse) {\r\n                    switch (enrollmentResponse.code) {\r\n                        case \"2\":\r\n                            this.enrollment = `0`;\r\n                            break;\r\n                    }\r\n                    if (enrollmentResponse.Table) {\r\n                        if (enrollmentResponse.Table && enrollmentResponse.Table.length > 0) {\r\n                            this.enrollment = enrollmentResponse.Table.length;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //withdraw\r\n                let withdrawResponse = await DataSource.shared.getWithdrawStudent();\r\n                if (withdrawResponse) {\r\n                    switch (withdrawResponse.code) {\r\n                        case \"2\":\r\n                            this.withdraw = `0`;\r\n                            break;\r\n                    }\r\n                    if (withdrawResponse.Table) {\r\n                        if (withdrawResponse.Table && withdrawResponse.Table.length > 0) {\r\n                            this.withdraw = withdrawResponse.Table.length;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                //transfer\r\n                let transferResponse = await DataSource.shared.getTransferStudent();\r\n                if (transferResponse) {\r\n                    switch (transferResponse.code) {\r\n                        case \"2\":\r\n                            this.transfer = `0`;\r\n                            break;\r\n                    }\r\n                    if (transferResponse.Table) {\r\n                        if (transferResponse && transferResponse.Table && transferResponse.Table.length > 0) {\r\n                            this.transfer = transferResponse.Table.length;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                // graph\r\n\r\n                //feed\r\n                if (this.isParent === \"Parent\") {\r\n                    let Parentresponse = await DataSource.shared.getParentPost();\r\n                    if (Parentresponse.Table) {\r\n                        for (let item of Parentresponse.Table) {\r\n                            const fileRes = await DataSource.shared.getPostFile(item.PostID);\r\n                            if (fileRes.Table) {\r\n                                item.postFiles = fileRes.Table;\r\n                            }\r\n                        }\r\n                        this.post = Parentresponse.Table;\r\n                    }\r\n                } else {\r\n                    let Staffresponse = await DataSource.shared.getStaffPostHome();\r\n                    if (Staffresponse.Table) {\r\n                        for (let item of Staffresponse.Table) {\r\n                            const fileRes = await DataSource.shared.getPostFile(item.PostID);\r\n                            if (fileRes.Table) {\r\n                                item.postFiles = fileRes.Table;\r\n                            }\r\n                        }\r\n                        this.post = Staffresponse.Table;\r\n                    }\r\n                }\r\n\r\n                //this.showCompareData();\r\n                const forecastResponse = await DataSource.shared.getStudentForecastByBranchMonthly();\r\n                if (forecastResponse) {\r\n                    let compareData = forecastResponse.Table1;\r\n\r\n                    console.log(\"compareData\", compareData);\r\n\r\n                    let yearGroup = [];\r\n                    for (const d of compareData) {\r\n                        if (!yearGroup.includes(d.Year)) {\r\n                            yearGroup.push(d.Year);\r\n                        }\r\n                    }\r\n\r\n                    console.log(\"yearGroup\", yearGroup);\r\n                    yearGroup.forEach((d, i) => {\r\n                        const data = compareData.filter(a => {\r\n                            return a.Year === d;\r\n                        });\r\n                        console.log(\"data\", data);\r\n                        const firstDataMonth = Number(data[0].Month);\r\n                        console.log(\"firstDataMonth\", firstDataMonth);\r\n\r\n                        let monthToPush = [];\r\n                        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].forEach((d, index) => {\r\n                            const startFromOne = index + 1;\r\n                            if (firstDataMonth > startFromOne) {\r\n                                monthToPush.push({\r\n                                    Month: String(d),\r\n                                    Value: \"0\",\r\n                                    Year: data[0].Year\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                        console.log(\"newData\", monthToPush);\r\n\r\n                        const finalData = [...monthToPush, ...data];\r\n                        console.log(\"finalData\", finalData);\r\n                        console.log(\"=========\");\r\n\r\n                        if (this.chartdata2 && this.chartdata2.datasets && this.chartdata2.datasets[i]) {\r\n                            console.log(\"this.chartdata2.datasets\", this.chartdata2.datasets);\r\n                            this.chartdata2.datasets[i].data = finalData.map(b => b.Value);\r\n                            this.chartdata2.labels = finalData.map(c => c.Month);\r\n                            this.chartdata2.datasets[i].label = yearGroup;\r\n                        }\r\n                    });\r\n\r\n\r\n                    //CompareData2018\r\n                    // let CompareData2018 = [];\r\n                    // CompareData2018 = compareData.filter(d => {\r\n                    //     return d.Year === \"2018\";\r\n                    // });\r\n                    // // if (this.chartdata2 && this.chartdata2.datasets && this.chartdata2.datasets.length > 0) {\r\n                    // this.chartdata2.datasets[0].data = CompareData2018.map(d => d.Value);\r\n                    // this.chartdata2.labels = CompareData2018.map(d => d.Month);\r\n                    //\r\n                    // //CompareData2019\r\n                    // let CompareData2019 = [];\r\n                    // CompareData2019 = compareData.filter(d => {\r\n                    //     return d.Year === \"2019\";\r\n                    // });\r\n                    // this.chartdata2.datasets[1].data = CompareData2019.map(d => d.Value);\r\n                    // }\r\n                    this.loading = false;\r\n\r\n                    switch (forecastResponse.code) {\r\n                        case \"2\":\r\n                            this.emptyImage = true;\r\n                            break;\r\n                        case \"99\":\r\n                            this.emptyImage = true;\r\n                            this.loading = false;\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                //show new enroll graph\r\n                const newEnrollResponse = await DataSource.shared.getStudentMovementDetailNewEnroll();\r\n\r\n\r\n                // const newEnrollResponse = {\r\n                //     \"Table1\": [\r\n                //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"5\"},\r\n                //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"6\"},\r\n                //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"7\"},\r\n                //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"8\"},\r\n                //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"9\"},\r\n                //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"10\"},\r\n                //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"11\"},\r\n                //         {\"Year\": \"2019\", \"Enroll\": \"1\", \"Month\": \"12\"},\r\n                //         {\"Year\": \"2020\", \"Enroll\": \"1\", \"Month\": \"1\"},\r\n                //         {\"Year\": \"2020\", \"Enroll\": \"1\", \"Month\": \"2\"},\r\n                //         {\"Year\": \"2020\", \"Enroll\": \"1\", \"Month\": \"3\"},\r\n                //         {\"Year\": \"2020\", \"Enroll\": \"1\", \"Month\": \"4\"}\r\n                //     ]\r\n                // };\r\n                if (newEnrollResponse) {\r\n                    let enrollData = newEnrollResponse.Table;\r\n\r\n                    console.log(\"enrollData\", enrollData);\r\n\r\n                    let yearGroup = [];\r\n                    for (const d of enrollData) {\r\n                        if (!yearGroup.includes(d.Year)) {\r\n                            yearGroup.push(d.Year);\r\n                        }\r\n                    }\r\n\r\n                    console.log(\"yearGroup\", yearGroup);\r\n                    yearGroup.forEach((d, i) => {\r\n                        const data = enrollData.filter(a => {\r\n                            console.log(\"d\", a);\r\n                            console.log();\r\n                            return a.Year === d;\r\n                        });\r\n                        console.log(\"data\", data);\r\n                        if (this.chartdata3 && this.chartdata3.datasets && this.chartdata3.datasets[i]) {\r\n                            console.log(\"this.chartdata3\", this.chartdata3);\r\n                            console.log(\"this.chartdata\", this.chartdata);\r\n                            this.chartdata3.datasets[i].data = data.map(b => b.Enroll);\r\n                            this.chartdata3.labels = data.map(c => c.Month);\r\n                        }\r\n\r\n                    });\r\n                    this.loading = false;\r\n                    switch (newEnrollResponse.code) {\r\n                        case \"2\":\r\n                            this.emptyImage = true;\r\n                            break;\r\n                        case \"99\":\r\n                            this.emptyImage = true;\r\n                            this.loading = false;\r\n                            break;\r\n                    }\r\n\r\n                    this.loading = false;\r\n                    this.isLoaded = true;\r\n                }\r\n                // if (newEnrollResponse) {\r\n                //     console.log(newEnrollResponse);\r\n                //\r\n                //     const NewData = newEnrollResponse.Table;\r\n                //     const NewDataMonth = NewData.map(d => d.Month);\r\n                //\r\n                //     this.chartdata3.labels = [...new Set(NewDataMonth)];\r\n                //     this.chartdata3.datasets[0].data = NewData.map(d => d.Enroll);\r\n                //\r\n                //     console.log(this.chartdata3);\r\n\r\n\r\n                //CompareData2019\r\n                // let Enroll2019 = [];\r\n                // Enroll2019 = NewData.filter(d => {\r\n                //     return d.Year === \"2019\";\r\n                // });\r\n                // this.chartdata3.datasets[0].data = Enroll2019.map(d => d.Enroll);\r\n                // this.chartdata3.labels = Enroll2019.map(d => d.Month);\r\n\r\n                //CompareData2020\r\n                // let Enroll2020 = [];\r\n                // Enroll2020 = NewData.filter(d => {\r\n                //     return d.Year === \"2020\";\r\n                // });\r\n                // this.chartdata3.datasets[1].data = Enroll2020.map(d => d.Enroll);\r\n\r\n                // let uniqueMonths = [];\r\n                // NewData.forEach(object => {\r\n                //     const isExist = uniqueMonths.find(month => month.Month === object.Month);\r\n                //     if (!isExist) {\r\n                //         uniqueMonths.push(object);\r\n                //     }\r\n                // });\r\n                // console.log(uniqueMonths, \"uniqueMonths\");\r\n                // this.chartdata3.labels = uniqueMonths.map(d => d.Month);\r\n                // console.log(this.chartdata3.labels, \"uniqueMonths2\");\r\n                // console.log(this.chartdata3);\r\n\r\n\r\n                // }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        },\r\n        // mounted() {\r\n        //     this.showSession()\r\n        // },\r\n        methods: {\r\n            showSession: async function () {\r\n                this.token = Cookies.get('authToken') || \"no token\";\r\n                this.userType = Cookies.get('userTypeSession');\r\n            },\r\n            increaseHeight() {\r\n                this.height += 10;\r\n            },\r\n            getRandomInt() {\r\n                return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\r\n            },\r\n            fillData() {\r\n                this.dataPoints = {\r\n                    labels: ['January' + this.getRandomInt(), 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Attendance',\r\n                            backgroundColor: '#f87979',\r\n                            data: [this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt()]\r\n                        }\r\n                    ]\r\n                };\r\n            },\r\n            async showCompareData() {\r\n                console.log(\"aa\");\r\n                const response = await DataSource.shared.getStudentForecastByBranchMonthly();\r\n                if (response) {\r\n                    let compareData = response.Table1;\r\n                    let allCompareData = [];\r\n                    allCompareData = compareData && compareData.filter(d => {\r\n                        return d.Year === \"2019\";\r\n                    });\r\n\r\n                    if (this.chartdata2 && this.chartdata2.datasets) {\r\n                        this.chartdata2.datasets[0].data = allCompareData.map(d => d.Value);\r\n                        console.log(this.chartdata2);\r\n                    }\r\n\r\n                }\r\n            }\r\n        },\r\n        computed: {\r\n            myStyles() {\r\n                return {\r\n                    height: `${this.height}px`,\r\n                    position: 'relative'\r\n                };\r\n            }\r\n        }\r\n    };\r\n</script>\r\n<style scoped>\r\n    .Content {\r\n        padding: 30px 20px;\r\n        position: relative;\r\n        margin-top: 30px;\r\n    }\r\n\r\n    .overview__item {\r\n        background: white;\r\n        margin: 20px 10px;\r\n        padding: 20px;\r\n        display: -webkit-box;\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        border-radius: 5px;\r\n        align-items: center;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .overview__item div {\r\n        flex: 1;\r\n    }\r\n\r\n    .overview__icon i {\r\n        background: #f5f6fa;\r\n        padding: 10px;\r\n        border-radius: 4px;\r\n        border: 1px solid #f0f1f3;\r\n        width: 50px;\r\n        font-size: 22px;\r\n        color: white;\r\n    }\r\n\r\n    .student, .teacher, .course, .attendance {\r\n        padding: 0px;\r\n    }\r\n\r\n    .student .overview__icon i {\r\n        background: #eb4052;\r\n    }\r\n\r\n    .teacher .overview__icon i {\r\n        background: #00dcff;\r\n    }\r\n\r\n    .course .overview__icon i {\r\n        background: #ffcb07;\r\n    }\r\n\r\n    .attendance .overview__icon i {\r\n        background: #7b9fff;\r\n    }\r\n\r\n    .overview__desc .large {\r\n        font-size: 29px;\r\n        display: block;\r\n        line-height: 29px;\r\n    }\r\n\r\n    .overview__item .overview__desc {\r\n        flex: 2;\r\n    }\r\n\r\n    .custom-wrapper {\r\n        background: #fff;\r\n        padding: 20px;\r\n    }\r\n\r\n    .custom-btn {\r\n        background-color: #f13b4a;\r\n        border-color: #f13b4a;\r\n    }\r\n\r\n    .custom-btn:hover,\r\n    .custom-btn:focus,\r\n    .custom-btn:active {\r\n        background-color: #828282 !important;\r\n        border-color: #828282 !important;\r\n        -webkit-box-shadow: 0 0 0 0.2rem rgb(204, 204, 204) !important;\r\n        box-shadow: 0 0 0 0.2rem rgb(204, 204, 204) !important;\r\n    }\r\n\r\n    .thumbnail img {\r\n        max-width: 100%;\r\n    }\r\n\r\n    .home-news__item {\r\n        background: white !important;\r\n    }\r\n\r\n    .home-news__item strong {\r\n        font-size: 16px;\r\n        margin-bottom: 10px;\r\n        display: block;\r\n    }\r\n\r\n    .thumbnail {\r\n        width: 80%;\r\n        margin: 20px auto;\r\n    }\r\n\r\n    .dashboard-title {\r\n        display: table;\r\n        width: 100%;\r\n        position: relative;\r\n    }\r\n</style>\r\n"]}]}