{"remainingRequest":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\pages\\PendingPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\pages\\PendingPost.vue","mtime":1545926644669},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1545311081350},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js","mtime":1545311099620}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\n\nexport default {\n    name: 'PendingPost',\n    data() {\n        return {\n            list: [],\n            titles: [{\n                prop: \"ID\",\n                label: \"ID\"\n            }, {\n                prop: \"PostApproverID\",\n                label: \"Approver ID\"\n            }, {\n                prop: \"PostContent\",\n                label: \"Content\"\n            }, {\n                prop: \"PostCreatedDate\",\n                label: \"Created At\"\n            }, {\n                prop: \"PostSchoolID\",\n                label: \"School ID\"\n            }, {\n                prop: \"PostProfolio\",\n                label: \"PostProfolio\"\n            }, {\n                prop: \"PostApproverStatus\",\n                label: \"Approver Status\"\n            }, {\n                prop: \"PostStatus\",\n                label: \"Post Status\"\n            }],\n            actionCol: {\n                label: 'Approved',\n                props: {\n                    align: 'center',\n                },\n                buttons: [{\n                    props: {\n                        type: 'primary',\n                        // icon: 'el-icon-edit'\n                    },\n                    handler: async row => {\n                        try {\n                            console.log(\"clicked row data: \", row);\n\n                            // call approve post api\n                            const response = await DataSource.shared.approvePost(row.PostApproverID, \"Approved\");\n                            console.log('approve response: ', response);\n\n                            // update pending post view on success\n                            this.getPendingPost();\n                        } catch (error) {\n                            // log error\n                            console.log(error);\n                        }\n\n                    },\n                    label: 'Approve'\n                }]\n            },\n            selectedRow: null,\n            results: null\n        };\n    },\n    methods: {\n        async getPendingPost() {\n            try {\n                const response = await DataSource.shared.pendingPost();\n                if (response) {\n                    this.list = response.Table;\n                    switch (response.code) {\n                        case \"2\":\n                            this.results = `No Record Found`;\n                            //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\n                            break;\n                        case \"88\":\n                            this.results = `Please login`;\n                            //this.results = `Invalid password - sample 2: code: ${response.code}`;\n                            break;\n                        case \"99\":\n                            this.results = `Please try again later`;\n                            //this.results = `Please fill in all field - sample 3: code: ${response.code}`;\n                            break;\n                    }\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    },\n    async mounted() {\n        this.getPendingPost();\n    }\n    ,\n}\n;\n",{"version":3,"sources":["PendingPost.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PendingPost.vue","sourceRoot":"src\\pages","sourcesContent":["<template>\r\n    <div id=\"staff-post\" class=\"mt-3 container\">\r\n        <div>\r\n            <h4>PENDING POST</h4>\r\n\r\n            <div v-if=\"list && list.length>0\">\r\n                <data-tables-server :data=\"list\" @selection-change=\"handleSelectionChange\" :fit=\"false\"\r\n                                    :action-col=\"actionCol\">\r\n                    <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n\r\n                    <el-table-column v-for=\"title in titles\" :prop=\"title.prop\" :label=\"title.label\" :key=\"title.prop\"\r\n                                     :width=\"title.width\"\r\n                                     sortable=\"custom\">\r\n                    </el-table-column>\r\n\r\n                </data-tables-server>\r\n            </div>\r\n            <div v-else-if=\"results==='No Record Found'\">\r\n                No Record Found\r\n            </div>\r\n            <div v-else>\r\n                {{results}}\r\n                Loading...\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: 'PendingPost',\r\n        data() {\r\n            return {\r\n                list: [],\r\n                titles: [{\r\n                    prop: \"ID\",\r\n                    label: \"ID\"\r\n                }, {\r\n                    prop: \"PostApproverID\",\r\n                    label: \"Approver ID\"\r\n                }, {\r\n                    prop: \"PostContent\",\r\n                    label: \"Content\"\r\n                }, {\r\n                    prop: \"PostCreatedDate\",\r\n                    label: \"Created At\"\r\n                }, {\r\n                    prop: \"PostSchoolID\",\r\n                    label: \"School ID\"\r\n                }, {\r\n                    prop: \"PostProfolio\",\r\n                    label: \"PostProfolio\"\r\n                }, {\r\n                    prop: \"PostApproverStatus\",\r\n                    label: \"Approver Status\"\r\n                }, {\r\n                    prop: \"PostStatus\",\r\n                    label: \"Post Status\"\r\n                }],\r\n                actionCol: {\r\n                    label: 'Approved',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            // icon: 'el-icon-edit'\r\n                        },\r\n                        handler: async row => {\r\n                            try {\r\n                                console.log(\"clicked row data: \", row);\r\n\r\n                                // call approve post api\r\n                                const response = await DataSource.shared.approvePost(row.PostApproverID, \"Approved\");\r\n                                console.log('approve response: ', response);\r\n\r\n                                // update pending post view on success\r\n                                this.getPendingPost();\r\n                            } catch (error) {\r\n                                // log error\r\n                                console.log(error);\r\n                            }\r\n\r\n                        },\r\n                        label: 'Approve'\r\n                    }]\r\n                },\r\n                selectedRow: null,\r\n                results: null\r\n            };\r\n        },\r\n        methods: {\r\n            async getPendingPost() {\r\n                try {\r\n                    const response = await DataSource.shared.pendingPost();\r\n                    if (response) {\r\n                        this.list = response.Table;\r\n                        switch (response.code) {\r\n                            case \"2\":\r\n                                this.results = `No Record Found`;\r\n                                //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\r\n                                break;\r\n                            case \"88\":\r\n                                this.results = `Please login`;\r\n                                //this.results = `Invalid password - sample 2: code: ${response.code}`;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Please try again later`;\r\n                                //this.results = `Please fill in all field - sample 3: code: ${response.code}`;\r\n                                break;\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n        },\r\n        async mounted() {\r\n            this.getPendingPost();\r\n        }\r\n        ,\r\n    }\r\n    ;\r\n</script>\r\n\r\n<style>\r\n    thead.vs-table--thead th {\r\n        width: auto;\r\n        text-align: center !important;\r\n    }\r\n\r\n    .vs-table--tbody-table .tr-table td {\r\n        text-align: left;\r\n    }\r\n</style>"]}]}