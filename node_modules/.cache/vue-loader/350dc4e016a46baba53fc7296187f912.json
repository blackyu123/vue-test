{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\Event.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\Event.vue","mtime":1557416574361},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552619058231},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1552619052419},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552619058231},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1552619058571}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\nimport Vue from 'vue';\nimport VCalendar from 'v-calendar';\nconst API_HOST = process.env.VUE_APP_ROOT_API;\nVue.use(VCalendar, {\n    componentPrefix: 'v',  // Use <vc-calendar /> instead of <v-calendar />\n    // ...,                // ...other defaults\n});\nexport default {\n    name: \"Event\",\n    async mounted() {\n        await this.LoadEventDetails();\n    },\n    data(){\n        return{\n            eventList:[],\n            inputEventStartTime:'',\n            inputEventEndTime:'',\n            picked:\"Event\",\n            selected:[\n            ],\n            options:[\n                {text:'Full Day event?', value:'fullDayEvent'},\n                {text:'Parent sign up?', value:'parentSignUp'},\n            ],\n            inputEventRegCutOffDay:'0',\n            inputEventRegLimit:'0',\n            inputEventTitle:'',\n            inputEventLocation:'',\n            inputEventDesc:'',\n\n            //v-calendar\n            mode:'single',\n            selectedDate:null,\n        }\n    },\n    methods:{\n        getEventTime(startValue,endValue){\n            try{\n                let startTime = new Date(startValue);\n                let endTime = new Date(endValue);\n                let timeDiff = Math.abs(endTime.getTime()-startTime.getTime());\n                let diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\n                let starthour = new Date(startValue).getHours();\n                let startminute = new Date(startValue).getMinutes();\n                let endhour = new Date(endValue).getHours();\n                let endminute = new Date(endValue).getMinutes();\n                let Time;\n                if(diffDays>=1)\n                {\n                    return \"All Day\";\n                }\n                else{\n                    Time = starthour + \":\" + startminute + \"am/pm to \" +endhour+\":\"+endminute+\"am/pm\";\n                    console.log(Time);\n                    return Time;\n                }\n            }catch{\n\n            }\n        },\n        convertToDate(startTime){\n            let day = new Date(startTime).getDate();\n            let month = new Date(startTime).getMonth() + 1;\n            let year = new Date(startTime).getFullYear();\n            let date;\n\n            let monthValue = new Array();\n            monthValue[0] = \"January\";\n            monthValue[1] = \"February\";\n            monthValue[2] = \"March\";\n            monthValue[3] = \"April\";\n            monthValue[4] = \"May\";\n            monthValue[5] = \"June\";\n            monthValue[6] = \"July\";\n            monthValue[7] = \"August\";\n            monthValue[8] = \"September\";\n            monthValue[9] = \"October\";\n            monthValue[10] = \"November\";\n            monthValue[11] = \"December\";\n\n            let m = monthValue[month-1];\n            date = day + \"th \" + m + \" \" + year;\n            return date;\n        },\n        async btnSignUp(){},\n        async btnCreateEvent(){\n            console.log(this.inputEventTitle);\n            console.log(this.picked);\n            console.log(this.inputEventStartTime);\n            console.log(this.inputEventEndTime);\n            console.log(this.selected);\n            //console.log(this.options.selected);\n            console.log(this.inputEventRegCutOffDay);\n            console.log(this.inputEventRegLimit);\n            console.log(this.inputEventLocation);\n\n            try\n            {\n                var withdrawObj = {\n                    EventTitle:this.inputEventTitle,\n                    EventType:this.picked,\n                    EventStartTime:this.inputEventStartTime,\n                    EventEndTime:this.inputEventEndTime,\n                        //temp value\n                    EventFullDay:\"Yes\",\n                    EventParentSignUp:\"No\",\n                        //end temp value\n                    EventRegCutOffDay:this.inputEventRegCutOffDay,\n                    EventRegLimit:this.inputEventRegLimit,\n                    EventLocation: this.inputEventLocation,\n                    // EventDesc:this:inputEventDesc\n\n                };\n\n                if(this.inputEventTitle=== '' || this.inputEventTitle === null || this.inputEventTitle === undefined){\n                    alert('Please create event title.');\n                }\n                else if(this.inputEventStartTime === '' || this.inputEventStartTime === null || this.inputEventStartTime === undefined){\n                    alert('Please select date from.');\n                }\n                else if(this.inputEventEndTime === '' || this.inputEventEndTime === null || this.inputEventEndTime === undefined){\n                    alert('Please select date to');\n                }\n                else{\n\n                    const response = await DataSource.shared.saveEvent(JSON.stringify(withdrawObj));\n\n                    if(response.code==='88'){\n                        console.log('88');\n                    }\n                    else if(response.code===\"99\"){\n                        console.log('99');\n                    }\n                    else if(response.code==='1'){\n                        alert('Event added Successful');\n                        window.location.replace('/Event');\n                    }\n                }\n            }\n            catch (e) {\n                alert(e);\n                console.log(e);\n            }\n        },\n        async btnAddClasses(){\n\n        },\n        async btnAddToCalendar(){\n\n        },\n        LoadEventDetails() {\n            try{\n                const response = DataSource.shared.getEvent();\n                response.then((response)=>{\n\n                    if(response.Table.length < 1){\n                        alert('No record found');\n                        console.log('No record found');\n                    }\n                    else {\n                        this.eventList = (response.Table)? response.Table:[];\n                        console.log('1');\n                    }\n                });\n            }catch(e){\n                alert(e);\n                console.log(e);\n            }\n        },\n    },\n}\n",{"version":3,"sources":["Event.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Event.vue","sourceRoot":"src\\pages","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n            <b-btn v-b-modal.create_event_modal variant=\"primary\" class=\"btnCreateEvent\">\r\n                Create Event\r\n            </b-btn>\r\n        </div>\r\n\r\n        <b-modal id=\"create_event_modal\" Title =\"Create Event Calender\" ref=\"EventShowModal\" ok-only\r\n                 ok-variant=\"secondary\">\r\n\r\n                <div class=\"row col-lg-12 col-md-12 col-sm-12 col-xs-12\" title=\"Event Type\">\r\n\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                        <label><h1>Calendar Title</h1></label>\r\n                        <input type=\"text\" class=\"form-control\" v-model=\"inputEventTitle\">\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                <label for=\"publicholiday\">Public Holiday</label>\r\n                                <input type =\"radio\" id=\"publicholiday\" value=\"PublicHoliday\" v-model=\"picked\">\r\n                            </div>\r\n\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                <label for=\"schoolclosure\">School Closure</label>\r\n                                <input type =\"radio\" id=\"schoolclosure\" value=\"SchoolClosure\" v-model=\"picked\">\r\n                            </div>\r\n\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                <label for=\"event\">Event</label>\r\n                                <input type =\"radio\" id=\"event\" value=\"Event\" v-model=\"picked\" checked>\r\n                            </div>\r\n\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                <span>Picked: {{ picked }}</span>\r\n                            </div>\r\n\r\n                    <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                <label>From</label>\r\n                                <el-date-picker v-model=\"inputEventStartTime\" format=\"dd-MM-yyyy HH:mm:ss\"\r\n                                                value-format=\"dd-MM-yyyy HH:mm:ss\" type=\"datetime\"\r\n                                                placeholder=\"Pick a day\"></el-date-picker>\r\n                            </div>\r\n\r\n                    <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                <label>To</label>\r\n                                <el-date-picker v-model=\"inputEventEndTime\" format=\"dd-MM-yyyy HH:mm:ss\"\r\n                                                value-format=\"dd-MM-yyyy HH:mm:ss\" type=\"datetime\"\r\n                                                placeholder=\"Pick a day\"></el-date-picker>\r\n                        <br>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                        <b-form-group label=\"Event Details\">\r\n                            <b-form-checkbox-group\r\n                                    v-model=\"selected\"\r\n                                    :options=\"options\"\r\n                                    switches\r\n                                    stacked\r\n                            ></b-form-checkbox-group>\r\n                        </b-form-group>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                        <label>Registration cutoff(days)</label>\r\n                        <input type=\"text\" class=\"form-control\" v-model=\"inputEventRegCutOffDay\" value=\"0\">\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                        <label>Registration Limit</label>\r\n                        <b-form-input id=\"range-1\" v-model=\"inputEventRegLimit\" type=\"range\" value=\"0\" min=\"0\" max=\"5\" step=\"1\"></b-form-input>\r\n                        <div class=\"mt-2\">Days: {{ inputEventRegLimit }}</div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                        <button v-on:click=\"btnAddClasses()\">Add Classes</button>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                        <label>Location</label>\r\n                        <input type=\"text\" class=\"form-control\" v-model=\"inputEventLocation\">\r\n                    </div>\r\n\r\n                </div>\r\n            <button v-on:click=\"btnCreateEvent()\">Create Event</button>\r\n\r\n        </b-modal>\r\n\r\n        <div class=\"container\">\r\n            <div>\r\n                <h1>Event Overview</h1>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg\">\r\n                    <h5>Event Details</h5>\r\n                    <div style=\"overflow-x:scroll; height:800px; background:whitesmoke\">\r\n                        <ul>\r\n                            <li v-for=\"item in eventList\" v-bind:key=\"item.EventID\" ref=\"\">\r\n                                <a href=\"\">{{item.EventTitle}}</a>\r\n                                <br>\r\n                                {{convertToDate(item.EventStartTime)}}\r\n                                {{getEventTime(item.EventStartTime,item.EventEndTime)}}\r\n                                {{item.EventLocation}}\r\n                                {{item.CONname}}\r\n                                <b-btn class=\"btnSignUp\" v-on:click=\"btnSignUp()\">Sign Up</b-btn>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm\">\r\n                    <h5>Upcoming Event</h5>\r\n                </div>\r\n\r\n                <div class=\"col-sm\">\r\n                    <h5>Calender</h5>\r\n                    <div>\r\n                        <v-calendar title-position=\"right\"></v-calendar>\r\n                        <v-date-picker :mode='mode' v-model='selectedDate'/>\r\n                    </div>\r\n                    <div>\r\n                        <button v-on:click=\"btnAddToCalendar()\">Add to calendar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n    import Vue from 'vue';\r\n    import VCalendar from 'v-calendar';\r\n    const API_HOST = process.env.VUE_APP_ROOT_API;\r\n    Vue.use(VCalendar, {\r\n        componentPrefix: 'v',  // Use <vc-calendar /> instead of <v-calendar />\r\n        // ...,                // ...other defaults\r\n    });\r\n    export default {\r\n        name: \"Event\",\r\n        async mounted() {\r\n            await this.LoadEventDetails();\r\n        },\r\n        data(){\r\n            return{\r\n                eventList:[],\r\n                inputEventStartTime:'',\r\n                inputEventEndTime:'',\r\n                picked:\"Event\",\r\n                selected:[\r\n                ],\r\n                options:[\r\n                    {text:'Full Day event?', value:'fullDayEvent'},\r\n                    {text:'Parent sign up?', value:'parentSignUp'},\r\n                ],\r\n                inputEventRegCutOffDay:'0',\r\n                inputEventRegLimit:'0',\r\n                inputEventTitle:'',\r\n                inputEventLocation:'',\r\n                inputEventDesc:'',\r\n\r\n                //v-calendar\r\n                mode:'single',\r\n                selectedDate:null,\r\n            }\r\n        },\r\n        methods:{\r\n            getEventTime(startValue,endValue){\r\n                try{\r\n                    let startTime = new Date(startValue);\r\n                    let endTime = new Date(endValue);\r\n                    let timeDiff = Math.abs(endTime.getTime()-startTime.getTime());\r\n                    let diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                    let starthour = new Date(startValue).getHours();\r\n                    let startminute = new Date(startValue).getMinutes();\r\n                    let endhour = new Date(endValue).getHours();\r\n                    let endminute = new Date(endValue).getMinutes();\r\n                    let Time;\r\n                    if(diffDays>=1)\r\n                    {\r\n                        return \"All Day\";\r\n                    }\r\n                    else{\r\n                        Time = starthour + \":\" + startminute + \"am/pm to \" +endhour+\":\"+endminute+\"am/pm\";\r\n                        console.log(Time);\r\n                        return Time;\r\n                    }\r\n                }catch{\r\n\r\n                }\r\n            },\r\n            convertToDate(startTime){\r\n                let day = new Date(startTime).getDate();\r\n                let month = new Date(startTime).getMonth() + 1;\r\n                let year = new Date(startTime).getFullYear();\r\n                let date;\r\n\r\n                let monthValue = new Array();\r\n                monthValue[0] = \"January\";\r\n                monthValue[1] = \"February\";\r\n                monthValue[2] = \"March\";\r\n                monthValue[3] = \"April\";\r\n                monthValue[4] = \"May\";\r\n                monthValue[5] = \"June\";\r\n                monthValue[6] = \"July\";\r\n                monthValue[7] = \"August\";\r\n                monthValue[8] = \"September\";\r\n                monthValue[9] = \"October\";\r\n                monthValue[10] = \"November\";\r\n                monthValue[11] = \"December\";\r\n\r\n                let m = monthValue[month-1];\r\n                date = day + \"th \" + m + \" \" + year;\r\n                return date;\r\n            },\r\n            async btnSignUp(){},\r\n            async btnCreateEvent(){\r\n                console.log(this.inputEventTitle);\r\n                console.log(this.picked);\r\n                console.log(this.inputEventStartTime);\r\n                console.log(this.inputEventEndTime);\r\n                console.log(this.selected);\r\n                //console.log(this.options.selected);\r\n                console.log(this.inputEventRegCutOffDay);\r\n                console.log(this.inputEventRegLimit);\r\n                console.log(this.inputEventLocation);\r\n\r\n                try\r\n                {\r\n                    var withdrawObj = {\r\n                        EventTitle:this.inputEventTitle,\r\n                        EventType:this.picked,\r\n                        EventStartTime:this.inputEventStartTime,\r\n                        EventEndTime:this.inputEventEndTime,\r\n                            //temp value\r\n                        EventFullDay:\"Yes\",\r\n                        EventParentSignUp:\"No\",\r\n                            //end temp value\r\n                        EventRegCutOffDay:this.inputEventRegCutOffDay,\r\n                        EventRegLimit:this.inputEventRegLimit,\r\n                        EventLocation: this.inputEventLocation,\r\n                        // EventDesc:this:inputEventDesc\r\n\r\n                    };\r\n\r\n                    if(this.inputEventTitle=== '' || this.inputEventTitle === null || this.inputEventTitle === undefined){\r\n                        alert('Please create event title.');\r\n                    }\r\n                    else if(this.inputEventStartTime === '' || this.inputEventStartTime === null || this.inputEventStartTime === undefined){\r\n                        alert('Please select date from.');\r\n                    }\r\n                    else if(this.inputEventEndTime === '' || this.inputEventEndTime === null || this.inputEventEndTime === undefined){\r\n                        alert('Please select date to');\r\n                    }\r\n                    else{\r\n\r\n                        const response = await DataSource.shared.saveEvent(JSON.stringify(withdrawObj));\r\n\r\n                        if(response.code==='88'){\r\n                            console.log('88');\r\n                        }\r\n                        else if(response.code===\"99\"){\r\n                            console.log('99');\r\n                        }\r\n                        else if(response.code==='1'){\r\n                            alert('Event added Successful');\r\n                            window.location.replace('/Event');\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    alert(e);\r\n                    console.log(e);\r\n                }\r\n            },\r\n            async btnAddClasses(){\r\n\r\n            },\r\n            async btnAddToCalendar(){\r\n\r\n            },\r\n            LoadEventDetails() {\r\n                try{\r\n                    const response = DataSource.shared.getEvent();\r\n                    response.then((response)=>{\r\n\r\n                        if(response.Table.length < 1){\r\n                            alert('No record found');\r\n                            console.log('No record found');\r\n                        }\r\n                        else {\r\n                            this.eventList = (response.Table)? response.Table:[];\r\n                            console.log('1');\r\n                        }\r\n                    });\r\n                }catch(e){\r\n                    alert(e);\r\n                    console.log(e);\r\n                }\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}