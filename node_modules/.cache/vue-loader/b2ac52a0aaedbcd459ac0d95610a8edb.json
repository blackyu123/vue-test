{"remainingRequest":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\components\\SideMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\components\\SideMenu.vue","mtime":1545927811620},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1545311081350},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js","mtime":1545311099620}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\n\nexport default {\n    name: 'sideMenu',\n    data() {\n        return {\n            primaryMenu: [],\n            nonPrimaryTable: [],\n            primaryMenuFiltered:[],\n            active: false\n        };\n    },\n    async mounted() {\n        const response = await DataSource.shared.getUserMenu();\n        if (response) {\n            this.primaryMenu = response.PrimaryTable.Table;\n            this.primaryMenu.forEach(m => {\n                console.log(m);\n                switch (m.MENname) {\n                    case \"Administration\":\n                    case \"Dashboards\":\n                    case \"Pre Admission\":\n                        this.primaryMenuFiltered.push(m);\n                }\n            });\n            console.log(this.primaryMenuFiltered);\n\n            this.nonPrimaryTable = response.NonPrimaryTable.Table;\n            this.nonPrimaryTable.map(d => {\n                if (d.MENnewurl == null && d.MENnewurl === \"\") {\n                    return null;\n                }\n\n                if (d.MGPMENparentid_2 === null || d.MGPMENparentid_2 === \"\") {\n                    this.primaryMenuFiltered.find(parentMenu => {\n                            if (parentMenu.MENid === d.MGPMENparentid) {\n                                if (Array.isArray(parentMenu.subMenus)) {\n                                    parentMenu.subMenus.push(d);\n                                } else {\n                                    parentMenu.subMenus = [d];\n                                }\n\n                            }\n                        }\n                    );\n                } else {\n                    this.primaryMenuFiltered.find(parentMenu => {\n                            if (parentMenu.MENid === d.MGPMENparentid_2) {\n                                if (Array.isArray(parentMenu.subMenus)) {\n                                    parentMenu.subMenus.push(d);\n                                } else {\n                                    parentMenu.subMenus = [d];\n                                }\n                            }\n                        }\n                    );\n                }\n            });\n        }\n    },\n    methods: {}\n};\n",{"version":3,"sources":["SideMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SideMenu.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <div>\r\n        <vs-sidebar static-position default-index=\"1\" color=\"primary\" class=\"sidebarx\" spacer v-model=\"active\"\r\n                    icon-pack=\"fa\">\r\n\r\n            <div class=\"header-sidebar\" slot=\"header\">\r\n                <img src=\"../assets/kagami.jpg\"/>\r\n            </div>\r\n\r\n            <vs-sidebar-group v-for=\"item in primaryMenuFiltered\" :key=item.MENid :title=item.MENname\r\n                              :icon=item.MENicon>\r\n                <vs-sidebar-item v-for=\"submenu in item.subMenus\" :icon=submenu.MENicon :to=submenu.MENurl>\r\n                    {{submenu.MENname}}\r\n                </vs-sidebar-item>\r\n            </vs-sidebar-group>\r\n        </vs-sidebar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: 'sideMenu',\r\n        data() {\r\n            return {\r\n                primaryMenu: [],\r\n                nonPrimaryTable: [],\r\n                primaryMenuFiltered:[],\r\n                active: false\r\n            };\r\n        },\r\n        async mounted() {\r\n            const response = await DataSource.shared.getUserMenu();\r\n            if (response) {\r\n                this.primaryMenu = response.PrimaryTable.Table;\r\n                this.primaryMenu.forEach(m => {\r\n                    console.log(m);\r\n                    switch (m.MENname) {\r\n                        case \"Administration\":\r\n                        case \"Dashboards\":\r\n                        case \"Pre Admission\":\r\n                            this.primaryMenuFiltered.push(m);\r\n                    }\r\n                });\r\n                console.log(this.primaryMenuFiltered);\r\n\r\n                this.nonPrimaryTable = response.NonPrimaryTable.Table;\r\n                this.nonPrimaryTable.map(d => {\r\n                    if (d.MENnewurl == null && d.MENnewurl === \"\") {\r\n                        return null;\r\n                    }\r\n\r\n                    if (d.MGPMENparentid_2 === null || d.MGPMENparentid_2 === \"\") {\r\n                        this.primaryMenuFiltered.find(parentMenu => {\r\n                                if (parentMenu.MENid === d.MGPMENparentid) {\r\n                                    if (Array.isArray(parentMenu.subMenus)) {\r\n                                        parentMenu.subMenus.push(d);\r\n                                    } else {\r\n                                        parentMenu.subMenus = [d];\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        );\r\n                    } else {\r\n                        this.primaryMenuFiltered.find(parentMenu => {\r\n                                if (parentMenu.MENid === d.MGPMENparentid_2) {\r\n                                    if (Array.isArray(parentMenu.subMenus)) {\r\n                                        parentMenu.subMenus.push(d);\r\n                                    } else {\r\n                                        parentMenu.subMenus = [d];\r\n                                    }\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        methods: {}\r\n    };\r\n</script>\r\n"]}]}