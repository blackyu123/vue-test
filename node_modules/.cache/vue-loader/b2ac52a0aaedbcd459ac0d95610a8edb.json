{"remainingRequest":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\components\\SideMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\components\\SideMenu.vue","mtime":1546954728275},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1545311081350},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js","mtime":1545311099620}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\n\nexport default {\n    name: 'sideMenu',\n    data() {\n        return {\n            pathName: null,\n            primaryMenu: [],\n            nonPrimaryTable: [],\n            primaryMenuFiltered: [],\n            active: false,\n            currentMenu: null,\n            currentParentMenuId: null,\n            currentParentMenuId2: null\n        };\n    },\n    async mounted() {\n        const response = await DataSource.shared.getUserMenu();\n        if (response) {\n            this.primaryMenu = response.PrimaryTable.Table;\n            this.primaryMenu.forEach(m => {\n                //console.log(m);\n                this.primaryMenuFiltered.push(m);\n                // switch (m.MENname) {\n                //     case \"Administration\":\n                //     case \"Dashboards\":\n                //     case \"Pre Admission\":\n                //         this.primaryMenuFiltered.push(m);\n                // }\n            });\n            //console.log(this.primaryMenuFiltered);\n\n            this.nonPrimaryTable = response.NonPrimaryTable.Table;\n            this.nonPrimaryTable.map(d => {\n\n                // set current active menu based on URL pathname\n                if (d.MENnewurl === window.location.pathname) {\n                    this.currentMenu = d.MENid;\n                    this.currentParentMenuId = d.MGPMENparentid;\n                    this.currentParentMenuId2 = d.MGPMENparentid_2;\n                }\n\n                if (d.MENnewurl != null && d.MENnewurl != \"\") {\n                    //return null;\n\n                    if (d.MGPMENparentid_2 === null || d.MGPMENparentid_2 === \"\") {\n                        this.primaryMenuFiltered.find(parentMenu => {\n                                if (parentMenu.MENid === d.MGPMENparentid) {\n                                    if (Array.isArray(parentMenu.subMenus)) {\n                                        parentMenu.subMenus.push(d);\n                                    } else {\n                                        parentMenu.subMenus = [d];\n                                    }\n\n                                }\n                            }\n                        );\n                    } else {\n                        this.primaryMenuFiltered.find(parentMenu => {\n                                if (parentMenu.MENid === d.MGPMENparentid_2) {\n                                    if (Array.isArray(parentMenu.subMenus)) {\n                                        parentMenu.subMenus.push(d);\n                                    } else {\n                                        parentMenu.subMenus = [d];\n                                    }\n                                }\n                            }\n                        );\n                    }\n                }\n            });\n        }\n\n    },\n    methods: {\n        handleParentMenuClick(menuId) {\n            // if clicked menu already open, then make it close\n            if (this.currentParentMenuId === menuId) {\n                this.currentParentMenuId = null;\n            }\n            // open clicked menu\n            else {\n                this.currentParentMenuId = menuId;\n            }\n        },\n    }\n};\n",{"version":3,"sources":["SideMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SideMenu.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <div>\r\n        <vs-sidebar static-position default-index=\"1\" color=\"primary\" class=\"sidebarx\" spacer v-model=\"active\"\r\n                    icon-pack=\"fa\">\r\n\r\n            <div class=\"header-sidebar\" slot=\"header\">\r\n                <a href=\"/\"><img src=\"../assets/kagami.jpg\"/></a>\r\n            </div>\r\n\r\n            <div class=\"menu-wrap\" v-for=\"item in primaryMenuFiltered\" :key=item.MENid\r\n                 :class=\"{'menu-wrap-active':currentParentMenuId===item.MENid}\">\r\n                <!-- if menu has submenu, click will open submenu -->\r\n                <div v-if=\"item.subMenus\">\r\n                    <div class=\"parent-menu has-sub-menu\"\r\n                         @click=\"handleParentMenuClick(item.MENid)\">\r\n                        <i :class=\"item.MENicon\"></i>{{item.MENname}} <i class=\"material-icons\">keyboard_arrow_down</i>\r\n                    </div>\r\n\r\n                    <div class=\"sub-menu\" v-if=\"item.subMenus\">\r\n                        <div v-for=\"submenu in item.subMenus\" :class=\"{'submenu-active':currentMenu===submenu.MENid}\">\r\n                            <a :href=\"submenu.MENnewurl\">\r\n                                <i :class=\"submenu.MENicon\"></i> {{submenu.MENname}}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- if menu has no submenu, click will route to url (MENnewurl) -->\r\n                <div v-else>\r\n                    <div class=\"parent-menu\" v-if=\"item.MENnewurl\">\r\n                        <!-- if MENnewurl has value -->\r\n                        <router-link v-if=\"item.MENnewurl\" :to=\"item.MENnewurl\">\r\n                            <i :class=\"item.MENicon\"></i> {{item.MENname}}\r\n                        </router-link>\r\n                        <!-- if MENnewurl is null -->\r\n                        <div v-else class=\"url-null\">\r\n                            <i :class=\"item.MENicon\"></i> {{item.MENname}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </vs-sidebar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: 'sideMenu',\r\n        data() {\r\n            return {\r\n                pathName: null,\r\n                primaryMenu: [],\r\n                nonPrimaryTable: [],\r\n                primaryMenuFiltered: [],\r\n                active: false,\r\n                currentMenu: null,\r\n                currentParentMenuId: null,\r\n                currentParentMenuId2: null\r\n            };\r\n        },\r\n        async mounted() {\r\n            const response = await DataSource.shared.getUserMenu();\r\n            if (response) {\r\n                this.primaryMenu = response.PrimaryTable.Table;\r\n                this.primaryMenu.forEach(m => {\r\n                    //console.log(m);\r\n                    this.primaryMenuFiltered.push(m);\r\n                    // switch (m.MENname) {\r\n                    //     case \"Administration\":\r\n                    //     case \"Dashboards\":\r\n                    //     case \"Pre Admission\":\r\n                    //         this.primaryMenuFiltered.push(m);\r\n                    // }\r\n                });\r\n                //console.log(this.primaryMenuFiltered);\r\n\r\n                this.nonPrimaryTable = response.NonPrimaryTable.Table;\r\n                this.nonPrimaryTable.map(d => {\r\n\r\n                    // set current active menu based on URL pathname\r\n                    if (d.MENnewurl === window.location.pathname) {\r\n                        this.currentMenu = d.MENid;\r\n                        this.currentParentMenuId = d.MGPMENparentid;\r\n                        this.currentParentMenuId2 = d.MGPMENparentid_2;\r\n                    }\r\n\r\n                    if (d.MENnewurl != null && d.MENnewurl != \"\") {\r\n                        //return null;\r\n\r\n                        if (d.MGPMENparentid_2 === null || d.MGPMENparentid_2 === \"\") {\r\n                            this.primaryMenuFiltered.find(parentMenu => {\r\n                                    if (parentMenu.MENid === d.MGPMENparentid) {\r\n                                        if (Array.isArray(parentMenu.subMenus)) {\r\n                                            parentMenu.subMenus.push(d);\r\n                                        } else {\r\n                                            parentMenu.subMenus = [d];\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            );\r\n                        } else {\r\n                            this.primaryMenuFiltered.find(parentMenu => {\r\n                                    if (parentMenu.MENid === d.MGPMENparentid_2) {\r\n                                        if (Array.isArray(parentMenu.subMenus)) {\r\n                                            parentMenu.subMenus.push(d);\r\n                                        } else {\r\n                                            parentMenu.subMenus = [d];\r\n                                        }\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n        },\r\n        methods: {\r\n            handleParentMenuClick(menuId) {\r\n                // if clicked menu already open, then make it close\r\n                if (this.currentParentMenuId === menuId) {\r\n                    this.currentParentMenuId = null;\r\n                }\r\n                // open clicked menu\r\n                else {\r\n                    this.currentParentMenuId = menuId;\r\n                }\r\n            },\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .menu-wrap {\r\n        color: #fff;\r\n    }\r\n\r\n    .parent-menu {\r\n        cursor: pointer;\r\n        padding: 10px 20px 10px 30px;\r\n        color: #c0bed8;\r\n        text-align: left;\r\n        margin: 10px 0px;\r\n        background: transparent;\r\n        -webkit-transition: all 0.3s ease-in-out;\r\n        -moz-transition: all 0.3s ease-in-out;\r\n        -o-transition: all 0.3s ease-in-out;\r\n        transition: all 0.3s ease-in-out;\r\n    }\r\n\r\n    .sub-menu {\r\n        height: 0;\r\n        visibility: hidden;\r\n        opacity: 0;\r\n    }\r\n\r\n    .menu-wrap-active .sub-menu {\r\n        height: auto;\r\n        visibility: visible;\r\n        opacity: 1;\r\n    }\r\n\r\n    .vs-sidebar--items {\r\n        overflow-y: initial;\r\n    }\r\n\r\n    .parent-menu i {\r\n        width: 29px;\r\n    }\r\n\r\n    .sub-menu a {\r\n        color: #9796a9;\r\n        padding: 5px 60px;\r\n        display: block;\r\n        text-align: left;\r\n    }\r\n\r\n    .parent-menu:hover {\r\n        background: #eb4958;\r\n        color: white;\r\n    }\r\n\r\n    .sub-menu a:hover {\r\n        color: white;\r\n    }\r\n\r\n    .parent-menu i.material-icons {\r\n        font-size: 26px;\r\n        float: right;\r\n        position: relative;\r\n        top: -3px;\r\n    }\r\n\r\n    .menu-wrap-active .parent-menu, .parent-menu.menu-active {\r\n        background: #eb4958;\r\n        color: white;\r\n    }\r\n\r\n    .submenu-active a{\r\n        color: #fff;\r\n    }\r\n\r\n\r\n\r\n</style>\r\n\r\n<style>\r\n\r\n    #parentx-static {\r\n        overflow: hidden;\r\n        position: fixed;\r\n        width: 260px;\r\n        height: 100vh;\r\n        background: #413f56;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    #parentx-static .vs-sidebar.vs-sidebar-parent {\r\n        height: 100vh !important;\r\n    }\r\n\r\n    .vs-sidebar--items {\r\n        height: 100vh !important;\r\n    }\r\n</style>"]}]}