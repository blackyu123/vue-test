{"remainingRequest":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\pages\\PendingPost.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\pages\\PendingPost.vue","mtime":1546872417834},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\css-loader\\index.js","mtime":1545311098453},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1545311099620},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\postcss-loader\\src\\index.js","mtime":1545311099406},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js","mtime":1545311099620}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nthead.vs-table--thead th {\n    width: auto;\n    text-align: center !important;\n}\n\n.vs-table--tbody-table .tr-table td {\n    text-align: left;\n}\n\nh4.title {\n    text-align: left;\n    font-weight: bold;\n}\n\n.el-table--enable-row-hover .el-table__body tr:hover > td {\n    background-color: #ffffff !important;\n    border-radius: 3px !important;\n}\n\n.el-table--enable-row-hover .el-table__body tr:hover {\n    box-shadow: 0px 0px 10px -5px #848484 !important;\n}\n\n.sc-table {\n    padding: 20px !important;\n}\n\n.pagination-bar {\n    margin: 10px 0px;\n    background: white;\n    padding: 10px 0px;\n}\n\n\n.modal-title:before {\n    content: \"\\F040 \";\n    font-family: fontawesome;\n    background: #f3415924;\n    color: #f34159;\n    border-radius: 35px;\n    width: 30px;\n    height: 30px;\n    display: inline-block;\n    font-size: 15px;\n    line-height: 30px;\n    margin-right: 10px;\n}\n.action-list button:focus {\n    color: #67c23a;\n}\n\n",{"version":3,"sources":["PendingPost.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+TA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PendingPost.vue","sourceRoot":"src\\pages","sourcesContent":["<template>\r\n    <div id=\"staff-post\" class=\"mt-3 container\">\r\n        <div>\r\n            <h4 class=\"title\">Pending Post</h4>\r\n            <div v-if=\"list && list.length>0\">\r\n                <el-row style=\"margin-bottom: 10px\" class=\"data-top\">\r\n                        <el-dropdown @command=\"handleClick\" class=\"float-right\">\r\n                            <el-button type=\"primary\">Actions<i class=\"el-icon-caret-bottom el-icon--right\"></i>\r\n                            </el-button>\r\n                            <el-dropdown-menu slot=\"dropdown\">\r\n                                <el-dropdown-item command=\"approve\">Approve</el-dropdown-item>\r\n                            </el-dropdown-menu>\r\n                        </el-dropdown>\r\n                </el-row>\r\n                <data-tables-server :data=\"list\" @selection-change=\"handleSelectionChange\" :fit=\"false\"\r\n                                    :action-col=\"actionCol\">\r\n                    <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n\r\n                    <el-table-column v-for=\"title in titles\" :prop=\"title.prop\" :label=\"title.label\" :key=\"title.prop\"\r\n                                     :width=\"title.width\"\r\n                                     sortable=\"custom\">\r\n                    </el-table-column>\r\n\r\n                </data-tables-server>\r\n            </div>\r\n            <div v-else-if=\"results==='No Record Found'\">\r\n                No Record Found\r\n            </div>\r\n            <div v-else>\r\n                {{results}}\r\n                Loading...\r\n            </div>\r\n\r\n        </div>\r\n        <b-modal id=\"viewMoreModal\" hide-footer title=\"Post Details\" v-model=\"isModalOpen\">\r\n            <form class=\"needs-validation form-style\" novalidate @submit.prevent=\"onSubmit\">\r\n\r\n\r\n                <div class=\"mb-2\">\r\n                    <label for=\"actionStatus\">Status</label>\r\n                    <select class=\"form-control\" id=\"actionStatus\" v-model=\"actionStatus\">\r\n                        <option selected value=\"Void\">Disable</option>\r\n                        <option value=\"Edit\">Edit</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"mb-2 d-none\">\r\n                    <input type=\"text\" class=\"form-control\" id=\"postID\" v-model=\"viewModal\"\r\n                           placeholder=\"Post ID\"\r\n                           required>\r\n                    <div class=\"invalid-feedback\" style=\"width: 100%;\">\r\n                        Your Post ID is required.\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                    <label for=\"UpdateContent\">Content</label>\r\n                    <!--<label for=\"username\">Username</label>-->\r\n                    <textarea type=\"text\" class=\"form-control\" id=\"UpdateContent\" v-model=\"UpdateContent\"\r\n                              placeholder=\"CONTENT\"\r\n                              required></textarea>\r\n                    <div class=\"invalid-feedback\" style=\"width: 100%;\">\r\n                        Your content is required.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"mb-2\">\r\n                    <label for=\"profolio\">Profolio</label>\r\n                    <select class=\"form-control\" id=\"profolio\" v-model=\"profolio\">\r\n                        <option selected value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"mb-2\">\r\n                    <label for=\"tagUserID\">Tag User ID</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"tagUserID\" v-model=\"tagUserID\"\r\n                           placeholder=\"Tag User ID\"\r\n                           required>\r\n                    <small class=\"text-left d-blk\">separate ID by comma</small>\r\n                    <div class=\"invalid-feedback\" style=\"width: 100%;\">\r\n                        Your Tag User ID is required.\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"mb-2\">\r\n                    <label for=\"tagClassID\">Tag Class ID</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"tagClassID\" v-model=\"tagClassID\"\r\n                           placeholder=\"Tag Class ID\"\r\n                           required>\r\n                    <div class=\"invalid-feedback\" style=\"width: 100%;\">\r\n                        Your Tag Class ID is required.\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"mb-2\">\r\n                    <label for=\"tagLevelID\">Tag Level ID</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"tagLevelID\" v-model=\"tagLevelID\"\r\n                           placeholder=\"Tag Level ID\"\r\n                           required>\r\n                    <div class=\"invalid-feedback\" style=\"width: 100%;\">\r\n                        Your Tag Level ID is required.\r\n                    </div>\r\n                </div>\r\n                <div class=\"view-details text-left\">\r\n                    <table class=\"table table-striped\">\r\n                        <tr class=\"\">\r\n                            <th>PostSchoolID</th>\r\n                            <td>{{PostSchoolID}}</td>\r\n                        </tr>\r\n                        <tr class=\"\">\r\n                            <th>PostCreatedDate</th>\r\n                            <td>{{PostCreatedDate}}</td>\r\n                        </tr>\r\n                        <tr class=\"\">\r\n                            <th>PostCreatedBy</th>\r\n                            <td>{{PostCreatedBy}}</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"system-msg\" v-bind:class=\"{'bg-danger': systemmsgError===true}\"><p>{{results}}</p>\r\n                    <p v-if=\"error\" style=\"color: red\">{{error}}</p></div>\r\n                <div class=\"row d-flex submit-wrap\">\r\n                    <div class=\"col-md-6\"></div>\r\n                    <div class=\"col-md-6\">\r\n                        <button class=\"btn btn-primary login-btn\" type=\"submit\">Update\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </b-modal>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: 'PendingPost',\r\n        data() {\r\n            return {\r\n                selectedRows: [],\r\n                isModalOpen: false,\r\n                list: [],\r\n                viewModal: \"\",\r\n                titles: [{\r\n                    prop: \"ID\",\r\n                    label: \"ID\"\r\n                }, {\r\n                    prop: \"PostID\",\r\n                    label: \"Post ID\"\r\n                }, {\r\n                    prop: \"PostCreatedDate\",\r\n                    label: \"Created At\"\r\n                }, {\r\n                    prop: \"PostStatus\",\r\n                    label: \"Post Status\"\r\n                }],\r\n                actionCol: {\r\n                    label: '',\r\n                    class: 'actions',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'text',\r\n                            // icon: 'el-icon-edit'\r\n                        },\r\n                        handler: async row => {\r\n                            try {\r\n                                console.log(\"clicked row data: \", row);\r\n\r\n                                // call approve post api\r\n                                const response = await DataSource.shared.approvePost(row.PostApproverID, \"Approved\");\r\n                                console.log('approve response: ', response);\r\n\r\n                                // update pending post view on success\r\n                                this.getPendingPost();\r\n\r\n                                this.getPostFile();\r\n                            } catch (error) {\r\n                                // log error\r\n                                console.log(error);\r\n                            }\r\n\r\n                        },\r\n                        label: 'Approve'\r\n                    }, {\r\n                        props: {\r\n                            type: 'text',\r\n                            icon: 'el-icon-edit'\r\n                        },\r\n                        handler: async row => {\r\n                            console.log(row, ' ss');\r\n                            try {\r\n                                this.isModalOpen = true;\r\n                                this.viewModal = row.PostID;\r\n                                this.UpdateContent = row.PostContent;\r\n                                this.profolio = row.PostProfolio;\r\n                                this.tagUserID = row.tagUserID;\r\n                                this.PostSchoolID = row.PostSchoolID;\r\n                                this.PostCreatedDate = row.PostCreatedDate;\r\n                                this.PostCreatedBy = row.PostCreatedBy;\r\n                            } catch (error) {\r\n                                // log error\r\n                                console.log(error);\r\n                            }\r\n\r\n                        },\r\n                        label: ''\r\n                    }\r\n                    ]\r\n                },\r\n                selectedRow: null,\r\n                results: null,\r\n                actionStatus: \"\",\r\n                UpdateContent: \"\",\r\n                profolio: \"\",\r\n                PostSchoolID: \"\",\r\n                PostCreatedDate: \"\",\r\n                PostCreatedBy: \"\",\r\n                systemmsgError: false,\r\n            };\r\n        },\r\n        methods: {\r\n            handleSelectionChange(rows) {\r\n                console.log(rows);\r\n                this.selectedRows = rows;\r\n            },\r\n            showModal() {\r\n                this.isModalOpen = true;\r\n            },\r\n            async getPendingPost() {\r\n                try {\r\n                    const response = await DataSource.shared.pendingPost();\r\n                    if (response) {\r\n                        this.list = response.Table;\r\n                        switch (response.code) {\r\n                            case \"2\":\r\n                                this.results = `No Record Found`;\r\n                                //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\r\n                                break;\r\n                            case \"88\":\r\n                                this.results = `Please login`;\r\n                                //this.results = `Invalid password - sample 2: code: ${response.code}`;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Please try again later`;\r\n                                //this.results = `Please fill in all field - sample 3: code: ${response.code}`;\r\n                                break;\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            },\r\n            async onSubmit() {\r\n                this.error = \"\";\r\n                //this.results = \"<< Requesting.. >>\";\r\n                try {\r\n                    const saveResponse = await DataSource.shared.updatePost(this.postContent, this.actionStatus, this.postID, this.profolio, this.tagUserID, this.tagClassID, this.tagLevelID);\r\n                    console.log(saveResponse);\r\n                    if (saveResponse) {\r\n                        switch (saveResponse.code) {\r\n                            case \"1\":\r\n                                this.results = `Post updated`;\r\n                                break;\r\n                            case \"88\":\r\n                                this.results = `Request Rejected / Post has been approved`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Please try again later`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                            // default:\r\n                            //     alert(\"Please try again later\");\r\n                            //     this.results = JSON.stringify(response);\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.error = e;\r\n                }\r\n\r\n            },\r\n            async handleClick(command) {\r\n\r\n                // if clicked dropdown button is approve\r\n                if (command === \"approve\") {\r\n                    try {\r\n                        // loop selected rows and call approve api one by one, lol\r\n                        for (const row of this.selectedRows) {\r\n                            const response = await DataSource.shared.approvePost(row.PostApproverID, \"Approved\");\r\n                        }\r\n\r\n                        // update pending post view on success\r\n                        this.getPendingPost();\r\n                    } catch (error) {\r\n                        // log error\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        async mounted() {\r\n            this.getPendingPost();\r\n        }\r\n        ,\r\n    }\r\n    ;\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n<style>\r\n    thead.vs-table--thead th {\r\n        width: auto;\r\n        text-align: center !important;\r\n    }\r\n\r\n    .vs-table--tbody-table .tr-table td {\r\n        text-align: left;\r\n    }\r\n\r\n    h4.title {\r\n        text-align: left;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .el-table--enable-row-hover .el-table__body tr:hover > td {\r\n        background-color: #ffffff !important;\r\n        border-radius: 3px !important;\r\n    }\r\n\r\n    .el-table--enable-row-hover .el-table__body tr:hover {\r\n        box-shadow: 0px 0px 10px -5px #848484 !important;\r\n    }\r\n\r\n    .sc-table {\r\n        padding: 20px !important;\r\n    }\r\n\r\n    .pagination-bar {\r\n        margin: 10px 0px;\r\n        background: white;\r\n        padding: 10px 0px;\r\n    }\r\n\r\n\r\n    .modal-title:before {\r\n        content: \"\\F040 \";\r\n        font-family: fontawesome;\r\n        background: #f3415924;\r\n        color: #f34159;\r\n        border-radius: 35px;\r\n        width: 30px;\r\n        height: 30px;\r\n        display: inline-block;\r\n        font-size: 15px;\r\n        line-height: 30px;\r\n        margin-right: 10px;\r\n    }\r\n    .action-list button:focus {\r\n        color: #67c23a;\r\n    }\r\n\r\n</style>"]}]}