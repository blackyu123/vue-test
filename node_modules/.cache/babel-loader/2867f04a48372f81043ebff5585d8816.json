{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\ClassManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\ClassManagement.vue","mtime":1559052886161},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["import _JSON$stringify from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataSource from \"../data/datasource\";\nexport default {\n  name: \"ClassManagement\",\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getParentClassList();\n\n            case 2:\n              _context.next = 4;\n              return this.getLevel();\n\n            case 4:\n              _context.next = 6;\n              return this.getAcademicYear();\n\n            case 6:\n              _context.next = 8;\n              return this.getClassType();\n\n            case 8:\n              _context.next = 10;\n              return this.getClassTeacher();\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  data: function data() {\n    var _this = this;\n\n    return {\n      currentClassProgs: [],\n      assignClassModal: false,\n      newClassShowModal: false,\n      editClassShowModal: false,\n      newProgrammeShowModal: false,\n      ClassListModal: false,\n      ViewClassModal: false,\n      showbackBtn: false,\n      ddlClassLevel: '',\n      ddlSemester: '',\n      inputClassName: '',\n      ddlClassType: '',\n      ddlClassTeacher: '',\n      inputMaxStudents: '',\n      ddlEditClassStatus: '',\n      inputEditClassName: '',\n      inputEditMaxStudents: '',\n      inputeditLevel: '',\n      assignClassLevelID: '',\n      assignClassID: '',\n      classListSemesterID: '',\n      classListCourseID: '',\n      classListClassName: '',\n      classListLevelName: '',\n      classListMaxStudents: '',\n      programmeLevelID: '',\n      programmeSemID: '',\n      programmeClassName: '',\n      programmeMaxStudent: '',\n      programmeClassTeacher: '',\n      programmeSaveType: '',\n      editSemesterID: '',\n      editCourseID: '',\n      editClassName: '',\n      assignStudentsListSearchFilter: '',\n      totalNumberOfStudentAssignedToClass: '',\n      assignClassSemID: '',\n      levelList: [],\n      semesterList: [],\n      classTypeList: [],\n      currentClassTypeList: [],\n      classTeacherList: [],\n      classListInt: [],\n      classListFilteritem: [],\n      editClassStatusList: ['Active', 'Closed'],\n      assignStudentsListInt: [],\n      classList: [{\n        prop: \"CLS_ClassName\",\n        label: \"Class Name\"\n      }, {\n        prop: \"CLS_Batch\",\n        label: \"Programme\" // }, {\n        //     prop: \"CLS_Class_Max_Students\",\n        //     label: \"Max Students\"\n\n      }, {\n        prop: \"CRS_Course_Name\",\n        label: \"Level\" // }, {\n        //     prop: \"PK_Class_ID\",\n        //     label: \"class id\"\n\n      }],\n      classListAction: {\n        label: 'Delete',\n        props: {\n          align: 'center'\n        },\n        buttons: [{\n          props: {\n            type: 'primary',\n            icon: 'el-icon-delete'\n          },\n          handler: function handler(row) {\n            _this.removeClassProgramme(row.PK_Class_ID);\n          },\n          label: ''\n        }]\n      },\n      multipleSelection: [],\n      assignStudentsListCurrentPage: 1,\n      assignStudentsListPageSize: 20,\n      assignStudentsListTotal: 0,\n      assignStudentsList: [{\n        prop: \"Index_No\",\n        label: \"Student ID\"\n      }, {\n        prop: \"Full_Name\",\n        label: \"First Name\"\n      }, {\n        prop: \"Middle_name\",\n        label: \"Middle Name\"\n      }, {\n        prop: \"Last_name\",\n        label: \"Last Name\"\n      }],\n      ClassFilters: [{\n        value: '',\n        prop: 'CLS_ClassName'\n      }, {\n        value: [],\n        prop: 'CRS_Course_Name'\n      }],\n      // filters: [{\n      //     value: '',\n      //     prop: 'Full_Name',\n      // }],\n      currentStudent: [],\n      currentStudentList: [{\n        prop: \"Index_No\",\n        label: \"Student ID\"\n      }, {\n        prop: \"Full_Name\",\n        label: \"First Name\"\n      }, {\n        prop: \"Middle_name\",\n        label: \"Middle Name\"\n      }, {\n        prop: \"Last_name\",\n        label: \"Last Name\"\n      }],\n      tempRow: \"\",\n      parentClassListInt: [],\n      parentClassList: [{\n        prop: \"CLS_ClassName\",\n        label: \"Class Name\"\n      }, {\n        prop: \"Average_MaxStudents\",\n        label: \"Max Students\"\n      }, {\n        prop: \"CRS_Course_Name\",\n        label: \"Level\"\n      }, {\n        prop: \"SMT_Year\",\n        label: \"Year\"\n      }],\n      parentClassListAction: {\n        label: 'Edit',\n        props: {\n          align: 'center'\n        },\n        buttons: [{\n          props: {\n            type: 'primary',\n            icon: 'el-icon-edit'\n          },\n          handler: function handler(row) {\n            _this.classListSemesterID = row.CLS_FK_Semester_ID;\n            _this.classListCourseID = row.CLS_FK_Course_ID;\n            _this.classListClassName = row.CLS_ClassName;\n            _this.classListLevelName = row.CRS_Course_Name;\n            _this.classListMaxStudents = row.Average_MaxStudents;\n\n            _this.getClass();\n\n            _this.$refs.classListShowModal.show();\n\n            _this.showbackBtn = true;\n          },\n          label: 'Edit'\n        }]\n      }\n    };\n  },\n  methods: {\n    getRowKey: function getRowKey(row) {\n      return row.Student_ID;\n    },\n    changeSelection: function changeSelection(val) {\n      this.multipleSelection = val;\n    },\n    backtoClassList: function backtoClassList() {\n      this.$refs.classListShowModal.show();\n    },\n    getParentClassList: function () {\n      var _getParentClassList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return DataSource.shared.getParentClassList('', 'GET CLASS LIST GROUP BY LEVEL, SEMESTER, SCHOOL AND CLASS NAME');\n\n              case 3:\n                response = _context2.sent;\n\n                if (response) {\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else if (response.code === '99') {\n                    console.log('Error! getParentClassList');\n                  } else {\n                    this.parentClassListInt = response.Table;\n                    this.parentClassListInt.forEach(function (object) {\n                      var foundLevel = _this2.classListFilteritem.find(function (d) {\n                        return d === object.CRS_Course_Name;\n                      });\n\n                      if (!foundLevel) {\n                        _this2.classListFilteritem.push(object.CRS_Course_Name);\n                      }\n                    });\n                  }\n                }\n\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.results = _context2.t0;\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      function getParentClassList() {\n        return _getParentClassList.apply(this, arguments);\n      }\n\n      return getParentClassList;\n    }(),\n    getClass: function () {\n      var _getClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this3 = this;\n\n        var response, classListList, totalStudentsInClassResponse;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return DataSource.shared.getClass('');\n\n              case 3:\n                response = _context3.sent;\n\n                if (response) {\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else {\n                    this.classListInt = response.Table; // this.classListInt.forEach(object => {\n                    //     const found = this.classListFilteritem.find(d => d === object.CLS_Batch);\n                    //     if (!found) {\n                    //         this.classListFilteritem.push(object.CLS_Batch);\n                    //     }\n                    //     const foundLevel = this.classListFilteritem.find(d => d === object.CRS_Course_Name);\n                    //     if (!foundLevel) {\n                    //         this.classListFilteritem.push(object.CRS_Course_Name);\n                    //     }\n                    // });\n\n                    classListList = response.Table;\n                    this.classListInt = classListList.filter(function (d) {\n                      return d.CLS_FK_Semester_ID === _this3.classListSemesterID && d.CLS_FK_Course_ID === _this3.classListCourseID && d.CLS_ClassName === _this3.classListClassName;\n                    });\n                    this.currentClassProgs = this.classListInt.map(function (d) {\n                      return d.CLS_Batch;\n                    });\n                  }\n                }\n\n                _context3.next = 7;\n                return DataSource.shared.getClassStudentList(this.classListSemesterID, this.classListCourseID, this.classListClassName);\n\n              case 7:\n                totalStudentsInClassResponse = _context3.sent;\n\n                if (totalStudentsInClassResponse) {\n                  if (totalStudentsInClassResponse.code === '88') {\n                    window.location.replace('/');\n                  } else if (totalStudentsInClassResponse.code === '99') {\n                    console.log('Error! in getClassStudentList');\n                  } else if (totalStudentsInClassResponse.code === '2') {\n                    console.log('No student in this class');\n                  } else {\n                    this.totalNumberOfStudentAssignedToClass = totalStudentsInClassResponse.Table.length;\n                  }\n                }\n\n                _context3.next = 14;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n                this.results = _context3.t0;\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 11]]);\n      }));\n\n      function getClass() {\n        return _getClass.apply(this, arguments);\n      }\n\n      return getClass;\n    }(),\n    getLevel: function () {\n      var _getLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return DataSource.shared.getLevel('');\n\n              case 3:\n                response = _context4.sent;\n\n                if (response) {\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else {\n                    this.levelList = response.Table;\n                  }\n                }\n\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                this.results = _context4.t0;\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n\n      function getLevel() {\n        return _getLevel.apply(this, arguments);\n      }\n\n      return getLevel;\n    }(),\n    getAcademicYear: function () {\n      var _getAcademicYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return DataSource.shared.getAcademicYear('');\n\n              case 3:\n                response = _context5.sent;\n\n                if (response) {\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else {\n                    this.semesterList = response.Table;\n                  }\n                }\n\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                this.results = _context5.t0;\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 7]]);\n      }));\n\n      function getAcademicYear() {\n        return _getAcademicYear.apply(this, arguments);\n      }\n\n      return getAcademicYear;\n    }(),\n    getClassType: function () {\n      var _getClassType = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return DataSource.shared.getClassType('');\n\n              case 3:\n                response = _context6.sent;\n\n                if (response) {\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else {\n                    this.classTypeList = response.Table; //\n                    // this.classTypeList = this.classTypeList.filter(d => d.ID !== fileId);\n                    //\n                  }\n                }\n\n                _context6.next = 10;\n                break;\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n                this.results = _context6.t0;\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n\n      function getClassType() {\n        return _getClassType.apply(this, arguments);\n      }\n\n      return getClassType;\n    }(),\n    getClassTeacher: function () {\n      var _getClassTeacher = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return DataSource.shared.getTeacherListBySchool();\n\n              case 3:\n                response = _context7.sent;\n\n                if (response) {\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else {\n                    this.classTeacherList = response.Table;\n                  }\n                }\n\n                _context7.next = 10;\n                break;\n\n              case 7:\n                _context7.prev = 7;\n                _context7.t0 = _context7[\"catch\"](0);\n                this.results = _context7.t0;\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 7]]);\n      }));\n\n      function getClassTeacher() {\n        return _getClassTeacher.apply(this, arguments);\n      }\n\n      return getClassTeacher;\n    }(),\n    onlyNumber: function onlyNumber($event) {\n      //console.log($event.keyCode); //keyCodes value\n      var keyCode = $event.keyCode ? $event.keyCode : $event.which; //if ((keyCode < 48 || keyCode > 57) && keyCode !== 46) { // 46 is dot\n\n      if (keyCode < 48 || keyCode > 57) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    saveClass: function () {\n      var _saveClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n\n                if (!(this.programmeLevelID === '' || this.programmeSemID === '' || this.ddlClassType === '' || this.programmeClassName === '' || this.programmeMaxStudent === '' || this.programmeClassTeacher === '' || this.programmeSaveType === '')) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                this.$notify.error({\n                  title: 'Error',\n                  message: 'Please fill in all information'\n                });\n                _context8.next = 9;\n                break;\n\n              case 5:\n                _context8.next = 7;\n                return DataSource.shared.saveClass(this.programmeLevelID, this.programmeSemID, this.ddlClassType, this.programmeClassName, this.programmeMaxStudent, this.programmeClassTeacher, this.programmeSaveType);\n\n              case 7:\n                response = _context8.sent;\n\n                if (response) {\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else if (response.code === '99') {\n                    this.$notify.error({\n                      title: 'Error',\n                      message: 'Save Class Error!'\n                    });\n                  } else if (response.code === '2') {\n                    this.$notify.error({\n                      title: 'Duplicated',\n                      message: 'Duplicated Class with programme!'\n                    });\n                  } else {\n                    this.$notify({\n                      title: 'Success',\n                      message: 'Successfully Saved!',\n                      type: 'success'\n                    });\n                    window.location.replace('/ClassManagement');\n                  }\n                }\n\n              case 9:\n                _context8.next = 14;\n                break;\n\n              case 11:\n                _context8.prev = 11;\n                _context8.t0 = _context8[\"catch\"](0);\n                this.results = _context8.t0;\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 11]]);\n      }));\n\n      function saveClass() {\n        return _saveClass.apply(this, arguments);\n      }\n\n      return saveClass;\n    }(),\n    updateClass: function () {\n      var _updateClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n\n                if (!(this.editSemesterID === '' || this.editCourseID === '' || this.editClassName === '')) {\n                  _context9.next = 5;\n                  break;\n                }\n\n                this.$notify.error({\n                  title: 'Error',\n                  message: 'Please close and open again'\n                });\n                _context9.next = 13;\n                break;\n\n              case 5:\n                if (!(this.inputEditClassName === '' || this.ddlEditClassStatus === '' || this.inputEditMaxStudents === '')) {\n                  _context9.next = 9;\n                  break;\n                }\n\n                this.$notify.error({\n                  title: 'Error',\n                  message: 'Please fill in all information'\n                });\n                _context9.next = 13;\n                break;\n\n              case 9:\n                _context9.next = 11;\n                return DataSource.shared.updateClass(this.ddlEditClassStatus, this.inputEditClassName, this.inputEditMaxStudents, this.editClassName, this.editCourseID, this.editSemesterID);\n\n              case 11:\n                response = _context9.sent;\n\n                if (response) {\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else if (response.code === '99') {\n                    this.$notify.error({\n                      title: 'Error',\n                      message: 'Edit Class Error!'\n                    });\n                  } else {\n                    this.$notify({\n                      title: 'Success',\n                      message: 'Successfully Edited!',\n                      type: 'success'\n                    });\n                    this.getParentClassList();\n                    this.closeAssignModal();\n                  }\n                }\n\n              case 13:\n                _context9.next = 18;\n                break;\n\n              case 15:\n                _context9.prev = 15;\n                _context9.t0 = _context9[\"catch\"](0);\n                this.results = _context9.t0;\n\n              case 18:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 15]]);\n      }));\n\n      function updateClass() {\n        return _updateClass.apply(this, arguments);\n      }\n\n      return updateClass;\n    }(),\n    directToPromotion: function directToPromotion() {\n      window.location.replace('/Promotion');\n    },\n    assignStudentToClass: function assignStudentToClass(row) {\n      var _this4 = this;\n\n      return [{\n        name: 'Assign',\n        handler: function handler(_) {\n          _this4.assignClassLevelID = row.PK_Course_ID;\n          _this4.assignClassID = row.PK_Class_ID;\n          _this4.assignClassSemID = row.CLS_FK_Semester_ID;\n\n          _this4.getAssignStudents(); // this.$refs.assignClassShowModal.show();\n\n\n          _this4.assignClassModal = true;\n          _this4.tempRow = row;\n        }\n      }];\n    },\n    closeAssignModal: function closeAssignModal() {\n      this.assignClassModal = false;\n      this.newClassShowModal = false;\n      this.editClassShowModal = false;\n      this.newProgrammeShowModal = false;\n      this.ClassListModal = false;\n      this.ViewClassModal = false;\n    },\n    ViewStudentToClass: function ViewStudentToClass(row) {\n      var _this5 = this;\n\n      return [{\n        name: 'View',\n        handler: function handler(_) {\n          _this5.assignClassLevelID = row.PK_Course_ID;\n          _this5.assignClassID = row.PK_Class_ID;\n          _this5.assignClassSemID = row.CLS_FK_Semester_ID;\n\n          _this5.getAssignStudents();\n\n          _this5.$refs.ViewClassModal.show();\n        }\n      }];\n    },\n    ViewStudentToClassInner: function ViewStudentToClassInner() {\n      var row = this.tempRow;\n      this.assignClassLevelID = row.PK_Course_ID;\n      this.assignClassID = row.PK_Class_ID;\n      this.getAssignStudents();\n      this.$refs.ViewClassModal.show();\n    },\n    returnAssignStudents: function returnAssignStudents() {\n      this.$refs.assignClassShowModal.show();\n    },\n    getAssignStudents: function () {\n      var _getAssignStudents = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10() {\n        var response, assignStudentList;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n\n                if (this.multipleSelection.length > 0) {\n                  this.$refs.articleTable.clearSelection();\n                }\n\n                this.$vs.loading();\n                _context10.next = 5;\n                return DataSource.shared.getActiveStudentsByLevelSchool(this.assignClassLevelID, this.assignClassID, this.assignClassSemID);\n\n              case 5:\n                response = _context10.sent;\n\n                if (response) {\n                  this.$vs.loading.close();\n\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else {\n                    // response.Table.forEach(d => {\n                    assignStudentList = response.Table;\n                    this.assignStudentsListInt = assignStudentList.filter(function (d) {\n                      return d.assignToCurrentClass !== \"YES\";\n                    });\n                    this.currentStudent = assignStudentList.filter(function (d) {\n                      return d.assignToCurrentClass === \"YES\";\n                    });\n                    this.assignStudentsListTotal = this.assignStudentsListInt.length;\n                    this.assignStudentsListCurrentPage = 1;\n                    this.assignStudentsListPageSize = 20; //console.log(\"assignStudentsListInt\", this.assignStudentsListInt);\n                    // if (x.assignToCurrentClass !== \"YES\") {\n                    //     this.assignStudentsListInt.push(x);\n                    // }else{\n                    //     this.currentStudent.push(x);\n                    //     console.log(this.currentStudent,\"111\")\n                    // }\n                    // });\n                  }\n                }\n\n                _context10.next = 12;\n                break;\n\n              case 9:\n                _context10.prev = 9;\n                _context10.t0 = _context10[\"catch\"](0);\n                this.results = _context10.t0;\n\n              case 12:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[0, 9]]);\n      }));\n\n      function getAssignStudents() {\n        return _getAssignStudents.apply(this, arguments);\n      }\n\n      return getAssignStudents;\n    }(),\n    assignClass: function () {\n      var _assignClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11() {\n        var classAssignList, response;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                classAssignList = [];\n                this.multipleSelection.forEach(function (item) {\n                  var classAssignDetials = {\n                    studentID: item.Student_ID,\n                    classHistoryID: item.PK_Student_Course_ID\n                  };\n                  classAssignList.push(classAssignDetials);\n                });\n                _context11.next = 4;\n                return DataSource.shared.massSetClass(this.assignClassID, _JSON$stringify(classAssignList));\n\n              case 4:\n                response = _context11.sent;\n\n                if (response) {\n                  if (response.code === '1') {\n                    this.$notify({\n                      title: 'Success',\n                      message: 'Successfully saved',\n                      type: 'success'\n                    });\n                    this.closeAssignModal();\n                    this.getAssignStudents(); // window.location.replace('/ClassManagement');\n                  } else if (response.code === '2') {\n                    this.$notify.error({\n                      title: 'Error',\n                      message: 'The class have been exceeded max number of student!'\n                    });\n                  } else {\n                    this.$notify.error({\n                      title: 'Error',\n                      message: 'Error! Please try again later'\n                    });\n                    window.location.replace('/ClassManagement');\n                  }\n                }\n\n              case 6:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function assignClass() {\n        return _assignClass.apply(this, arguments);\n      }\n\n      return assignClass;\n    }(),\n    createNewProgrmamme: function createNewProgrmamme(value) {\n      var _this6 = this;\n\n      if (value === 'New') {\n        if (this.ddlClassLevel === '' || this.ddlSemester === '' || this.inputClassName === '' || this.inputMaxStudents === '' || this.ddlClassTeacher === '') {\n          this.$notify.error({\n            title: 'Error',\n            message: 'Please fill in all information'\n          });\n        } else {\n          this.programmeLevelID = this.ddlClassLevel;\n          this.programmeSemID = this.ddlSemester;\n          this.programmeClassName = this.inputClassName;\n          this.programmeMaxStudent = this.inputMaxStudents;\n          this.programmeClassTeacher = this.ddlClassTeacher;\n          this.programmeSaveType = 'NEW CLASS';\n          this.newProgrammeShowModal = true;\n          this.currentClassTypeList = this.classTypeList;\n        }\n      } else if (value === 'Edit') {\n        this.programmeLevelID = this.classListInt[0].CLS_FK_Course_ID;\n        this.programmeSemID = this.classListInt[0].CLS_FK_Semester_ID;\n        this.programmeClassName = this.classListInt[0].CLS_ClassName;\n        this.programmeMaxStudent = this.classListInt[0].CLS_Class_Max_Students;\n        this.programmeClassTeacher = this.classListInt[0].CLS_Class_Incharge_Staff;\n        this.programmeSaveType = 'NEW BATCH ONLY';\n        this.newProgrammeShowModal = true;\n        this.currentClassTypeList = this.classTypeList.filter(function (d) {\n          var found = _this6.currentClassProgs.find(function (c) {\n            return d.CTY_ClassType === c;\n          });\n\n          if (!found) {\n            return d;\n          }\n        });\n      }\n    },\n    editClass: function editClass() {\n      this.editSemesterID = this.classListSemesterID;\n      this.editCourseID = this.classListCourseID;\n      this.editClassName = this.classListClassName;\n      this.inputEditClassName = this.classListClassName;\n      this.ddlEditClassStatus = 'Active';\n      this.inputEditMaxStudents = this.classListMaxStudents;\n      this.inputeditLevel = this.classListLevelName;\n      this.$refs.editClassShowModal.show();\n    },\n    assignStudentsListChangePage: function assignStudentsListChangePage(currentPage) {\n      this.assignStudentsListCurrentPage = currentPage;\n    },\n    assignStudentsListChangePageSize: function assignStudentsListChangePageSize(currentPageSize) {\n      this.assignStudentsListPageSize = currentPageSize;\n    },\n    removeClassProgramme: function removeClassProgramme(classID) {\n      try {\n        var response = DataSource.shared.updateClassProgramme(classID, 'CLOSED');\n\n        if (response) {\n          if (response.code === '88') {\n            window.location.replace('/');\n          } else if (response.code === '99') {\n            this.$notify.error({\n              title: 'Error',\n              message: 'Remove Class Programme Error!'\n            });\n          } else {\n            this.$notify({\n              title: 'Success',\n              message: 'Successfully Removed Programme!',\n              type: 'success'\n            }); //this.closeAssignModal();\n\n            window.location.replace('/ClassManagement');\n          }\n        }\n      } catch (e) {\n        this.results = e;\n      }\n    }\n  }\n};",{"version":3,"sources":["ClassManagement.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"classmanagement\">\r\n        <div class=\"container admin-wrap\">\r\n            <div class=\"row header mb-2\">\r\n                <div class=\"col-lg-5 \">\r\n                    <h3 class=\"text-left mb-3\">Class Management</h3>\r\n                </div>\r\n                <div class=\"col-lg-7 actionDiv\">\r\n                    <el-button-group>\r\n                        <el-button type=\"primary\" v-b-modal.newClassModal variant=\"primary\"><i class=\"material-icons\">\r\n                            playlist_add\r\n                        </i> New Class\r\n                        </el-button>\r\n                        <el-button type=\"primary\" variant=\"primary\" v-on:click=\"directToPromotion()\">Mass Promotion <i\r\n                                class=\"material-icons\">\r\n                            view_module\r\n                        </i></el-button>\r\n                    </el-button-group>\r\n                    <!--<b-btn v-b-modal.newClassModal variant=\"primary\">-->\r\n                    <!--Mass Promotion-->\r\n                    <!--</b-btn>-->\r\n                    <!--<b-btn variant=\"primary\" v-on:click=\"directToPromotion()\">-->\r\n                    <!--Mass Promotion-->\r\n                    <!--</b-btn>-->\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <el-row style=\"margin-bottom: 10px\">\r\n                        <el-col :span=\"11\">\r\n                            <el-input v-model=\"ClassFilters[0].value\" class=\"search-datatable\" placeholder=\"Search\">\r\n                                <template slot=\"prepend\"><i class=\"material-icons\">\r\n                                    search\r\n                                </i> Search Class Name\r\n                                </template>\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-col :span=\"11\" :offset=\"2\">\r\n                            <!--<el-select v-model=\"ClassFilters[1].value\" placeholder=\"select type\"-->\r\n                            <!--multiple=\"multiple\" class=\"float-right\">-->\r\n                            <!--<el-option-->\r\n                            <!--v-for=\"item in classListFilteritem\"-->\r\n                            <!--:key=\"item\"-->\r\n                            <!--:label=\"item\"-->\r\n                            <!--:value=\"item\">-->\r\n                            <!--</el-option>-->\r\n                            <!--</el-select>-->\r\n                            <el-popover\r\n                                    placement=\"bottom-end\"\r\n                                    width=\"400\"\r\n                                    trigger=\"click\">\r\n                                <el-checkbox-group v-model=\"ClassFilters[1].value\" class=\"custom-checkbox\">\r\n                                    <el-checkbox-button v-for=\"item in classListFilteritem\" :label=\"item\"\r\n                                                        :key=\"item\">{{item}}\r\n                                    </el-checkbox-button>\r\n                                </el-checkbox-group>\r\n                                <el-button slot=\"reference\" type=\"primary\" round\r\n                                           class=\"float-right large-btn classManage-filter\"><i\r\n                                        class=\"material-icons\">\r\n                                    tune\r\n                                </i> Filter\r\n                                </el-button>\r\n                            </el-popover>\r\n                        </el-col>\r\n                    </el-row>\r\n                    <data-tables :data=\"parentClassListInt\" :action-col=\"parentClassListAction\"\r\n                                 class=\"classManage-Table\" :filters=\"ClassFilters\">\r\n                        <el-table-column v-for=\"parentClassListIntInfo in parentClassList\"\r\n                                         :prop=\"parentClassListIntInfo.prop\"\r\n                                         :label=\"parentClassListIntInfo.label\" :key=\"parentClassListIntInfo.prop\"\r\n                                         sortable=\"custom\">\r\n                        </el-table-column>\r\n                    </data-tables>\r\n                </div>\r\n            </div>\r\n            <!--<div class=\"row\">-->\r\n            <!--<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">-->\r\n            <!--<div v-if=\"classListInt.length>0\">-->\r\n            <!--<el-row style=\"margin-bottom: 10px\">-->\r\n            <!--<el-col :span=\"11\">-->\r\n            <!--<el-input v-model=\"ClassFilters[0].value\" class=\"search-datatable\" placeholder=\"Search\">-->\r\n            <!--<template slot=\"prepend\"><i class=\"material-icons\">-->\r\n            <!--search-->\r\n            <!--</i> Search Class Name-->\r\n            <!--</template>-->\r\n            <!--</el-input>-->\r\n            <!--</el-col>-->\r\n            <!--<el-col :span=\"11\" :offset=\"2\">-->\r\n            <!--&lt;!&ndash;<el-select v-model=\"ClassFilters[1].value\" placeholder=\"select type\"&ndash;&gt;-->\r\n            <!--&lt;!&ndash;multiple=\"multiple\" class=\"float-right\">&ndash;&gt;-->\r\n            <!--&lt;!&ndash;<el-option&ndash;&gt;-->\r\n            <!--&lt;!&ndash;v-for=\"item in classListFilteritem\"&ndash;&gt;-->\r\n            <!--&lt;!&ndash;:key=\"item\"&ndash;&gt;-->\r\n            <!--&lt;!&ndash;:label=\"item\"&ndash;&gt;-->\r\n            <!--&lt;!&ndash;:value=\"item\">&ndash;&gt;-->\r\n            <!--&lt;!&ndash;</el-option>&ndash;&gt;-->\r\n            <!--&lt;!&ndash;</el-select>&ndash;&gt;-->\r\n            <!--<el-popover-->\r\n            <!--placement=\"bottom-end\"-->\r\n            <!--width=\"400\"-->\r\n            <!--trigger=\"click\">-->\r\n            <!--<el-checkbox-group v-model=\"ClassFilters[1].value\" class=\"custom-checkbox\">-->\r\n            <!--<el-checkbox-button v-for=\"item in classListFilteritem\" :label=\"item\"-->\r\n            <!--:key=\"item\">{{item}}-->\r\n            <!--</el-checkbox-button>-->\r\n            <!--</el-checkbox-group>-->\r\n            <!--<el-button slot=\"reference\" type=\"primary\" round-->\r\n            <!--class=\"float-right large-btn classManage-filter\"><i-->\r\n            <!--class=\"material-icons\">-->\r\n            <!--tune-->\r\n            <!--</i> Filter-->\r\n            <!--</el-button>-->\r\n            <!--</el-popover>-->\r\n            <!--</el-col>-->\r\n            <!--</el-row>-->\r\n            <!--<data-tables :data=\"classListInt\" :action-col=\"classListAction\" class=\"classManage-Table\"-->\r\n            <!--:filters=\"ClassFilters\">-->\r\n            <!--<el-table-column v-for=\"classListInfo in classList\" :prop=\"classListInfo.prop\"-->\r\n            <!--:label=\"classListInfo.label\" :key=\"classListInfo.prop\"-->\r\n            <!--sortable=\"custom\">-->\r\n            <!--</el-table-column>-->\r\n            <!--<el-table-column label=\"Assign Students\" min-width=\"100px\">-->\r\n            <!--<template slot-scope=\"scope\">-->\r\n            <!--<el-button v-for=\"assignStudents in assignStudentToClass(scope.row)\"-->\r\n            <!--:key=\"assignStudents.name\" type=\"primary\"-->\r\n            <!--@click=\"assignStudents.handler\">-->\r\n            <!--{{assignStudents.name}}-->\r\n            <!--</el-button>-->\r\n            <!--</template>-->\r\n            <!--</el-table-column>-->\r\n            <!--<el-table-column label=\"View Students\" min-width=\"100px\">-->\r\n            <!--<template slot-scope=\"scope\">-->\r\n            <!--<el-button v-for=\"assignStudents in ViewStudentToClass(scope.row)\"-->\r\n            <!--:key=\"assignStudents.name\" type=\"primary\"-->\r\n            <!--@click=\"assignStudents.handler\">-->\r\n            <!--{{assignStudents.name}}-->\r\n            <!--</el-button>-->\r\n            <!--</template>-->\r\n            <!--</el-table-column>-->\r\n            <!--</data-tables>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n        </div>\r\n        <b-modal id=\"newClassModal\" size=\"lg\" title=\"Create New Class\" ok-only ok-variant=\"secondary\" hide-footer\r\n                 ref=\"newClassShowModal\" v-model=\"newClassShowModal\">\r\n            <div class=\"row ml-2 mr-2\">\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-3\">\r\n                    <label>Level</label>\r\n                    <!--<select v-model=\"ddlClassLevel\" class=\"form-control pro-edt-select form-control-primary\">-->\r\n                    <!--<option v-for=\"item in levelList\" v-bind:value=\"item.PK_Course_ID\">-->\r\n                    <!--{{ item.CRS_Course_Name }}-->\r\n                    <!--</option>-->\r\n                    <!--</select>-->\r\n                    <el-select v-model=\"ddlClassLevel\" placeholder=\"Select\" class=\"fullwidth\">\r\n                        <el-option\r\n                                v-for=\"item in levelList\"\r\n                                :key=\"item.PK_Course_ID\"\r\n                                :label=\"item.CRS_Course_Name\"\r\n                                :value=\"item.PK_Course_ID\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Semester</label>\r\n                    <el-select v-model=\"ddlSemester\" placeholder=\"Select\" class=\"fullwidth\">\r\n                        <el-option\r\n                                v-for=\"item in semesterList\"\r\n                                :key=\"item.PK_Semester_ID\"\r\n                                :label=\"item.SMT_Code\"\r\n                                :value=\"item.PK_Semester_ID\">\r\n                        </el-option>\r\n                    </el-select>\r\n                    <!--<select v-model=\"ddlSemester\" class=\"form-control pro-edt-select form-control-primary\">-->\r\n                    <!--<option v-for=\"item in semesterList\" v-bind:value=\"item.PK_Semester_ID\">-->\r\n                    <!--{{ item.SMT_Code }}-->\r\n                    <!--</option>-->\r\n                    <!--</select>-->\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Class Name</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"inputClassName\">\r\n                </div>\r\n                <!--<div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">-->\r\n                <!--<label>Programme</label>-->\r\n                <!--<el-select v-model=\"ddlClassType\" placeholder=\"Select\" class=\"fullwidth\">-->\r\n                <!--<el-option-->\r\n                <!--v-for=\"item in classTypeList\"-->\r\n                <!--:key=\"item.CTY_ClassType\"-->\r\n                <!--:label=\"item.CTY_ClassType\"-->\r\n                <!--:value=\"item.CTY_ClassType\">-->\r\n                <!--</el-option>-->\r\n                <!--</el-select>-->\r\n                <!--&lt;!&ndash;<select v-model=\"ddlClassType\" class=\"form-control pro-edt-select form-control-primary\">&ndash;&gt;-->\r\n                <!--&lt;!&ndash;<option v-for=\"item in classTypeList\" v-bind:value=\"item.CTY_ClassType\">&ndash;&gt;-->\r\n                <!--&lt;!&ndash;{{ item.CTY_ClassType }}&ndash;&gt;-->\r\n                <!--&lt;!&ndash;</option>&ndash;&gt;-->\r\n                <!--&lt;!&ndash;</select>&ndash;&gt;-->\r\n                <!--</div>-->\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Class Teacher</label>\r\n                    <el-select v-model=\"ddlClassTeacher\" filterable placeholder=\"Select\" class=\"fullwidth\">\r\n                        <el-option\r\n                                v-for=\"item in classTeacherList\"\r\n                                :key=\"item.CONid\"\r\n                                :label=\"item.CONname\"\r\n                                :value=\"item.CONid\">\r\n                        </el-option>\r\n                    </el-select>\r\n                    <!--<select v-model=\"ddlClassTeacher\" class=\"form-control pro-edt-select form-control-primary\">-->\r\n                    <!--<option v-for=\"item in classTeacherList\" v-bind:value=\"item.CONid\">-->\r\n                    <!--{{ item.CONname }}-->\r\n                    <!--</option>-->\r\n                    <!--</select>-->\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Maximum Student</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"inputMaxStudents\" @keypress=\"onlyNumber\">\r\n                </div>\r\n                <hr class=\"custom-hr\"/>\r\n                <div class=\"col-lg-6\">\r\n                    <button v-on:click=\"closeAssignModal()\"\r\n                            class=\"btn btn-secondary close-modal-btn float-left\">Close\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                    <button v-on:click=\"createNewProgrmamme('New')\"\r\n                            class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\">Next\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n        <b-modal id=\"editClassModal\" size=\"lg\" title=\"Edit Class\" ok-only ok-variant=\"secondary\"\r\n                 ref=\"editClassShowModal\" hide-footer v-model=\"editClassShowModal\">\r\n            <div class=\"row ml-2 mr-2\">\r\n                <div style=\"display: none;\">{{ editSemesterID }} - {{ editCourseID }} - {{ editClassName }}</div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Level</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"inputeditLevel\" readonly=\"readonly\" disabled>\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Class Name</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"inputEditClassName\">\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Status</label>\r\n                    <el-select v-model=\"ddlEditClassStatus\" filterable placeholder=\"Select\" class=\"fullwidth\">\r\n                        <el-option\r\n                                v-for=\"item in editClassStatusList\"\r\n                                :key=\"item\"\r\n                                :label=\"item\"\r\n                                :value=\"item\">\r\n                        </el-option>\r\n                    </el-select>\r\n                    <!--<select v-model=\"ddlEditClassStatus\" class=\"form-control pro-edt-select form-control-primary\">-->\r\n                    <!--<option v-for=\"item in editClassStatusList\" v-bind:value=\"item\">-->\r\n                    <!--{{ item }}-->\r\n                    <!--</option>-->\r\n                    <!--</select>-->\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Maximum Student</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"inputEditMaxStudents\" @keypress=\"onlyNumber\">\r\n                </div>\r\n                <hr class=\"custom-hr\"/>\r\n                <div class=\"col-lg-6\">\r\n                    <button @click=\"backtoClassList()\" class=\" btn btn-secondary float-left\">\r\n                        Back\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                    <button v-on:click=\"updateClass()\"\r\n                            class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\">Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n        <b-modal id=\"assignClassModal\" size=\"lg\" title=\"Assign Class\" ok-only ok-variant=\"secondary\" hide-footer\r\n                 ref=\"assignClassShowModal\" v-model=\"assignClassModal\">\r\n            <div class=\"\">\r\n                <div style=\"display: none;\">{{ assignClassLevelID }} - {{ assignClassID }} - {{ assignClassSemID }}\r\n                </div>\r\n                <div class=\"\">\r\n                    <div v-if=\"assignStudentsListInt.length<1\" class=\"empty-list_image\">\r\n                        <strong>No Record ...</strong>\r\n                        <img src=\"../assets/promotion.jpg\"/>\r\n                    </div>\r\n                    <div v-if=\"assignStudentsListInt.length>0\">\r\n                        <el-row style=\"margin-bottom: 10px\" class=\"classManage-ActionBar\">\r\n                            <el-col :span=\"16\">\r\n                                <!--<el-input v-model=\"filters[0].value\">-->\r\n                                <!--<template slot=\"prepend\">Search</template>-->\r\n                                <!--</el-input>-->\r\n                                <el-input v-model=\"assignStudentsListSearchFilter\">\r\n                                    <template slot=\"prepend\">Search</template>\r\n                                </el-input>\r\n                            </el-col>\r\n                            <el-col :span=\"7\" :offset=\"1\">\r\n                                <el-button type=\"primary\" round @click=\"ViewStudentToClassInner()\">View Assigned Student\r\n                                </el-button>\r\n                            </el-col>\r\n                        </el-row>\r\n                        <!--<data-tables :data=\"assignStudentsListInt\" :filters=\"filters\" layout=\"table\"-->\r\n                        <!--:pagination-props=\"{ background: true, pageSizes: [2, 3, 4] }\"-->\r\n                        <!--@selection-change=\"changeSelection\" :row-key=\"getRowKey\" ref=\"articleTable\">-->\r\n                        <!--<el-table-column type=\"selection\" width=\"55\" :reserve-selection=\"true\">-->\r\n                        <!--</el-table-column>-->\r\n                        <!--<el-table :data=\"assignStudentsListInt.filter(data => !assignStudentsListSearchFilter || data.Full_Name.toLowerCase().includes(assignStudentsListSearchFilter.toLowerCase()))\"-->\r\n                        <!--@selection-change=\"changeSelection\" :row-key=\"getRowKey\" ref=\"articleTable\">-->\r\n                        <el-table\r\n                                :data=\"assignStudentsListInt.filter(data => !assignStudentsListSearchFilter || data.Full_Name.toLowerCase().includes(assignStudentsListSearchFilter.toLowerCase())).slice((assignStudentsListCurrentPage-1)*assignStudentsListPageSize,assignStudentsListCurrentPage*assignStudentsListPageSize)\"\r\n                                @selection-change=\"changeSelection\" :row-key=\"getRowKey\" ref=\"articleTable\">\r\n                            <el-table-column type=\"selection\" width=\"55\" :reserve-selection=\"true\">\r\n                            </el-table-column>\r\n                            <el-table-column v-for=\"assignStudentsListInfo in assignStudentsList\"\r\n                                             :prop=\"assignStudentsListInfo.prop\"\r\n                                             :label=\"assignStudentsListInfo.label\" :key=\"assignStudentsListInfo.prop\"\r\n                                             sortable=\"custom\">\r\n                            </el-table-column>\r\n                        </el-table>\r\n                        <el-pagination\r\n                                @current-change=\"assignStudentsListChangePage\"\r\n                                @size-change=\"assignStudentsListChangePageSize\"\r\n                                :page-sizes=\"[20, 40, 60, 80]\"\r\n                                :page-size=assignStudentsListPageSize\r\n                                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                                :total=\"assignStudentsListTotal\">\r\n                        </el-pagination>\r\n                    </div>\r\n                </div>\r\n                <hr class=\"custom-hr\"/>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <button v-on:click=\"backtoClassList()\"\r\n                                class=\"btn btn-secondary close-modal-btn float-left\">Back\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <button v-on:click=\"assignClass()\"\r\n                                class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch float-right\"\r\n                                :disabled=\"assignStudentsListInt.length<1\">\r\n                            Assign\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n        <b-modal id=\"ViewClassModal\" size=\"lg\" title=\"Assign Class\" ok-only ok-variant=\"secondary\"\r\n                 ref=\"ViewClassModal\" ok-title=\"Close\" hide-footer v-model=\"ViewClassModal\">\r\n            <div class=\"\">\r\n                <div style=\"display: none;\">{{ assignClassLevelID }} - {{ assignClassID }}</div>\r\n                <div v-if=\"currentStudent.length<1\" class=\"empty-list_image\">\r\n                    <strong>No Record ...</strong>\r\n                    <img src=\"../assets/promotion.jpg\"/>\r\n                </div>\r\n                <div class=\"\">\r\n                    <div>\r\n                        <data-tables :data=\"currentStudent\" v-if=\"currentStudent.length>0\">\r\n                            <el-table-column v-for=\"studentList in currentStudentList\"\r\n                                             :prop=\"studentList.prop\"\r\n                                             :label=\"studentList.label\" :key=\"studentList.prop\"\r\n                                             sortable=\"custom\">\r\n                            </el-table-column>\r\n                        </data-tables>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr class=\"custom-hr\"/>\r\n            <div class=\"row \">\r\n                <div class=\"col-lg-6\">\r\n                    <button @click=\"closeAssignModal\"\r\n                            class=\"btn btn-secondary waves-effect waves-light m-r-10 btnFamilyIDSearch float-left\">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                    <button @click=\"returnAssignStudents\"\r\n                            class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch float-right\">\r\n                        Assign Student\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n        <b-modal id=\"ClassListModal\" size=\"lg\" title=\"Class List\" ok-only ok-variant=\"secondary\" hide-footer\r\n                 ref=\"classListShowModal\" v-model=\"ClassListModal\">\r\n            <div class=\"row ml-2 mr-2\">\r\n                <div style=\"display: none;\">{{ classListSemesterID }} - {{ classListCourseID }} - {{ classListClassName\r\n                    }} - {{ classListLevelName }} - {{ classListMaxStudents }}\r\n                </div>\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                    <div class=\"classModal-button-group\">\r\n                        <el-button-group class=\" \">\r\n                            <el-button type=\"primary\" v-on:click=\"editClass()\" variant=\"primary\"><i class=\"material-icons\">\r\n                                edit\r\n                            </i> Edit Class\r\n                            </el-button>\r\n                            <el-button type=\"primary\" v-on:click=\"createNewProgrmamme('Edit')\" variant=\"primary\"><i\r\n                                    class=\"material-icons\">\r\n                                note_add\r\n                            </i> Create New Programme\r\n                            </el-button>\r\n                        </el-button-group>\r\n                        <div class=\"delete_programme_btn\">\r\n                            <small>Remove Programme</small>\r\n                            <el-button type=\"info\" round v-on:click=\"\" variant=\"primary\"><i\r\n                                    class=\"material-icons\">\r\n                                delete\r\n                            </i>\r\n                            </el-button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"totalNumberOfStudentAssignedToClass\" v-if=\"totalNumberOfStudentAssignedToClass\">\r\n                        <label>\r\n                            Total Student Assigned: {{ totalNumberOfStudentAssignedToClass }}\r\n                        </label>\r\n                    </div>\r\n                    <div v-if=\"classListInt.length>0\">\r\n                        <data-tables :data=\"classListInt\" class=\"classManage-Table\" :action-col=\"classListAction\"\r\n                                     :filters=\"ClassFilters\">\r\n                            <el-table-column v-for=\"classListInfo in classList\" :prop=\"classListInfo.prop\"\r\n                                             :label=\"classListInfo.label\" :key=\"classListInfo.prop\"\r\n                                             sortable=\"custom\">\r\n                            </el-table-column>\r\n                            <el-table-column label=\"Assign Students\" min-width=\"100px\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-button v-for=\"assignStudents in assignStudentToClass(scope.row)\"\r\n                                               :key=\"assignStudents.name\" type=\"primary\"\r\n                                               @click=\"assignStudents.handler\">\r\n                                        {{assignStudents.name}}\r\n                                    </el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column label=\"View Students\" min-width=\"100px\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-button v-for=\"assignStudents in ViewStudentToClass(scope.row)\"\r\n                                               :key=\"assignStudents.name\" type=\"primary\"\r\n                                               @click=\"assignStudents.handler\">\r\n                                        {{assignStudents.name}}\r\n                                    </el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </data-tables>\r\n                    </div>\r\n                </div>\r\n                <hr class=\"custom-hr\"/>\r\n                <div class=\"col-lg-6\">\r\n                    <button v-on:click=\"closeAssignModal()\"\r\n                            class=\"btn btn-secondary close-modal-btn float-left\">Close\r\n                    </button>\r\n                </div>\r\n                <!--<div class=\"col-lg-6\">-->\r\n                <!--<button v-on:click=\"editClass()\"-->\r\n                <!--class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\">Edit Class-->\r\n                <!--</button>-->\r\n                <!--<button v-on:click=\"createNewProgrmamme('Edit')\"-->\r\n                <!--class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\">Create New-->\r\n                <!--Programme-->\r\n                <!--</button>-->\r\n                <!--</div>-->\r\n            </div>\r\n        </b-modal>\r\n        <b-modal id=\"newProgrammeModal\" size=\"lg\" title=\"Create New Programme\" ok-only ok-variant=\"secondary\"\r\n                 hide-footer\r\n                 ref=\"newProgrammeShowModal\" v-model=\"newProgrammeShowModal\">\r\n            <div class=\"row ml-2 mr-2\">\r\n                <div style=\"display: none;\">{{ programmeLevelID }} - {{ programmeSemID }} - {{ programmeClassName }} -\r\n                    {{ programmeMaxStudent }} - {{ programmeClassTeacher }} - {{ programmeSaveType }}\r\n                </div>\r\n                <div class=\"col-lg-12\" v-if=\"currentClassTypeList.length > 0\">\r\n                    <label>Programme</label>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                    <el-select v-model=\"ddlClassType\" placeholder=\"Select\" class=\"fullwidth\"\r\n                               v-if=\"currentClassTypeList.length > 0\">\r\n                        <el-option\r\n                                v-for=\"item in currentClassTypeList\"\r\n                                :key=\"item.CTY_ClassType\"\r\n                                :label=\"item.CTY_ClassType\"\r\n                                :value=\"item.CTY_ClassType\"\r\n                                :disabled=\"item.disabled===true\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </div>\r\n                <div class=\"col-lg-12\">\r\n                    <div v-if=\"currentClassTypeList.length<1\" class=\"empty-list_image\">\r\n                        <strong class=\"text-center\">All Programme has been created.</strong>\r\n                        <img src=\"../assets/promotion.jpg\"/>\r\n                    </div>\r\n                </div>\r\n                <hr class=\"custom-hr\"/>\r\n                <div class=\"col-lg-6\">\r\n                    <button v-on:click=\"backtoClassList()\"\r\n                            class=\"btn btn-secondary close-modal-btn float-left\" v-if=\"showbackBtn === true\">Back\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                    <button v-on:click=\"saveClass()\"\r\n                            class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\"\r\n                            :disabled=\"currentClassTypeList < 1\">Create\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n    </div>\r\n</template>\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"ClassManagement\",\r\n        async created() {\r\n            //await this.getClass();\r\n            await this.getParentClassList();\r\n            await this.getLevel();\r\n            await this.getAcademicYear();\r\n            await this.getClassType();\r\n            await this.getClassTeacher();\r\n        },\r\n        data() {\r\n            return {\r\n                currentClassProgs: [],\r\n                assignClassModal: false,\r\n                newClassShowModal: false,\r\n                editClassShowModal: false,\r\n                newProgrammeShowModal: false,\r\n                ClassListModal: false,\r\n                ViewClassModal: false,\r\n                showbackBtn: false,\r\n                ddlClassLevel: '',\r\n                ddlSemester: '',\r\n                inputClassName: '',\r\n                ddlClassType: '',\r\n                ddlClassTeacher: '',\r\n                inputMaxStudents: '',\r\n                ddlEditClassStatus: '',\r\n                inputEditClassName: '',\r\n                inputEditMaxStudents: '',\r\n                inputeditLevel: '',\r\n                assignClassLevelID: '',\r\n                assignClassID: '',\r\n                classListSemesterID: '',\r\n                classListCourseID: '',\r\n                classListClassName: '',\r\n                classListLevelName: '',\r\n                classListMaxStudents: '',\r\n                programmeLevelID: '',\r\n                programmeSemID: '',\r\n                programmeClassName: '',\r\n                programmeMaxStudent: '',\r\n                programmeClassTeacher: '',\r\n                programmeSaveType: '',\r\n                editSemesterID: '',\r\n                editCourseID: '',\r\n                editClassName: '',\r\n                assignStudentsListSearchFilter: '',\r\n                totalNumberOfStudentAssignedToClass: '',\r\n                assignClassSemID: '',\r\n\r\n                levelList: [],\r\n                semesterList: [],\r\n                classTypeList: [],\r\n                currentClassTypeList: [],\r\n                classTeacherList: [],\r\n                classListInt: [],\r\n                classListFilteritem: [],\r\n                editClassStatusList: ['Active', 'Closed'],\r\n                assignStudentsListInt: [],\r\n\r\n\r\n                classList: [{\r\n                    prop: \"CLS_ClassName\",\r\n                    label: \"Class Name\"\r\n                }, {\r\n                    prop: \"CLS_Batch\",\r\n                    label: \"Programme\"\r\n                    // }, {\r\n                    //     prop: \"CLS_Class_Max_Students\",\r\n                    //     label: \"Max Students\"\r\n                }, {\r\n                    prop: \"CRS_Course_Name\",\r\n                    label: \"Level\"\r\n                // }, {\r\n                //     prop: \"PK_Class_ID\",\r\n                //     label: \"class id\"\r\n                }],\r\n                classListAction: {\r\n                    label: 'Delete',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            icon: 'el-icon-delete'\r\n                        },\r\n                        handler: row => {\r\n                            this.removeClassProgramme(row.PK_Class_ID);\r\n                        },\r\n                        label: ''\r\n                    }]\r\n                },\r\n\r\n\r\n                multipleSelection: [],\r\n                assignStudentsListCurrentPage: 1,\r\n                assignStudentsListPageSize: 20,\r\n                assignStudentsListTotal: 0,\r\n                assignStudentsList: [{\r\n                    prop: \"Index_No\",\r\n                    label: \"Student ID\"\r\n                }, {\r\n                    prop: \"Full_Name\",\r\n                    label: \"First Name\"\r\n                }, {\r\n                    prop: \"Middle_name\",\r\n                    label: \"Middle Name\"\r\n                }, {\r\n                    prop: \"Last_name\",\r\n                    label: \"Last Name\"\r\n                },\r\n                    //     {\r\n                    //     prop: \"assignToCurrentClass\",\r\n                    //     label: \"Assigned Current Class\"\r\n                    // }\r\n                ],\r\n                ClassFilters: [\r\n                    {\r\n                        value: '',\r\n                        prop: 'CLS_ClassName',\r\n                    },\r\n                    {\r\n                        value: [],\r\n                        prop: 'CRS_Course_Name'\r\n                    }],\r\n                // filters: [{\r\n                //     value: '',\r\n                //     prop: 'Full_Name',\r\n                // }],\r\n\r\n\r\n                currentStudent: [],\r\n                currentStudentList: [{\r\n                    prop: \"Index_No\",\r\n                    label: \"Student ID\"\r\n                }, {\r\n                    prop: \"Full_Name\",\r\n                    label: \"First Name\"\r\n                }, {\r\n                    prop: \"Middle_name\",\r\n                    label: \"Middle Name\"\r\n                }, {\r\n                    prop: \"Last_name\",\r\n                    label: \"Last Name\"\r\n                }],\r\n                tempRow: \"\",\r\n\r\n\r\n                parentClassListInt: [],\r\n                parentClassList: [{\r\n                    prop: \"CLS_ClassName\",\r\n                    label: \"Class Name\"\r\n                }, {\r\n                    prop: \"Average_MaxStudents\",\r\n                    label: \"Max Students\"\r\n                }, {\r\n                    prop: \"CRS_Course_Name\",\r\n                    label: \"Level\"\r\n                }, {\r\n                    prop: \"SMT_Year\",\r\n                    label: \"Year\"\r\n                }],\r\n                parentClassListAction: {\r\n                    label: 'Edit',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            icon: 'el-icon-edit'\r\n                        },\r\n                        handler: row => {\r\n                            this.classListSemesterID = row.CLS_FK_Semester_ID;\r\n                            this.classListCourseID = row.CLS_FK_Course_ID;\r\n                            this.classListClassName = row.CLS_ClassName;\r\n                            this.classListLevelName = row.CRS_Course_Name;\r\n                            this.classListMaxStudents = row.Average_MaxStudents;\r\n                            this.getClass();\r\n                            this.$refs.classListShowModal.show();\r\n                            this.showbackBtn = true;\r\n                        },\r\n                        label: 'Edit'\r\n                    }]\r\n                },\r\n            };\r\n        },\r\n        methods: {\r\n            getRowKey(row) {\r\n                return row.Student_ID;\r\n            },\r\n            changeSelection(val) {\r\n                this.multipleSelection = val;\r\n            },\r\n            backtoClassList() {\r\n                this.$refs.classListShowModal.show();\r\n            },\r\n            async getParentClassList() {\r\n                try {\r\n                    const response = await DataSource.shared.getParentClassList('', 'GET CLASS LIST GROUP BY LEVEL, SEMESTER, SCHOOL AND CLASS NAME');\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else if (response.code === '99') {\r\n                            console.log('Error! getParentClassList');\r\n                        } else {\r\n                            this.parentClassListInt = response.Table;\r\n                            this.parentClassListInt.forEach(object => {\r\n                                const foundLevel = this.classListFilteritem.find(d => d === object.CRS_Course_Name);\r\n                                if (!foundLevel) {\r\n                                    this.classListFilteritem.push(object.CRS_Course_Name);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getClass() {\r\n                try {\r\n                    const response = await DataSource.shared.getClass('');\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else {\r\n                            this.classListInt = response.Table;\r\n                            // this.classListInt.forEach(object => {\r\n                            //     const found = this.classListFilteritem.find(d => d === object.CLS_Batch);\r\n                            //     if (!found) {\r\n                            //         this.classListFilteritem.push(object.CLS_Batch);\r\n                            //     }\r\n                            //     const foundLevel = this.classListFilteritem.find(d => d === object.CRS_Course_Name);\r\n                            //     if (!foundLevel) {\r\n                            //         this.classListFilteritem.push(object.CRS_Course_Name);\r\n                            //     }\r\n                            // });\r\n\r\n\r\n                            let classListList = response.Table;\r\n                            this.classListInt = classListList.filter(d => {\r\n                                return d.CLS_FK_Semester_ID === this.classListSemesterID && d.CLS_FK_Course_ID === this.classListCourseID && d.CLS_ClassName === this.classListClassName;\r\n                            });\r\n\r\n\r\n                            this.currentClassProgs = this.classListInt.map(d => d.CLS_Batch);\r\n\r\n                        }\r\n                    }\r\n\r\n                    const totalStudentsInClassResponse = await DataSource.shared.getClassStudentList(this.classListSemesterID, this.classListCourseID, this.classListClassName);\r\n                    if (totalStudentsInClassResponse) {\r\n                        if (totalStudentsInClassResponse.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else if (totalStudentsInClassResponse.code === '99') {\r\n                            console.log('Error! in getClassStudentList');\r\n                        } else if (totalStudentsInClassResponse.code === '2') {\r\n                            console.log('No student in this class');\r\n                        } else {\r\n                            this.totalNumberOfStudentAssignedToClass = totalStudentsInClassResponse.Table.length;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getLevel() {\r\n                try {\r\n                    const response = await DataSource.shared.getLevel('');\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else {\r\n                            this.levelList = response.Table;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getAcademicYear() {\r\n                try {\r\n                    const response = await DataSource.shared.getAcademicYear('');\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else {\r\n                            this.semesterList = response.Table;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getClassType() {\r\n                try {\r\n                    const response = await DataSource.shared.getClassType('');\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else {\r\n                            this.classTypeList = response.Table;\r\n                            //\r\n                            // this.classTypeList = this.classTypeList.filter(d => d.ID !== fileId);\r\n                            //\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getClassTeacher() {\r\n                try {\r\n                    const response = await DataSource.shared.getTeacherListBySchool();\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else {\r\n                            this.classTeacherList = response.Table;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            onlyNumber($event) {\r\n                //console.log($event.keyCode); //keyCodes value\r\n                let keyCode = ($event.keyCode ? $event.keyCode : $event.which);\r\n                //if ((keyCode < 48 || keyCode > 57) && keyCode !== 46) { // 46 is dot\r\n                if (keyCode < 48 || keyCode > 57) { // 46 is dot\r\n                    $event.preventDefault();\r\n                }\r\n            },\r\n            async saveClass() {\r\n                try {\r\n                    if (this.programmeLevelID === '' || this.programmeSemID === '' || this.ddlClassType === '' || this.programmeClassName === '' || this.programmeMaxStudent === '' || this.programmeClassTeacher === '' || this.programmeSaveType === '') {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Please fill in all information'\r\n                        });\r\n                    } else {\r\n                        const response = await DataSource.shared.saveClass(this.programmeLevelID, this.programmeSemID, this.ddlClassType, this.programmeClassName, this.programmeMaxStudent, this.programmeClassTeacher, this.programmeSaveType);\r\n                        if (response) {\r\n                            if (response.code === '88') {\r\n                                window.location.replace('/');\r\n                            } else if (response.code === '99') {\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Save Class Error!'\r\n                                });\r\n                            } else if (response.code === '2') {\r\n                                this.$notify.error({\r\n                                    title: 'Duplicated',\r\n                                    message: 'Duplicated Class with programme!'\r\n                                });\r\n                            } else {\r\n                                this.$notify({\r\n                                    title: 'Success',\r\n                                    message: 'Successfully Saved!',\r\n                                    type: 'success'\r\n                                });\r\n                                window.location.replace('/ClassManagement');\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async updateClass() {\r\n                try {\r\n                    if (this.editSemesterID === '' || this.editCourseID === '' || this.editClassName === '') {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Please close and open again'\r\n                        });\r\n                    } else if (this.inputEditClassName === '' || this.ddlEditClassStatus === '' || this.inputEditMaxStudents === '') {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Please fill in all information'\r\n                        });\r\n                    } else {\r\n                        const response = await DataSource.shared.updateClass(this.ddlEditClassStatus, this.inputEditClassName, this.inputEditMaxStudents, this.editClassName, this.editCourseID, this.editSemesterID);\r\n                        if (response) {\r\n                            if (response.code === '88') {\r\n                                window.location.replace('/');\r\n                            } else if (response.code === '99') {\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Edit Class Error!'\r\n                                });\r\n                            } else {\r\n                                this.$notify({\r\n                                    title: 'Success',\r\n                                    message: 'Successfully Edited!',\r\n                                    type: 'success'\r\n                                });\r\n                                this.getParentClassList();\r\n                                this.closeAssignModal();\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            directToPromotion() {\r\n                window.location.replace('/Promotion');\r\n            },\r\n            assignStudentToClass(row) {\r\n                return [{\r\n                    name: 'Assign',\r\n                    handler: _ => {\r\n                        this.assignClassLevelID = row.PK_Course_ID;\r\n                        this.assignClassID = row.PK_Class_ID;\r\n                        this.assignClassSemID = row.CLS_FK_Semester_ID;\r\n                        this.getAssignStudents();\r\n                        // this.$refs.assignClassShowModal.show();\r\n                        this.assignClassModal = true;\r\n                        this.tempRow = row;\r\n                    }\r\n                }];\r\n            },\r\n            closeAssignModal() {\r\n                this.assignClassModal = false;\r\n                this.newClassShowModal = false;\r\n                this.editClassShowModal = false;\r\n                this.newProgrammeShowModal = false;\r\n                this.ClassListModal = false;\r\n                this.ViewClassModal = false;\r\n            },\r\n            ViewStudentToClass(row) {\r\n                return [{\r\n                    name: 'View',\r\n                    handler: _ => {\r\n                        this.assignClassLevelID = row.PK_Course_ID;\r\n                        this.assignClassID = row.PK_Class_ID;\r\n                        this.assignClassSemID = row.CLS_FK_Semester_ID;\r\n                        this.getAssignStudents();\r\n                        this.$refs.ViewClassModal.show();\r\n\r\n                    }\r\n                }];\r\n            },\r\n            ViewStudentToClassInner() {\r\n                const row = this.tempRow;\r\n                this.assignClassLevelID = row.PK_Course_ID;\r\n                this.assignClassID = row.PK_Class_ID;\r\n                this.getAssignStudents();\r\n                this.$refs.ViewClassModal.show();\r\n            },\r\n            returnAssignStudents() {\r\n                this.$refs.assignClassShowModal.show();\r\n            },\r\n            async getAssignStudents() {\r\n                try {\r\n                    if (this.multipleSelection.length > 0) {\r\n                        this.$refs.articleTable.clearSelection();\r\n                    }\r\n\r\n                    this.$vs.loading();\r\n                    const response = await DataSource.shared.getActiveStudentsByLevelSchool(this.assignClassLevelID, this.assignClassID, this.assignClassSemID);\r\n                    if (response) {\r\n                        this.$vs.loading.close();\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else {\r\n                            // response.Table.forEach(d => {\r\n                            let assignStudentList = response.Table;\r\n\r\n                            this.assignStudentsListInt = assignStudentList.filter(d => {\r\n                                return d.assignToCurrentClass !== \"YES\";\r\n                            });\r\n                            this.currentStudent = assignStudentList.filter(d => {\r\n                                return d.assignToCurrentClass === \"YES\";\r\n                            });\r\n                            this.assignStudentsListTotal = this.assignStudentsListInt.length;\r\n                            this.assignStudentsListCurrentPage = 1;\r\n                            this.assignStudentsListPageSize = 20;\r\n\r\n                            //console.log(\"assignStudentsListInt\", this.assignStudentsListInt);\r\n\r\n                            // if (x.assignToCurrentClass !== \"YES\") {\r\n                            //     this.assignStudentsListInt.push(x);\r\n                            // }else{\r\n                            //     this.currentStudent.push(x);\r\n                            //     console.log(this.currentStudent,\"111\")\r\n                            // }\r\n                            // });\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async assignClass() {\r\n                let classAssignList = [];\r\n\r\n                this.multipleSelection.forEach(item => {\r\n                    let classAssignDetials = {\r\n                        studentID: item.Student_ID,\r\n                        classHistoryID: item.PK_Student_Course_ID\r\n                    };\r\n\r\n                    classAssignList.push(classAssignDetials);\r\n                });\r\n\r\n                const response = await DataSource.shared.massSetClass(this.assignClassID, JSON.stringify(classAssignList));\r\n                if (response) {\r\n                    if (response.code === '1') {\r\n                        this.$notify({\r\n                            title: 'Success',\r\n                            message: 'Successfully saved',\r\n                            type: 'success'\r\n                        });\r\n                        this.closeAssignModal();\r\n                        this.getAssignStudents();\r\n                        // window.location.replace('/ClassManagement');\r\n                    } else if (response.code === '2') {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'The class have been exceeded max number of student!'\r\n                        });\r\n                    } else {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Error! Please try again later'\r\n                        });\r\n                        window.location.replace('/ClassManagement');\r\n                    }\r\n                }\r\n            },\r\n            createNewProgrmamme(value) {\r\n                if (value === 'New') {\r\n                    if (this.ddlClassLevel === '' || this.ddlSemester === '' || this.inputClassName === '' || this.inputMaxStudents === '' || this.ddlClassTeacher === '') {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Please fill in all information'\r\n                        });\r\n                    } else {\r\n                        this.programmeLevelID = this.ddlClassLevel;\r\n                        this.programmeSemID = this.ddlSemester;\r\n                        this.programmeClassName = this.inputClassName;\r\n                        this.programmeMaxStudent = this.inputMaxStudents;\r\n                        this.programmeClassTeacher = this.ddlClassTeacher;\r\n                        this.programmeSaveType = 'NEW CLASS';\r\n\r\n                        this.newProgrammeShowModal = true;\r\n\r\n                        this.currentClassTypeList = this.classTypeList;\r\n                    }\r\n                } else if (value === 'Edit') {\r\n                    this.programmeLevelID = this.classListInt[0].CLS_FK_Course_ID;\r\n                    this.programmeSemID = this.classListInt[0].CLS_FK_Semester_ID;\r\n                    this.programmeClassName = this.classListInt[0].CLS_ClassName;\r\n                    this.programmeMaxStudent = this.classListInt[0].CLS_Class_Max_Students;\r\n                    this.programmeClassTeacher = this.classListInt[0].CLS_Class_Incharge_Staff;\r\n                    this.programmeSaveType = 'NEW BATCH ONLY';\r\n\r\n                    this.newProgrammeShowModal = true;\r\n\r\n\r\n                    this.currentClassTypeList = this.classTypeList.filter(d => {\r\n                        const found = this.currentClassProgs.find(c => {\r\n                            return d.CTY_ClassType === c;\r\n                        });\r\n                        if (!found) {\r\n                            return d;\r\n                        }\r\n                    });\r\n\r\n                }\r\n            },\r\n            editClass() {\r\n                this.editSemesterID = this.classListSemesterID;\r\n                this.editCourseID = this.classListCourseID;\r\n                this.editClassName = this.classListClassName;\r\n                this.inputEditClassName = this.classListClassName;\r\n                this.ddlEditClassStatus = 'Active';\r\n                this.inputEditMaxStudents = this.classListMaxStudents;\r\n                this.inputeditLevel = this.classListLevelName;\r\n                this.$refs.editClassShowModal.show();\r\n            },\r\n            assignStudentsListChangePage(currentPage) {\r\n                this.assignStudentsListCurrentPage = currentPage;\r\n            },\r\n            assignStudentsListChangePageSize(currentPageSize) {\r\n                this.assignStudentsListPageSize = currentPageSize;\r\n            },\r\n            removeClassProgramme(classID) {\r\n                try {\r\n                    const response = DataSource.shared.updateClassProgramme(classID, 'CLOSED');\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else if (response.code === '99') {\r\n                            this.$notify.error({\r\n                                title: 'Error',\r\n                                message: 'Remove Class Programme Error!'\r\n                            });\r\n                        } else {\r\n                            this.$notify({\r\n                                title: 'Success',\r\n                                message: 'Successfully Removed Programme!',\r\n                                type: 'success'\r\n                            });\r\n                            //this.closeAssignModal();\r\n                            window.location.replace('/ClassManagement');\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style scoped>\r\n    .actionDiv {\r\n        text-align: right;\r\n    }\r\n\r\n    .actionDiv .btn-primary {\r\n        display: inline;\r\n        margin-left: 10px;\r\n    }\r\n\r\n    .totalNumberOfStudentAssignedToClass {\r\n        margin: 10px 0 0 0;\r\n    }\r\n\r\n    .totalNumberOfStudentAssignedToClass label {\r\n        display: inline-block !important;\r\n        background: linear-gradient(#1D976C, #93F9B9);\r\n        padding: 10px;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .totalNumberOfStudentAssignedToClass label:hover {\r\n        opacity: 0.8;\r\n    }\r\n</style>"],"sourceRoot":"src/pages"}]}