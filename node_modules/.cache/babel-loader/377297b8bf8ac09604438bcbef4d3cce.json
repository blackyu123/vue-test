{"remainingRequest":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\pages\\PendingPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\pages\\PendingPost.vue","mtime":1545926644669},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1545311081350},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js","mtime":1545311099620}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataSource from \"../data/datasource\";\nexport default {\n  name: 'PendingPost',\n  data: function data() {\n    var _this = this;\n\n    return {\n      list: [],\n      titles: [{\n        prop: \"ID\",\n        label: \"ID\"\n      }, {\n        prop: \"PostApproverID\",\n        label: \"Approver ID\"\n      }, {\n        prop: \"PostContent\",\n        label: \"Content\"\n      }, {\n        prop: \"PostCreatedDate\",\n        label: \"Created At\"\n      }, {\n        prop: \"PostSchoolID\",\n        label: \"School ID\"\n      }, {\n        prop: \"PostProfolio\",\n        label: \"PostProfolio\"\n      }, {\n        prop: \"PostApproverStatus\",\n        label: \"Approver Status\"\n      }, {\n        prop: \"PostStatus\",\n        label: \"Post Status\"\n      }],\n      actionCol: {\n        label: 'Approved',\n        props: {\n          align: 'center'\n        },\n        buttons: [{\n          props: {\n            type: 'primary' // icon: 'el-icon-edit'\n\n          },\n          handler: function () {\n            var _handler = _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee(row) {\n              var response;\n              return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      console.log(\"clicked row data: \", row); // call approve post api\n\n                      _context.next = 4;\n                      return DataSource.shared.approvePost(row.PostApproverID, \"Approved\");\n\n                    case 4:\n                      response = _context.sent;\n                      console.log('approve response: ', response); // update pending post view on success\n\n                      _this.getPendingPost();\n\n                      _context.next = 12;\n                      break;\n\n                    case 9:\n                      _context.prev = 9;\n                      _context.t0 = _context[\"catch\"](0);\n                      // log error\n                      console.log(_context.t0);\n\n                    case 12:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this, [[0, 9]]);\n            }));\n\n            function handler(_x) {\n              return _handler.apply(this, arguments);\n            }\n\n            return handler;\n          }(),\n          label: 'Approve'\n        }]\n      },\n      selectedRow: null,\n      results: null\n    };\n  },\n  methods: {\n    getPendingPost: function () {\n      var _getPendingPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return DataSource.shared.pendingPost();\n\n              case 3:\n                response = _context2.sent;\n\n                if (!response) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                this.list = response.Table;\n                _context2.t0 = response.code;\n                _context2.next = _context2.t0 === \"2\" ? 9 : _context2.t0 === \"88\" ? 11 : _context2.t0 === \"99\" ? 13 : 15;\n                break;\n\n              case 9:\n                this.results = \"No Record Found\"; //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\n\n                return _context2.abrupt(\"break\", 15);\n\n              case 11:\n                this.results = \"Please login\"; //this.results = `Invalid password - sample 2: code: ${response.code}`;\n\n                return _context2.abrupt(\"break\", 15);\n\n              case 13:\n                this.results = \"Please try again later\"; //this.results = `Please fill in all field - sample 3: code: ${response.code}`;\n\n                return _context2.abrupt(\"break\", 15);\n\n              case 15:\n                _context2.next = 20;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t1 = _context2[\"catch\"](0);\n                console.log(_context2.t1);\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 17]]);\n      }));\n\n      function getPendingPost() {\n        return _getPendingPost.apply(this, arguments);\n      }\n\n      return getPendingPost;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.getPendingPost();\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["PendingPost.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"staff-post\" class=\"mt-3 container\">\r\n        <div>\r\n            <h4>PENDING POST</h4>\r\n\r\n            <div v-if=\"list && list.length>0\">\r\n                <data-tables-server :data=\"list\" @selection-change=\"handleSelectionChange\" :fit=\"false\"\r\n                                    :action-col=\"actionCol\">\r\n                    <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n\r\n                    <el-table-column v-for=\"title in titles\" :prop=\"title.prop\" :label=\"title.label\" :key=\"title.prop\"\r\n                                     :width=\"title.width\"\r\n                                     sortable=\"custom\">\r\n                    </el-table-column>\r\n\r\n                </data-tables-server>\r\n            </div>\r\n            <div v-else-if=\"results==='No Record Found'\">\r\n                No Record Found\r\n            </div>\r\n            <div v-else>\r\n                {{results}}\r\n                Loading...\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: 'PendingPost',\r\n        data() {\r\n            return {\r\n                list: [],\r\n                titles: [{\r\n                    prop: \"ID\",\r\n                    label: \"ID\"\r\n                }, {\r\n                    prop: \"PostApproverID\",\r\n                    label: \"Approver ID\"\r\n                }, {\r\n                    prop: \"PostContent\",\r\n                    label: \"Content\"\r\n                }, {\r\n                    prop: \"PostCreatedDate\",\r\n                    label: \"Created At\"\r\n                }, {\r\n                    prop: \"PostSchoolID\",\r\n                    label: \"School ID\"\r\n                }, {\r\n                    prop: \"PostProfolio\",\r\n                    label: \"PostProfolio\"\r\n                }, {\r\n                    prop: \"PostApproverStatus\",\r\n                    label: \"Approver Status\"\r\n                }, {\r\n                    prop: \"PostStatus\",\r\n                    label: \"Post Status\"\r\n                }],\r\n                actionCol: {\r\n                    label: 'Approved',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            // icon: 'el-icon-edit'\r\n                        },\r\n                        handler: async row => {\r\n                            try {\r\n                                console.log(\"clicked row data: \", row);\r\n\r\n                                // call approve post api\r\n                                const response = await DataSource.shared.approvePost(row.PostApproverID, \"Approved\");\r\n                                console.log('approve response: ', response);\r\n\r\n                                // update pending post view on success\r\n                                this.getPendingPost();\r\n                            } catch (error) {\r\n                                // log error\r\n                                console.log(error);\r\n                            }\r\n\r\n                        },\r\n                        label: 'Approve'\r\n                    }]\r\n                },\r\n                selectedRow: null,\r\n                results: null\r\n            };\r\n        },\r\n        methods: {\r\n            async getPendingPost() {\r\n                try {\r\n                    const response = await DataSource.shared.pendingPost();\r\n                    if (response) {\r\n                        this.list = response.Table;\r\n                        switch (response.code) {\r\n                            case \"2\":\r\n                                this.results = `No Record Found`;\r\n                                //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\r\n                                break;\r\n                            case \"88\":\r\n                                this.results = `Please login`;\r\n                                //this.results = `Invalid password - sample 2: code: ${response.code}`;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Please try again later`;\r\n                                //this.results = `Please fill in all field - sample 3: code: ${response.code}`;\r\n                                break;\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n        },\r\n        async mounted() {\r\n            this.getPendingPost();\r\n        }\r\n        ,\r\n    }\r\n    ;\r\n</script>\r\n\r\n<style>\r\n    thead.vs-table--thead th {\r\n        width: auto;\r\n        text-align: center !important;\r\n    }\r\n\r\n    .vs-table--tbody-table .tr-table td {\r\n        text-align: left;\r\n    }\r\n</style>"],"sourceRoot":"src\\pages"}]}