{"remainingRequest":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\data\\datasource.js","dependencies":[{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\data\\datasource.js","mtime":1546873661259},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1545311081350},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\eslint-loader\\index.js","mtime":1545311087492}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { URLForEndpoint, NewRequest, parseResponseAndHandleErrors, parseObject } from \"../data/requests\";\nimport { ERROR_SERVER_UNREACHABLE } from \"../data/datasourceConst\";\nimport axios from \"axios\";\nimport jQuery from 'jquery';\nvar API_HOST = process.env.VUE_APP_ROOT_API || \"http://local.emsv2\";\n\nvar DataSource =\n/*#__PURE__*/\nfunction () {\n  _createClass(DataSource, null, [{\n    key: \"shared\",\n    get: function get() {\n      if (DataSource.instance == null || DataSource.instance === undefined) {\n        DataSource.instance = new DataSource();\n      }\n\n      return DataSource.instance;\n    }\n  }]);\n\n  function DataSource() {\n    _classCallCheck(this, DataSource);\n\n    this.loggedIn = false;\n  }\n\n  _createClass(DataSource, [{\n    key: \"callAPI\",\n    value: function () {\n      var _callAPI = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(endPoint) {\n        var method,\n            queryObject,\n            requestBody,\n            hasContentType,\n            url,\n            request,\n            response,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                method = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"GET\";\n                queryObject = _args.length > 2 ? _args[2] : undefined;\n                requestBody = _args.length > 3 ? _args[3] : undefined;\n                hasContentType = _args.length > 4 && _args[4] !== undefined ? _args[4] : true;\n                url = URLForEndpoint(endPoint, queryObject);\n                request = NewRequest(method, hasContentType);\n\n                if (!hasContentType) {\n                  delete request.headers[\"Content-Type\"];\n                  request.body = requestBody;\n                } else if (method !== \"GET\" && requestBody) {\n                  request.body = JSON.stringify(requestBody);\n                }\n\n                _context.prev = 7;\n                _context.next = 10;\n                return fetch(url, request);\n\n              case 10:\n                response = _context.sent;\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](7);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 16:\n                _context.next = 18;\n                return parseResponseAndHandleErrors(response);\n\n              case 18:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 13]]);\n      }));\n\n      function callAPI(_x) {\n        return _callAPI.apply(this, arguments);\n      }\n\n      return callAPI;\n    }() // by default, withToken set to true\n\n  }, {\n    key: \"callWebService\",\n    value: function callWebService(endPoint, data, method) {\n      var withToken = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var withFormData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var request = {\n        dataType: \"json\",\n        url: \"\".concat(API_HOST).concat(endPoint),\n        cache: false,\n        success: function success(response) {\n          return response;\n        }\n      };\n\n      if (method) {\n        request.method = method;\n      }\n\n      if (data) {\n        request.data = data;\n      }\n\n      if (withToken) {\n        data.token = sessionStorage.getItem('authToken');\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\n        data.UserType_Session = sessionStorage.getItem('userTypeSession');\n        data.UserUniversity_Session = sessionStorage.getItem('userUniversitySession');\n      } // this is just testing, remove this if savePost not working\n      // this might just use for upload file request only(formData), not for whole request\n\n\n      if (withFormData) {\n        request.processData = false;\n        request.contentType = false;\n      } // get token from session\n      // const token = sessionStorage.getItem('authToken');\n      // if token is available and withToken set as true, then pass request with headers\n      // they not using header Authorization so disable this\n      // if (token && withToken === true) {\n      //     request.headers = {\"Authorization\": token};\n      // }\n\n\n      console.log(request, '  ssss');\n      return jQuery.ajax(request);\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function () {\n      var _uploadFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(files, postID) {\n        var formData, request;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(postID);\n                formData = new FormData();\n                formData.append('token', sessionStorage.getItem('authToken'));\n                formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\n                console.log(files);\n                formData.append(\"file\", files[0]);\n                formData.append(\"postID\", postID); // console.log(formData);\n                // console.log(files);\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Upload_File.asmx/uploadFile\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                return _context2.abrupt(\"return\", jQuery.ajax(request));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function uploadFile(_x2, _x3) {\n        return _uploadFile.apply(this, arguments);\n      }\n\n      return uploadFile;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(userId, password) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                data = {\n                  userID: userId,\n                  userPassword: password\n                };\n                _context3.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\n\n              case 3:\n                response = _context3.sent;\n                sessionStorage.setItem('authToken', response.token);\n                sessionStorage.setItem('schoolSession', response.UserSchool_Session);\n                sessionStorage.setItem('userIDSession', response.UserID_Session);\n                sessionStorage.setItem('userTypeSession', response.UserType_Session);\n                sessionStorage.setItem('userUniversitySession', response.UserUniversity_Session);\n                sessionStorage.setItem('usRidSession', response.USRid_Session);\n                return _context3.abrupt(\"return\", response);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function login(_x4, _x5) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      sessionStorage.removeItem('authToken');\n      sessionStorage.removeItem('schoolSession');\n      sessionStorage.removeItem('userIDSession');\n      sessionStorage.removeItem('userTypeSession');\n      sessionStorage.removeItem('userUniversitySession');\n      sessionStorage.removeItem('usRidSession');\n      window.location.replace(\"/login\");\n    }\n  }, {\n    key: \"parentRegister\",\n    value: function () {\n      var _parentRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(userEmail, userPassword, studentIDNo, studentID_Index, studentDOB, studentIDType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = {\n                  userEmail: userEmail,\n                  userPassword: userPassword,\n                  studentID_Index: studentID_Index,\n                  studentDOB: studentDOB,\n                  studentIDType: studentIDType,\n                  studentIDNo: studentIDNo\n                };\n                _context4.next = 3;\n                return this.callWebService(\"/controller/Register.asmx/parentRegistration\", data, \"POST\", false);\n\n              case 3:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function parentRegister(_x6, _x7, _x8, _x9, _x10, _x11) {\n        return _parentRegister.apply(this, arguments);\n      }\n\n      return parentRegister;\n    }()\n  }, {\n    key: \"getStudent\",\n    value: function () {\n      var _getStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(studentID, studentID_Index, studentFirstName, studentLastName, parentName) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  studentID_Index: studentID_Index,\n                  studentFirstName: studentFirstName,\n                  studentLastName: studentLastName,\n                  parentName: parentName // token: sessionStorage.getItem('authToken'),\n                  // UserSchool_Session: sessionStorage.getItem('schoolSession'),\n\n                };\n                _context5.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\n\n              case 3:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getStudent(_x12, _x13, _x14, _x15, _x16) {\n        return _getStudent.apply(this, arguments);\n      }\n\n      return getStudent;\n    }()\n  }, {\n    key: \"checkStudentDuplication\",\n    value: function () {\n      var _checkStudentDuplication = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(studentFirstName, studentLastName, studentDOB, studentIDType, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                data = {\n                  studentFirstName: studentFirstName,\n                  studentLastName: studentLastName,\n                  studentDOB: studentDOB,\n                  studentIDType: studentIDType,\n                  studentID: studentID\n                };\n                _context6.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/checkStudentDuplication\", data, \"POST\");\n\n              case 3:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function checkStudentDuplication(_x17, _x18, _x19, _x20, _x21) {\n        return _checkStudentDuplication.apply(this, arguments);\n      }\n\n      return checkStudentDuplication;\n    }()\n  }, {\n    key: \"saveStudent\",\n    value: function () {\n      var _saveStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                data = {\n                  jsonString: jsonString\n                };\n                _context7.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/saveStudent\", data, \"POST\");\n\n              case 3:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function saveStudent(_x22) {\n        return _saveStudent.apply(this, arguments);\n      }\n\n      return saveStudent;\n    }()\n  }, {\n    key: \"getParentList\",\n    value: function () {\n      var _getParentList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(familyId, parentLastName, parentFirstName) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                data = {\n                  familyID: familyId,\n                  parentFirstName: parentFirstName,\n                  parentLastName: parentLastName // token: sessionStorage.getItem('authToken'),\n                  // UserSchool_Session: sessionStorage.getItem('schoolSession'),\n\n                };\n                _context8.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/getParentList\", data, \"POST\");\n\n              case 3:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getParentList(_x23, _x24, _x25) {\n        return _getParentList.apply(this, arguments);\n      }\n\n      return getParentList;\n    }()\n  }, {\n    key: \"saveParent\",\n    value: function () {\n      var _saveParent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(jsonString, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                data = {\n                  jsonString: jsonString,\n                  studentID: studentID\n                };\n                _context9.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/saveParent\", data, \"POST\");\n\n              case 3:\n                response = _context9.sent;\n                return _context9.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function saveParent(_x26, _x27) {\n        return _saveParent.apply(this, arguments);\n      }\n\n      return saveParent;\n    }()\n  }, {\n    key: \"saveParentWithFamilyID\",\n    value: function () {\n      var _saveParentWithFamilyID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10(parentID, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                data = {\n                  parentID: parentID,\n                  studentID: studentID\n                };\n                _context10.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/saveParentWithFamilyID\", data, \"POST\");\n\n              case 3:\n                response = _context10.sent;\n                return _context10.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function saveParentWithFamilyID(_x28, _x29) {\n        return _saveParentWithFamilyID.apply(this, arguments);\n      }\n\n      return saveParentWithFamilyID;\n    }()\n  }, {\n    key: \"getAcademicYearDateRange\",\n    value: function () {\n      var _getAcademicYearDateRange = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(academicYearID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                data = {\n                  academicYearID: academicYearID\n                };\n                _context11.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getAcademicYearDateRange\", data, \"POST\");\n\n              case 3:\n                response = _context11.sent;\n                return _context11.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getAcademicYearDateRange(_x30) {\n        return _getAcademicYearDateRange.apply(this, arguments);\n      }\n\n      return getAcademicYearDateRange;\n    }()\n  }, {\n    key: \"setLevel\",\n    value: function () {\n      var _setLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(studentID, levelID, fromDate, toDate, academicYearID, intakeYear) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  levelID: levelID,\n                  fromDate: fromDate,\n                  toDate: toDate,\n                  academicYearID: academicYearID,\n                  intakeYear: intakeYear\n                };\n                _context12.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/setLevel\", data, \"POST\");\n\n              case 3:\n                response = _context12.sent;\n                return _context12.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function setLevel(_x31, _x32, _x33, _x34, _x35, _x36) {\n        return _setLevel.apply(this, arguments);\n      }\n\n      return setLevel;\n    }()\n  }, {\n    key: \"getUserMenu\",\n    value: function () {\n      var _getUserMenu = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13() {\n        var data, userType, response;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                data = {};\n                userType = sessionStorage.getItem('userTypeSession');\n\n                if (userType !== \"Parent\") {\n                  data.USRid_Session = sessionStorage.getItem('usRidSession');\n                }\n\n                _context13.next = 5;\n                return this.callWebService(\"/controller/User.asmx/getUserMenu\", data, \"POST\");\n\n              case 5:\n                response = _context13.sent;\n                return _context13.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getUserMenu() {\n        return _getUserMenu.apply(this, arguments);\n      }\n\n      return getUserMenu;\n    }()\n  }, {\n    key: \"getStaffPost\",\n    value: function () {\n      var _getStaffPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee14() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                data = {};\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context14.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\n\n              case 4:\n                response = _context14.sent;\n                return _context14.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function getStaffPost() {\n        return _getStaffPost.apply(this, arguments);\n      }\n\n      return getStaffPost;\n    }()\n  }, {\n    key: \"getParentPost\",\n    value: function () {\n      var _getParentPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee15() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                data = {};\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context15.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPostParent\", data, \"POST\");\n\n              case 4:\n                response = _context15.sent;\n                return _context15.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function getParentPost() {\n        return _getParentPost.apply(this, arguments);\n      }\n\n      return getParentPost;\n    }()\n  }, {\n    key: \"savePost\",\n    value: function () {\n      var _savePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee16(files, postContent, tagAcademicYearID, profolio, tagUserID, tagClassID, tagLevelID) {\n        var formData, request, response;\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('token', sessionStorage.getItem('authToken'));\n                formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\n\n                if (files && files.length > 1) {\n                  formData.append(\"upload\", files);\n                } else if (files) {\n                  formData.append(\"upload\", files[0]);\n                }\n\n                formData.append(\"postContent\", postContent);\n                formData.append(\"tagAcademicYearID\", tagAcademicYearID);\n                formData.append(\"profolio\", profolio);\n                formData.append(\"tagUserID\", tagUserID);\n                formData.append(\"tagClassID\", tagClassID);\n                formData.append(\"tagLevelID\", tagLevelID);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Posting.asmx/savePost\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context16.next = 13;\n                return jQuery.ajax(request);\n\n              case 13:\n                response = _context16.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context16.abrupt(\"return\", response);\n\n              case 16:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function savePost(_x37, _x38, _x39, _x40, _x41, _x42, _x43) {\n        return _savePost.apply(this, arguments);\n      }\n\n      return savePost;\n    }()\n  }, {\n    key: \"getPostFile\",\n    value: function () {\n      var _getPostFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee17(postID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                console.log(postID, ' poss');\n                data = {\n                  postID: postID\n                };\n                _context17.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPostFile\", data, \"POST\");\n\n              case 4:\n                response = _context17.sent;\n                return _context17.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function getPostFile(_x44) {\n        return _getPostFile.apply(this, arguments);\n      }\n\n      return getPostFile;\n    }()\n  }, {\n    key: \"pendingPost\",\n    value: function () {\n      var _pendingPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee18(ID, PostID, PostContent, PostStatus, PostCreatedDate, PostApproverID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                data = {\n                  ID: ID,\n                  PostID: PostID,\n                  PostContent: PostContent,\n                  PostStatus: PostStatus,\n                  PostCreatedDate: PostCreatedDate,\n                  PostApproverID: PostApproverID\n                };\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context18.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPendingApproverPost\", data, \"POST\");\n\n              case 4:\n                response = _context18.sent;\n                return _context18.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function pendingPost(_x45, _x46, _x47, _x48, _x49, _x50) {\n        return _pendingPost.apply(this, arguments);\n      }\n\n      return pendingPost;\n    }()\n  }, {\n    key: \"approvePost\",\n    value: function () {\n      var _approvePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee19(postApproverID, actionStatus) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                data = {\n                  actionStatus: actionStatus,\n                  postApproverID: postApproverID\n                };\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context19.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/approvePost\", data, \"POST\");\n\n              case 4:\n                response = _context19.sent;\n                return _context19.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function approvePost(_x51, _x52) {\n        return _approvePost.apply(this, arguments);\n      }\n\n      return approvePost;\n    }()\n  }, {\n    key: \"updatePost\",\n    value: function () {\n      var _updatePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee20(actionStatus, postID, UpdateContent, profolio, tagUserID, tagClassID, tagLevelID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                data = {\n                  actionStatus: actionStatus,\n                  postID: postID,\n                  postContent: UpdateContent,\n                  profolio: profolio,\n                  tagUserID: tagUserID,\n                  tagClassID: tagClassID,\n                  tagLevelID: tagLevelID\n                };\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context20.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/updatePost\", data, \"POST\");\n\n              case 4:\n                response = _context20.sent;\n                return _context20.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function updatePost(_x53, _x54, _x55, _x56, _x57, _x58, _x59) {\n        return _updatePost.apply(this, arguments);\n      }\n\n      return updatePost;\n    }()\n  }, {\n    key: \"getApproverMaster\",\n    value: function () {\n      var _getApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee21() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                data = {};\n                data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                _context21.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getApproverMaster\", data, \"POST\");\n\n              case 4:\n                response = _context21.sent;\n                return _context21.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function getApproverMaster() {\n        return _getApproverMaster.apply(this, arguments);\n      }\n\n      return getApproverMaster;\n    }()\n  }, {\n    key: \"saveApproverMaster\",\n    value: function () {\n      var _saveApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee22(approverLevel, approverUserID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                data = {\n                  approverLevel: approverLevel,\n                  approverUserID: approverUserID\n                };\n                data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context22.next = 5;\n                return this.callWebService(\"/controller/Posting.asmx/saveApproverMaster\", data, \"POST\");\n\n              case 5:\n                response = _context22.sent;\n                return _context22.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function saveApproverMaster(_x60, _x61) {\n        return _saveApproverMaster.apply(this, arguments);\n      }\n\n      return saveApproverMaster;\n    }()\n  }, {\n    key: \"updateApproverMaster\",\n    value: function () {\n      var _updateApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee23(approverID, approverLevel, approverUserID, status) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                data = {\n                  approverID: approverID,\n                  approverLevel: approverLevel,\n                  approverUserID: approverUserID,\n                  status: status\n                };\n                data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context23.next = 5;\n                return this.callWebService(\"/controller/Posting.asmx/updateApproverMaster\", data, \"POST\");\n\n              case 5:\n                response = _context23.sent;\n                return _context23.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function updateApproverMaster(_x62, _x63, _x64, _x65) {\n        return _updateApproverMaster.apply(this, arguments);\n      }\n\n      return updateApproverMaster;\n    }()\n  }, {\n    key: \"login2\",\n    value: function () {\n      var _login2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee24(userId, password) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                data = {\n                  username: userId,\n                  password: password\n                };\n                _context24.next = 3;\n                return this.callAPI(\"/login\", \"POST\", null, data);\n\n              case 3:\n                response = _context24.sent;\n                sessionStorage.setItem('authToken', response.token);\n                return _context24.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function login2(_x66, _x67) {\n        return _login2.apply(this, arguments);\n      }\n\n      return login2;\n    }()\n  }, {\n    key: \"getCountryList\",\n    value: function () {\n      var _getCountryList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee25() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                // let response;\n                // try {\n                //     response = await fetch(\"http://local.emsv2/controller/Students.asmx/getCountryList\");\n                // } catch (err) {\n                //     console.log(err);\n                //     throw ERROR_SERVER_UNREACHABLE;\n                // }\n                // return await parseResponseAndHandleErrors(response);\n                data = {};\n                _context25.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getCountryList\", data, \"POST\");\n\n              case 3:\n                response = _context25.sent;\n                return _context25.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function getCountryList() {\n        return _getCountryList.apply(this, arguments);\n      }\n\n      return getCountryList;\n    }()\n  }, {\n    key: \"getLevel\",\n    value: function () {\n      var _getLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee26() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                data = {};\n                _context26.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getLevel\", data, \"POST\");\n\n              case 3:\n                response = _context26.sent;\n                return _context26.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function getLevel() {\n        return _getLevel.apply(this, arguments);\n      }\n\n      return getLevel;\n    }()\n  }, {\n    key: \"getStudentDropDownList\",\n    value: function () {\n      var _getStudentDropDownList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee27(jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                data = {\n                  jsonString: jsonString\n                };\n                _context27.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentDropDownList\", data, \"POST\");\n\n              case 3:\n                response = _context27.sent;\n                return _context27.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function getStudentDropDownList(_x68) {\n        return _getStudentDropDownList.apply(this, arguments);\n      }\n\n      return getStudentDropDownList;\n    }()\n  }, {\n    key: \"getAcademicYear\",\n    value: function () {\n      var _getAcademicYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee28() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                data = {};\n                _context28.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getAcademicYear\", data, \"POST\");\n\n              case 3:\n                response = _context28.sent;\n                return _context28.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function getAcademicYear() {\n        return _getAcademicYear.apply(this, arguments);\n      }\n\n      return getAcademicYear;\n    }()\n  }, {\n    key: \"getIntakeYear\",\n    value: function () {\n      var _getIntakeYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee29() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                data = {};\n                _context29.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getIntakeYear\", data, \"POST\");\n\n              case 3:\n                response = _context29.sent;\n                return _context29.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function getIntakeYear() {\n        return _getIntakeYear.apply(this, arguments);\n      }\n\n      return getIntakeYear;\n    }() // SAMPLE 2 using axios\n\n  }, {\n    key: \"PostToGetDataWEIRD\",\n    value: function () {\n      var _PostToGetDataWEIRD = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee30() {\n        var options, response;\n        return regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                options = {\n                  countryID: \"\"\n                };\n                _context30.prev = 1;\n                _context30.next = 4;\n                return axios.post(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\", options);\n\n              case 4:\n                response = _context30.sent;\n                _context30.next = 11;\n                break;\n\n              case 7:\n                _context30.prev = 7;\n                _context30.t0 = _context30[\"catch\"](1);\n                console.log(_context30.t0);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 11:\n                return _context30.abrupt(\"return\", response.data);\n\n              case 12:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this, [[1, 7]]);\n      }));\n\n      function PostToGetDataWEIRD() {\n        return _PostToGetDataWEIRD.apply(this, arguments);\n      }\n\n      return PostToGetDataWEIRD;\n    }() // POST SAMPLE\n\n  }, {\n    key: \"createStudent\",\n    value: function () {\n      var _createStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee31() {\n        var headers, request, requestBody, response;\n        return regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                headers = new Headers();\n                headers.append(\"Content-Type\", \"application/json\");\n                request = {\n                  method: \"POST\",\n                  headers: headers\n                };\n                requestBody = {\n                  countryID: \"\"\n                };\n                request.body = JSON.stringify(requestBody);\n                _context31.prev = 5;\n                _context31.next = 8;\n                return fetch(\"URL\", request);\n\n              case 8:\n                response = _context31.sent;\n                _context31.next = 15;\n                break;\n\n              case 11:\n                _context31.prev = 11;\n                _context31.t0 = _context31[\"catch\"](5);\n                console.log(_context31.t0);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 15:\n                _context31.next = 17;\n                return parseResponseAndHandleErrors(response);\n\n              case 17:\n                return _context31.abrupt(\"return\", _context31.sent);\n\n              case 18:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this, [[5, 11]]);\n      }));\n\n      function createStudent() {\n        return _createStudent.apply(this, arguments);\n      }\n\n      return createStudent;\n    }()\n  }]);\n\n  return DataSource;\n}();\n\nexport { DataSource as default };",{"version":3,"sources":["C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\data\\datasource.js"],"names":["URLForEndpoint","NewRequest","parseResponseAndHandleErrors","parseObject","ERROR_SERVER_UNREACHABLE","axios","jQuery","API_HOST","process","env","VUE_APP_ROOT_API","DataSource","instance","undefined","loggedIn","endPoint","method","queryObject","requestBody","hasContentType","url","request","headers","body","JSON","stringify","fetch","response","data","withToken","withFormData","dataType","cache","success","token","sessionStorage","getItem","UserSchool_Session","UserID_Session","UserType_Session","UserUniversity_Session","processData","contentType","console","log","ajax","files","postID","formData","FormData","append","type","enctype","async","json","userId","password","userID","userPassword","callWebService","setItem","USRid_Session","removeItem","window","location","replace","userEmail","studentIDNo","studentID_Index","studentDOB","studentIDType","studentID","studentFirstName","studentLastName","parentName","jsonString","familyId","parentLastName","parentFirstName","familyID","parentID","academicYearID","levelID","fromDate","toDate","intakeYear","userType","postContent","tagAcademicYearID","profolio","tagUserID","tagClassID","tagLevelID","length","parse","ID","PostID","PostContent","PostStatus","PostCreatedDate","PostApproverID","postApproverID","actionStatus","UpdateContent","approverLevel","approverUserID","approverID","status","username","callAPI","options","countryID","post","Headers"],"mappings":"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","sourcesContent":["import {URLForEndpoint, NewRequest, parseResponseAndHandleErrors, parseObject} from \"../data/requests\";\r\nimport {ERROR_SERVER_UNREACHABLE} from \"../data/datasourceConst\";\r\nimport axios from \"axios\";\r\nimport jQuery from 'jquery';\r\n\r\nconst API_HOST = process.env.VUE_APP_ROOT_API || \"http://local.emsv2\";\r\nexport default class DataSource {\r\n    static get shared() {\r\n        if (DataSource.instance == null || DataSource.instance === undefined) {\r\n            DataSource.instance = new DataSource();\r\n        }\r\n        return DataSource.instance;\r\n    }\r\n\r\n    constructor() {\r\n        this.loggedIn = false;\r\n    }\r\n\r\n    async callAPI(endPoint, method = \"GET\", queryObject, requestBody, hasContentType = true) {\r\n        const url = URLForEndpoint(endPoint, queryObject);\r\n        const request = NewRequest(method, hasContentType);\r\n\r\n        if (!hasContentType) {\r\n            delete request.headers[\"Content-Type\"];\r\n            request.body = requestBody;\r\n        } else if (method !== \"GET\" && requestBody) {\r\n            request.body = JSON.stringify(requestBody);\r\n        }\r\n        let response;\r\n        try {\r\n            response = await fetch(url, request);\r\n        } catch (err) {\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return await parseResponseAndHandleErrors(response);\r\n    }\r\n\r\n    // by default, withToken set to true\r\n    callWebService(endPoint, data, method, withToken = true, withFormData = false) {\r\n        const request = {\r\n            dataType: \"json\",\r\n            url: `${API_HOST}${endPoint}`,\r\n            cache: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        if (method) {\r\n            request.method = method;\r\n        }\r\n\r\n        if (data) {\r\n            request.data = data;\r\n        }\r\n\r\n        if (withToken) {\r\n            data.token = sessionStorage.getItem('authToken');\r\n            data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n            data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n            data.UserType_Session = sessionStorage.getItem('userTypeSession');\r\n            data.UserUniversity_Session = sessionStorage.getItem('userUniversitySession');\r\n        }\r\n\r\n        // this is just testing, remove this if savePost not working\r\n        // this might just use for upload file request only(formData), not for whole request\r\n        if (withFormData) {\r\n            request.processData = false;\r\n            request.contentType = false;\r\n        }\r\n\r\n        // get token from session\r\n        // const token = sessionStorage.getItem('authToken');\r\n\r\n        // if token is available and withToken set as true, then pass request with headers\r\n        // they not using header Authorization so disable this\r\n        // if (token && withToken === true) {\r\n        //     request.headers = {\"Authorization\": token};\r\n        // }\r\n\r\n        console.log(request, '  ssss');\r\n\r\n        return jQuery.ajax(request);\r\n    }\r\n\r\n    async uploadFile(files, postID) {\r\n        console.log(postID);\r\n        const formData = new FormData();\r\n        formData.append('token', sessionStorage.getItem('authToken'));\r\n        formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\r\n\r\n        console.log(files);\r\n\r\n        formData.append(\"file\", files[0]);\r\n        formData.append(\"postID\", postID);\r\n        // console.log(formData);\r\n        // console.log(files);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Upload_File.asmx/uploadFile`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        return jQuery.ajax(request);\r\n\r\n        // const response = await this.callWebService(\"/controller/Upload_File.asmx/uploadFile\", data, \"POST\", true, true);\r\n        // return response;\r\n    }\r\n\r\n\r\n    async login(userId, password) {\r\n        const data = {\r\n            userID: userId,\r\n            userPassword: password\r\n        };\r\n        const response = await this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\r\n        sessionStorage.setItem('authToken', response.token);\r\n        sessionStorage.setItem('schoolSession', response.UserSchool_Session);\r\n        sessionStorage.setItem('userIDSession', response.UserID_Session);\r\n        sessionStorage.setItem('userTypeSession', response.UserType_Session);\r\n        sessionStorage.setItem('userUniversitySession', response.UserUniversity_Session);\r\n        sessionStorage.setItem('usRidSession', response.USRid_Session);\r\n        return response;\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('authToken');\r\n        sessionStorage.removeItem('schoolSession');\r\n        sessionStorage.removeItem('userIDSession');\r\n        sessionStorage.removeItem('userTypeSession');\r\n        sessionStorage.removeItem('userUniversitySession');\r\n        sessionStorage.removeItem('usRidSession');\r\n        window.location.replace(\"/login\");\r\n\r\n    }\r\n\r\n    async parentRegister(userEmail, userPassword, studentIDNo, studentID_Index, studentDOB, studentIDType) {\r\n        const data = {\r\n            userEmail: userEmail,\r\n            userPassword: userPassword,\r\n            studentID_Index: studentID_Index,\r\n            studentDOB: studentDOB,\r\n            studentIDType: studentIDType,\r\n            studentIDNo: studentIDNo\r\n        };\r\n        const response = await this.callWebService(\"/controller/Register.asmx/parentRegistration\", data, \"POST\", false);\r\n        return response;\r\n    }\r\n\r\n    async getStudent(studentID, studentID_Index, studentFirstName, studentLastName, parentName) {\r\n        const data = {\r\n            studentID: studentID,\r\n            studentID_Index: studentID_Index,\r\n            studentFirstName: studentFirstName,\r\n            studentLastName: studentLastName,\r\n            parentName: parentName,\r\n            // token: sessionStorage.getItem('authToken'),\r\n            // UserSchool_Session: sessionStorage.getItem('schoolSession'),\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async checkStudentDuplication(studentFirstName, studentLastName, studentDOB, studentIDType, studentID) {\r\n        const data = {\r\n            studentFirstName: studentFirstName,\r\n            studentLastName: studentLastName,\r\n            studentDOB: studentDOB,\r\n            studentIDType: studentIDType,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/checkStudentDuplication\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveStudent(jsonString) {\r\n        const data = {\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/saveStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParentList(familyId, parentLastName, parentFirstName) {\r\n        const data = {\r\n            familyID: familyId,\r\n            parentFirstName: parentFirstName,\r\n            parentLastName: parentLastName,\r\n            // token: sessionStorage.getItem('authToken'),\r\n            // UserSchool_Session: sessionStorage.getItem('schoolSession'),\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getParentList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveParent(jsonString, studentID) {\r\n        const data = {\r\n            jsonString: jsonString,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/saveParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveParentWithFamilyID(parentID, studentID) {\r\n        const data = {\r\n            parentID: parentID,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/saveParentWithFamilyID\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAcademicYearDateRange(academicYearID) {\r\n        const data = {\r\n            academicYearID: academicYearID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getAcademicYearDateRange\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async setLevel(studentID, levelID, fromDate, toDate, academicYearID, intakeYear) {\r\n        const data = {\r\n            studentID: studentID,\r\n            levelID: levelID,\r\n            fromDate: fromDate,\r\n            toDate: toDate,\r\n            academicYearID: academicYearID,\r\n            intakeYear: intakeYear,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/setLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getUserMenu() {\r\n        const data = {};\r\n\r\n        const userType = sessionStorage.getItem('userTypeSession');\r\n        if (userType !== \"Parent\") {\r\n            data.USRid_Session = sessionStorage.getItem('usRidSession');\r\n        }\r\n\r\n        const response = await this.callWebService(\"/controller/User.asmx/getUserMenu\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStaffPost() {\r\n        const data = {};\r\n\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParentPost() {\r\n        const data = {};\r\n\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async savePost(files, postContent, tagAcademicYearID, profolio, tagUserID, tagClassID, tagLevelID) {\r\n        const formData = new FormData();\r\n        formData.append('token', sessionStorage.getItem('authToken'));\r\n        formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\r\n\r\n        if (files && files.length > 1) {\r\n            formData.append(\"upload\", files);\r\n        } else if (files) {\r\n            formData.append(\"upload\", files[0]);\r\n        }\r\n\r\n        formData.append(\"postContent\", postContent);\r\n        formData.append(\"tagAcademicYearID\", tagAcademicYearID);\r\n        formData.append(\"profolio\", profolio);\r\n        formData.append(\"tagUserID\", tagUserID);\r\n        formData.append(\"tagClassID\", tagClassID);\r\n        formData.append(\"tagLevelID\", tagLevelID);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Posting.asmx/savePost`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async getPostFile(postID) {\r\n        console.log(postID, ' poss');\r\n        const data = {\r\n            postID: postID\r\n        };\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostFile\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async pendingPost(ID, PostID, PostContent, PostStatus, PostCreatedDate, PostApproverID) {\r\n        const data = {\r\n            ID: ID,\r\n            PostID: PostID,\r\n            PostContent: PostContent,\r\n            PostStatus: PostStatus,\r\n            PostCreatedDate: PostCreatedDate,\r\n            PostApproverID: PostApproverID\r\n        };\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPendingApproverPost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async approvePost(postApproverID, actionStatus) {\r\n        const data = {\r\n            actionStatus: actionStatus,\r\n            postApproverID: postApproverID,\r\n        };\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/approvePost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updatePost(actionStatus, postID, UpdateContent, profolio, tagUserID, tagClassID, tagLevelID) {\r\n        const data = {\r\n            actionStatus: actionStatus,\r\n            postID: postID,\r\n            postContent: UpdateContent,\r\n            profolio: profolio,\r\n            tagUserID: tagUserID,\r\n            tagClassID: tagClassID,\r\n            tagLevelID: tagLevelID\r\n        };\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/updatePost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getApproverMaster() {\r\n        const data = {};\r\n\r\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveApproverMaster(approverLevel, approverUserID) {\r\n        const data = {\r\n            approverLevel: approverLevel,\r\n            approverUserID: approverUserID\r\n        };\r\n\r\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/saveApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateApproverMaster(approverID, approverLevel, approverUserID, status) {\r\n        const data = {\r\n            approverID: approverID,\r\n            approverLevel: approverLevel,\r\n            approverUserID: approverUserID,\r\n            status: status,\r\n        };\r\n\r\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/updateApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async login2(userId, password) {\r\n        const data = {\r\n            username: userId,\r\n            password: password\r\n        };\r\n        const response = await this.callAPI(\"/login\", \"POST\", null, data);\r\n        sessionStorage.setItem('authToken', response.token);\r\n        return response;\r\n    }\r\n\r\n    async getCountryList() {\r\n        // let response;\r\n        // try {\r\n        //     response = await fetch(\"http://local.emsv2/controller/Students.asmx/getCountryList\");\r\n        // } catch (err) {\r\n        //     console.log(err);\r\n        //     throw ERROR_SERVER_UNREACHABLE;\r\n        // }\r\n        // return await parseResponseAndHandleErrors(response);\r\n\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getCountryList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getLevel() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentDropDownList(jsonString) {\r\n        const data = {\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentDropDownList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAcademicYear() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getAcademicYear\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getIntakeYear() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getIntakeYear\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    // SAMPLE 2 using axios\r\n    async PostToGetDataWEIRD() {\r\n        const options = {\r\n            countryID: \"\",\r\n        };\r\n\r\n        let response;\r\n        try {\r\n            response = await axios.post(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\", options);\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return response.data;\r\n    }\r\n\r\n    // POST SAMPLE\r\n    async createStudent() {\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        const request = {\r\n            method: \"POST\",\r\n            headers: headers,\r\n        };\r\n        const requestBody = {\r\n            countryID: \"\",\r\n        };\r\n        request.body = JSON.stringify(requestBody);\r\n\r\n        let response;\r\n        try {\r\n            response = await fetch(\"URL\", request);\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return await parseResponseAndHandleErrors(response);\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}]}