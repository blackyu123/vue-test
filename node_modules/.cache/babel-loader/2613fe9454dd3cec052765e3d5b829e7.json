{"remainingRequest":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\data\\datasource.js","dependencies":[{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\data\\datasource.js","mtime":1545921864830},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1545311081350},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\eslint-loader\\index.js","mtime":1545311087492}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { URLForEndpoint, NewRequest, parseResponseAndHandleErrors, parseObject } from \"../data/requests\";\nimport { ERROR_SERVER_UNREACHABLE } from \"../data/datasourceConst\";\nimport axios from \"axios\";\nimport jQuery from 'jquery';\nvar API_HOST = process.env.VUE_APP_ROOT_API || \"http://local.emsv2\";\n\nvar DataSource =\n/*#__PURE__*/\nfunction () {\n  function DataSource() {\n    _classCallCheck(this, DataSource);\n  }\n\n  _createClass(DataSource, [{\n    key: \"callAPI\",\n    value: function () {\n      var _callAPI = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(endPoint) {\n        var method,\n            queryObject,\n            requestBody,\n            hasContentType,\n            url,\n            request,\n            response,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                method = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"GET\";\n                queryObject = _args.length > 2 ? _args[2] : undefined;\n                requestBody = _args.length > 3 ? _args[3] : undefined;\n                hasContentType = _args.length > 4 && _args[4] !== undefined ? _args[4] : true;\n                url = URLForEndpoint(endPoint, queryObject);\n                request = NewRequest(method, hasContentType);\n\n                if (!hasContentType) {\n                  delete request.headers[\"Content-Type\"];\n                  request.body = requestBody;\n                } else if (method !== \"GET\" && requestBody) {\n                  request.body = JSON.stringify(requestBody);\n                }\n\n                _context.prev = 7;\n                _context.next = 10;\n                return fetch(url, request);\n\n              case 10:\n                response = _context.sent;\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](7);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 16:\n                _context.next = 18;\n                return parseResponseAndHandleErrors(response);\n\n              case 18:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 13]]);\n      }));\n\n      function callAPI(_x) {\n        return _callAPI.apply(this, arguments);\n      }\n\n      return callAPI;\n    }() // by default, withToken set to true\n\n  }, {\n    key: \"callWebService\",\n    value: function callWebService(endPoint, data, method) {\n      var withToken = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var withFormData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var request = {\n        dataType: \"json\",\n        url: \"\".concat(API_HOST).concat(endPoint),\n        cache: false,\n        success: function success(response) {\n          return response;\n        }\n      };\n\n      if (method) {\n        request.method = method;\n      }\n\n      if (data) {\n        request.data = data;\n      }\n\n      if (withToken) {\n        data.token = sessionStorage.getItem('authToken');\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\n        data.UserType_Session = sessionStorage.getItem('userTypeSession');\n        data.UserUniversity_Session = sessionStorage.getItem('userUniversitySession');\n      } // this is just testing, remove this if savePost not working\n      // this might just use for upload file request only(formData), not for whole request\n\n\n      if (withFormData) {\n        request.processData = false;\n        request.contentType = false;\n      } // get token from session\n      // const token = sessionStorage.getItem('authToken');\n      // if token is available and withToken set as true, then pass request with headers\n      // they not using header Authorization so disable this\n      // if (token && withToken === true) {\n      //     request.headers = {\"Authorization\": token};\n      // }\n\n\n      return jQuery.ajax(request);\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function () {\n      var _uploadFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(files) {\n        var formData, request;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('token', sessionStorage.getItem('authToken'));\n                formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\n                formData.append(\"file\", files[0]);\n                formData.append(\"postID\", \"POS201800000328\");\n                console.log(formData);\n                console.log(files);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Upload_File.asmx/uploadFile\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                return _context2.abrupt(\"return\", jQuery.ajax(request));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function uploadFile(_x2) {\n        return _uploadFile.apply(this, arguments);\n      }\n\n      return uploadFile;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(userId, password) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                data = {\n                  userID: userId,\n                  userPassword: password\n                };\n                _context3.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\n\n              case 3:\n                response = _context3.sent;\n                sessionStorage.setItem('authToken', response.token);\n                sessionStorage.setItem('schoolSession', response.UserSchool_Session);\n                sessionStorage.setItem('userIDSession', response.UserID_Session);\n                sessionStorage.setItem('userTypeSession', response.UserType_Session);\n                sessionStorage.setItem('userUniversitySession', response.UserUniversity_Session);\n                sessionStorage.setItem('usRidSession', response.USRid_Session);\n                return _context3.abrupt(\"return\", response);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function login(_x3, _x4) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"parentRegister\",\n    value: function () {\n      var _parentRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(userEmail, userPassword, studentIDNo, studentID_Index, studentDOB, studentIDType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = {\n                  userEmail: userEmail,\n                  userPassword: userPassword,\n                  studentID_Index: studentID_Index,\n                  studentDOB: studentDOB,\n                  studentIDType: studentIDType,\n                  studentIDNo: studentIDNo\n                };\n                _context4.next = 3;\n                return this.callWebService(\"/controller/Register.asmx/parentRegistration\", data, \"POST\", false);\n\n              case 3:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function parentRegister(_x5, _x6, _x7, _x8, _x9, _x10) {\n        return _parentRegister.apply(this, arguments);\n      }\n\n      return parentRegister;\n    }()\n  }, {\n    key: \"getStudent\",\n    value: function () {\n      var _getStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var studentId,\n            studentIndex,\n            studentFirstName,\n            studentLastName,\n            parentName,\n            data,\n            response,\n            _args5 = arguments;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                studentId = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : \"\";\n                studentIndex = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : \"\";\n                studentFirstName = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : \"\";\n                studentLastName = _args5.length > 3 && _args5[3] !== undefined ? _args5[3] : \"\";\n                parentName = _args5.length > 4 && _args5[4] !== undefined ? _args5[4] : \"\";\n                data = {\n                  studentID: studentId,\n                  studentID_Index: studentIndex,\n                  studentFirstName: studentFirstName,\n                  studentLastName: studentLastName,\n                  parentName: parentName // token: sessionStorage.getItem('authToken'),\n                  // UserSchool_Session: sessionStorage.getItem('schoolSession'),\n\n                };\n                _context5.next = 8;\n                return this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\n\n              case 8:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getStudent() {\n        return _getStudent.apply(this, arguments);\n      }\n\n      return getStudent;\n    }()\n  }, {\n    key: \"getParentList\",\n    value: function () {\n      var _getParentList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var familyId,\n            parentLastName,\n            parentFirstName,\n            data,\n            response,\n            _args6 = arguments;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                familyId = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : \"\";\n                parentLastName = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : \"\";\n                parentFirstName = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : \"\";\n                data = {\n                  total: 20,\n                  familyID: familyId,\n                  parentFirstName: parentFirstName,\n                  parentLastName: parentLastName // token: sessionStorage.getItem('authToken'),\n                  // UserSchool_Session: sessionStorage.getItem('schoolSession'),\n\n                };\n                _context6.next = 6;\n                return this.callWebService(\"/controller/Parents.asmx/getParentList\", data, \"POST\");\n\n              case 6:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", response);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getParentList() {\n        return _getParentList.apply(this, arguments);\n      }\n\n      return getParentList;\n    }()\n  }, {\n    key: \"getUserMenu\",\n    value: function () {\n      var _getUserMenu = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var data, userType, response;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                data = {};\n                userType = sessionStorage.getItem('userTypeSession');\n\n                if (userType !== \"Parent\") {\n                  data.USRid_Session = sessionStorage.getItem('usRidSession');\n                }\n\n                _context7.next = 5;\n                return this.callWebService(\"/controller/User.asmx/getUserMenu\", data, \"POST\");\n\n              case 5:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getUserMenu() {\n        return _getUserMenu.apply(this, arguments);\n      }\n\n      return getUserMenu;\n    }()\n  }, {\n    key: \"getStaffPost\",\n    value: function () {\n      var _getStaffPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                data = {};\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context8.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\n\n              case 4:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getStaffPost() {\n        return _getStaffPost.apply(this, arguments);\n      }\n\n      return getStaffPost;\n    }()\n  }, {\n    key: \"getParentPost\",\n    value: function () {\n      var _getParentPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                data = {};\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context9.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPostParent\", data, \"POST\");\n\n              case 4:\n                response = _context9.sent;\n                return _context9.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getParentPost() {\n        return _getParentPost.apply(this, arguments);\n      }\n\n      return getParentPost;\n    }()\n  }, {\n    key: \"savePost\",\n    value: function () {\n      var _savePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10(postContent, tagAcademicYearID, profolio, tagUserID, tagClassID, tagLevelID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                data = {\n                  postContent: postContent,\n                  tagAcademicYearID: tagAcademicYearID,\n                  profolio: profolio,\n                  tagUserID: tagUserID,\n                  tagClassID: tagClassID,\n                  tagLevelID: tagLevelID\n                };\n                data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                console.log(data);\n                _context10.next = 6;\n                return this.callWebService(\"/controller/Posting.asmx/savePost\", data, \"POST\");\n\n              case 6:\n                response = _context10.sent;\n                return _context10.abrupt(\"return\", response);\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function savePost(_x11, _x12, _x13, _x14, _x15, _x16) {\n        return _savePost.apply(this, arguments);\n      }\n\n      return savePost;\n    }()\n  }, {\n    key: \"pendingPost\",\n    value: function () {\n      var _pendingPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(ID, PostID, PostContent, PostStatus, PostCreatedDate, PostApproverID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                data = {\n                  ID: ID,\n                  PostID: PostID,\n                  PostContent: PostContent,\n                  PostStatus: PostStatus,\n                  PostCreatedDate: PostCreatedDate,\n                  PostApproverID: PostApproverID\n                };\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context11.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPendingApproverPost\", data, \"POST\");\n\n              case 4:\n                response = _context11.sent;\n                return _context11.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function pendingPost(_x17, _x18, _x19, _x20, _x21, _x22) {\n        return _pendingPost.apply(this, arguments);\n      }\n\n      return pendingPost;\n    }()\n  }, {\n    key: \"approvePost\",\n    value: function () {\n      var _approvePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(postApproverID, actionStatus) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                data = {\n                  actionStatus: actionStatus,\n                  postApproverID: postApproverID\n                };\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context12.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/approvePost\", data, \"POST\");\n\n              case 4:\n                response = _context12.sent;\n                return _context12.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function approvePost(_x23, _x24) {\n        return _approvePost.apply(this, arguments);\n      }\n\n      return approvePost;\n    }()\n  }, {\n    key: \"updatePost\",\n    value: function () {\n      var _updatePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13(actionStatus, postID, postContent, profolio, tagUserID, tagClassID, tagLevelID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                data = {\n                  actionStatus: actionStatus,\n                  postID: postID,\n                  postContent: postContent,\n                  profolio: profolio,\n                  tagUserID: tagUserID,\n                  tagClassID: tagClassID,\n                  tagLevelID: tagLevelID\n                };\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context13.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/updatePost\", data, \"POST\");\n\n              case 4:\n                response = _context13.sent;\n                return _context13.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function updatePost(_x25, _x26, _x27, _x28, _x29, _x30, _x31) {\n        return _updatePost.apply(this, arguments);\n      }\n\n      return updatePost;\n    }()\n  }, {\n    key: \"getApproverMaster\",\n    value: function () {\n      var _getApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee14() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                data = {};\n                data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                _context14.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getApproverMaster\", data, \"POST\");\n\n              case 4:\n                response = _context14.sent;\n                return _context14.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function getApproverMaster() {\n        return _getApproverMaster.apply(this, arguments);\n      }\n\n      return getApproverMaster;\n    }()\n  }, {\n    key: \"saveApproverMaster\",\n    value: function () {\n      var _saveApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee15(approverLevel, approverUserID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                data = {\n                  approverLevel: approverLevel,\n                  approverUserID: approverUserID\n                };\n                data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context15.next = 5;\n                return this.callWebService(\"/controller/Posting.asmx/saveApproverMaster\", data, \"POST\");\n\n              case 5:\n                response = _context15.sent;\n                return _context15.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function saveApproverMaster(_x32, _x33) {\n        return _saveApproverMaster.apply(this, arguments);\n      }\n\n      return saveApproverMaster;\n    }()\n  }, {\n    key: \"updateApproverMaster\",\n    value: function () {\n      var _updateApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee16(approverID, approverLevel, approverUserID, status) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                data = {\n                  approverID: approverID,\n                  approverLevel: approverLevel,\n                  approverUserID: approverUserID,\n                  status: status\n                };\n                data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context16.next = 5;\n                return this.callWebService(\"/controller/Posting.asmx/updateApproverMaster\", data, \"POST\");\n\n              case 5:\n                response = _context16.sent;\n                return _context16.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function updateApproverMaster(_x34, _x35, _x36, _x37) {\n        return _updateApproverMaster.apply(this, arguments);\n      }\n\n      return updateApproverMaster;\n    }()\n  }, {\n    key: \"login2\",\n    value: function () {\n      var _login2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee17(userId, password) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                data = {\n                  username: userId,\n                  password: password\n                };\n                _context17.next = 3;\n                return this.callAPI(\"/login\", \"POST\", null, data);\n\n              case 3:\n                response = _context17.sent;\n                sessionStorage.setItem('authToken', response.token);\n                return _context17.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function login2(_x38, _x39) {\n        return _login2.apply(this, arguments);\n      }\n\n      return login2;\n    }()\n  }, {\n    key: \"getCountryList\",\n    value: function () {\n      var _getCountryList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee18() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.prev = 0;\n                _context18.next = 3;\n                return fetch(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\");\n\n              case 3:\n                response = _context18.sent;\n                _context18.next = 10;\n                break;\n\n              case 6:\n                _context18.prev = 6;\n                _context18.t0 = _context18[\"catch\"](0);\n                console.log(_context18.t0);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 10:\n                _context18.next = 12;\n                return parseResponseAndHandleErrors(response);\n\n              case 12:\n                return _context18.abrupt(\"return\", _context18.sent);\n\n              case 13:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this, [[0, 6]]);\n      }));\n\n      function getCountryList() {\n        return _getCountryList.apply(this, arguments);\n      }\n\n      return getCountryList;\n    }() // SAMPLE 2 using axios\n\n  }, {\n    key: \"PostToGetDataWEIRD\",\n    value: function () {\n      var _PostToGetDataWEIRD = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee19() {\n        var options, response;\n        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                options = {\n                  countryID: \"\"\n                };\n                _context19.prev = 1;\n                _context19.next = 4;\n                return axios.post(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\", options);\n\n              case 4:\n                response = _context19.sent;\n                _context19.next = 11;\n                break;\n\n              case 7:\n                _context19.prev = 7;\n                _context19.t0 = _context19[\"catch\"](1);\n                console.log(_context19.t0);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 11:\n                return _context19.abrupt(\"return\", response.data);\n\n              case 12:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this, [[1, 7]]);\n      }));\n\n      function PostToGetDataWEIRD() {\n        return _PostToGetDataWEIRD.apply(this, arguments);\n      }\n\n      return PostToGetDataWEIRD;\n    }() // POST SAMPLE\n\n  }, {\n    key: \"createStudent\",\n    value: function () {\n      var _createStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee20() {\n        var headers, request, requestBody, response;\n        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                headers = new Headers();\n                headers.append(\"Content-Type\", \"application/json\");\n                request = {\n                  method: \"POST\",\n                  headers: headers\n                };\n                requestBody = {\n                  countryID: \"\"\n                };\n                request.body = JSON.stringify(requestBody);\n                _context20.prev = 5;\n                _context20.next = 8;\n                return fetch(\"URL\", request);\n\n              case 8:\n                response = _context20.sent;\n                _context20.next = 15;\n                break;\n\n              case 11:\n                _context20.prev = 11;\n                _context20.t0 = _context20[\"catch\"](5);\n                console.log(_context20.t0);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 15:\n                _context20.next = 17;\n                return parseResponseAndHandleErrors(response);\n\n              case 17:\n                return _context20.abrupt(\"return\", _context20.sent);\n\n              case 18:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[5, 11]]);\n      }));\n\n      function createStudent() {\n        return _createStudent.apply(this, arguments);\n      }\n\n      return createStudent;\n    }()\n  }], [{\n    key: \"shared\",\n    get: function get() {\n      if (DataSource.instance == null || DataSource.instance === undefined) {\n        DataSource.instance = new DataSource();\n      }\n\n      return DataSource.instance;\n    }\n  }]);\n\n  return DataSource;\n}();\n\nexport { DataSource as default };",{"version":3,"sources":["C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\data\\datasource.js"],"names":["URLForEndpoint","NewRequest","parseResponseAndHandleErrors","parseObject","ERROR_SERVER_UNREACHABLE","axios","jQuery","API_HOST","process","env","VUE_APP_ROOT_API","DataSource","endPoint","method","queryObject","requestBody","hasContentType","url","request","headers","body","JSON","stringify","fetch","response","data","withToken","withFormData","dataType","cache","success","token","sessionStorage","getItem","UserSchool_Session","UserID_Session","UserType_Session","UserUniversity_Session","processData","contentType","ajax","files","formData","FormData","append","console","log","type","enctype","async","json","userId","password","userID","userPassword","callWebService","setItem","USRid_Session","userEmail","studentIDNo","studentID_Index","studentDOB","studentIDType","studentId","studentIndex","studentFirstName","studentLastName","parentName","studentID","familyId","parentLastName","parentFirstName","total","familyID","userType","postContent","tagAcademicYearID","profolio","tagUserID","tagClassID","tagLevelID","ID","PostID","PostContent","PostStatus","PostCreatedDate","PostApproverID","postApproverID","actionStatus","postID","approverLevel","approverUserID","approverID","status","username","callAPI","options","countryID","post","Headers","instance","undefined"],"mappings":"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","sourcesContent":["import {URLForEndpoint, NewRequest, parseResponseAndHandleErrors, parseObject} from \"../data/requests\";\r\nimport {ERROR_SERVER_UNREACHABLE} from \"../data/datasourceConst\";\r\nimport axios from \"axios\";\r\nimport jQuery from 'jquery';\r\n\r\nconst API_HOST = process.env.VUE_APP_ROOT_API || \"http://local.emsv2\";\r\nexport default class DataSource {\r\n    static get shared() {\r\n        if (DataSource.instance == null || DataSource.instance === undefined) {\r\n            DataSource.instance = new DataSource();\r\n        }\r\n        return DataSource.instance;\r\n    }\r\n\r\n    async callAPI(endPoint, method = \"GET\", queryObject, requestBody, hasContentType = true) {\r\n        const url = URLForEndpoint(endPoint, queryObject);\r\n        const request = NewRequest(method, hasContentType);\r\n\r\n        if (!hasContentType) {\r\n            delete request.headers[\"Content-Type\"];\r\n            request.body = requestBody;\r\n        } else if (method !== \"GET\" && requestBody) {\r\n            request.body = JSON.stringify(requestBody);\r\n        }\r\n        let response;\r\n        try {\r\n            response = await fetch(url, request);\r\n        } catch (err) {\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return await parseResponseAndHandleErrors(response);\r\n    }\r\n\r\n    // by default, withToken set to true\r\n    callWebService(endPoint, data, method, withToken = true, withFormData = false) {\r\n        const request = {\r\n            dataType: \"json\",\r\n            url: `${API_HOST}${endPoint}`,\r\n            cache: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        if (method) {\r\n            request.method = method;\r\n        }\r\n\r\n        if (data) {\r\n            request.data = data;\r\n        }\r\n\r\n        if (withToken) {\r\n            data.token = sessionStorage.getItem('authToken');\r\n            data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n            data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n            data.UserType_Session = sessionStorage.getItem('userTypeSession');\r\n            data.UserUniversity_Session = sessionStorage.getItem('userUniversitySession');\r\n        }\r\n\r\n        // this is just testing, remove this if savePost not working\r\n        // this might just use for upload file request only(formData), not for whole request\r\n        if (withFormData) {\r\n            request.processData = false;\r\n            request.contentType = false;\r\n        }\r\n\r\n        // get token from session\r\n        // const token = sessionStorage.getItem('authToken');\r\n\r\n        // if token is available and withToken set as true, then pass request with headers\r\n        // they not using header Authorization so disable this\r\n        // if (token && withToken === true) {\r\n        //     request.headers = {\"Authorization\": token};\r\n        // }\r\n\r\n        return jQuery.ajax(request);\r\n    }\r\n\r\n    async uploadFile(files) {\r\n        const formData = new FormData();\r\n        formData.append('token', sessionStorage.getItem('authToken'));\r\n        formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\r\n\r\n \r\n        formData.append(\"file\", files[0]);\r\n        formData.append(\"postID\", \"POS201800000328\");\r\n        console.log(formData);\r\n        console.log(files);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Upload_File.asmx/uploadFile`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        return jQuery.ajax(request);\r\n\r\n        // const response = await this.callWebService(\"/controller/Upload_File.asmx/uploadFile\", data, \"POST\", true, true);\r\n        // return response;\r\n    }\r\n\r\n\r\n    async login(userId, password) {\r\n        const data = {\r\n            userID: userId,\r\n            userPassword: password\r\n        };\r\n        const response = await this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\r\n        sessionStorage.setItem('authToken', response.token);\r\n        sessionStorage.setItem('schoolSession', response.UserSchool_Session);\r\n        sessionStorage.setItem('userIDSession', response.UserID_Session);\r\n        sessionStorage.setItem('userTypeSession', response.UserType_Session);\r\n        sessionStorage.setItem('userUniversitySession', response.UserUniversity_Session);\r\n        sessionStorage.setItem('usRidSession', response.USRid_Session);\r\n        return response;\r\n    }\r\n\r\n    async parentRegister(userEmail, userPassword, studentIDNo, studentID_Index, studentDOB, studentIDType) {\r\n        const data = {\r\n            userEmail: userEmail,\r\n            userPassword: userPassword,\r\n            studentID_Index: studentID_Index,\r\n            studentDOB: studentDOB,\r\n            studentIDType: studentIDType,\r\n            studentIDNo: studentIDNo\r\n        };\r\n        const response = await this.callWebService(\"/controller/Register.asmx/parentRegistration\", data, \"POST\", false);\r\n        return response;\r\n    }\r\n\r\n    async getStudent(studentId = \"\", studentIndex = \"\", studentFirstName = \"\", studentLastName = \"\", parentName = \"\") {\r\n        const data = {\r\n            studentID: studentId,\r\n            studentID_Index: studentIndex,\r\n            studentFirstName: studentFirstName,\r\n            studentLastName: studentLastName,\r\n            parentName: parentName,\r\n            // token: sessionStorage.getItem('authToken'),\r\n            // UserSchool_Session: sessionStorage.getItem('schoolSession'),\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParentList(familyId = \"\", parentLastName = \"\", parentFirstName = \"\") {\r\n        const data = {\r\n            total: 20,\r\n            familyID: familyId,\r\n            parentFirstName: parentFirstName,\r\n            parentLastName: parentLastName,\r\n            // token: sessionStorage.getItem('authToken'),\r\n            // UserSchool_Session: sessionStorage.getItem('schoolSession'),\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getParentList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getUserMenu() {\r\n        const data = {};\r\n\r\n        const userType = sessionStorage.getItem('userTypeSession');\r\n        if (userType !== \"Parent\") {\r\n            data.USRid_Session = sessionStorage.getItem('usRidSession');\r\n        }\r\n\r\n        const response = await this.callWebService(\"/controller/User.asmx/getUserMenu\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStaffPost() {\r\n        const data = {};\r\n\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParentPost() {\r\n        const data = {};\r\n\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async savePost(postContent, tagAcademicYearID, profolio, tagUserID, tagClassID, tagLevelID) {\r\n        const data = {\r\n            postContent: postContent,\r\n            tagAcademicYearID: tagAcademicYearID,\r\n            profolio: profolio,\r\n            tagUserID: tagUserID,\r\n            tagClassID: tagClassID,\r\n            tagLevelID: tagLevelID,\r\n        };\r\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n        console.log(data);\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/savePost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async pendingPost(ID, PostID, PostContent, PostStatus, PostCreatedDate, PostApproverID) {\r\n        const data = {\r\n            ID: ID,\r\n            PostID: PostID,\r\n            PostContent: PostContent,\r\n            PostStatus: PostStatus,\r\n            PostCreatedDate: PostCreatedDate,\r\n            PostApproverID: PostApproverID\r\n        };\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPendingApproverPost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async approvePost(postApproverID, actionStatus) {\r\n        const data = {\r\n            actionStatus: actionStatus,\r\n            postApproverID: postApproverID,\r\n        };\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/approvePost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updatePost(actionStatus, postID, postContent, profolio, tagUserID, tagClassID, tagLevelID) {\r\n        const data = {\r\n            actionStatus: actionStatus,\r\n            postID: postID,\r\n            postContent: postContent,\r\n            profolio: profolio,\r\n            tagUserID: tagUserID,\r\n            tagClassID: tagClassID,\r\n            tagLevelID: tagLevelID\r\n        };\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/updatePost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getApproverMaster() {\r\n        const data = {};\r\n\r\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveApproverMaster(approverLevel, approverUserID) {\r\n        const data = {\r\n            approverLevel: approverLevel,\r\n            approverUserID: approverUserID\r\n        };\r\n\r\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/saveApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateApproverMaster(approverID, approverLevel, approverUserID, status) {\r\n        const data = {\r\n            approverID: approverID,\r\n            approverLevel: approverLevel,\r\n            approverUserID: approverUserID,\r\n            status: status,\r\n        };\r\n\r\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/updateApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async login2(userId, password) {\r\n        const data = {\r\n            username: userId,\r\n            password: password\r\n        };\r\n        const response = await this.callAPI(\"/login\", \"POST\", null, data);\r\n        sessionStorage.setItem('authToken', response.token);\r\n        return response;\r\n    }\r\n\r\n    async getCountryList() {\r\n        let response;\r\n        try {\r\n            response = await fetch(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\");\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return await parseResponseAndHandleErrors(response);\r\n    }\r\n\r\n    // SAMPLE 2 using axios\r\n    async PostToGetDataWEIRD() {\r\n        const options = {\r\n            countryID: \"\",\r\n        };\r\n\r\n        let response;\r\n        try {\r\n            response = await axios.post(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\", options);\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return response.data;\r\n    }\r\n\r\n    // POST SAMPLE\r\n    async createStudent() {\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        const request = {\r\n            method: \"POST\",\r\n            headers: headers,\r\n        };\r\n        const requestBody = {\r\n            countryID: \"\",\r\n        };\r\n        request.body = JSON.stringify(requestBody);\r\n\r\n        let response;\r\n        try {\r\n            response = await fetch(\"URL\", request);\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return await parseResponseAndHandleErrors(response);\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}]}