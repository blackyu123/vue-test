{"remainingRequest":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\data\\datasource.js","dependencies":[{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\data\\datasource.js","mtime":1547481224940},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1545311081350},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\eslint-loader\\index.js","mtime":1545311087492}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jessica\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { URLForEndpoint, NewRequest, parseResponseAndHandleErrors, parseObject } from \"../data/requests\";\nimport { ERROR_SERVER_UNREACHABLE } from \"../data/datasourceConst\";\nimport axios from \"axios\";\nimport jQuery from 'jquery';\nvar API_HOST = process.env.VUE_APP_ROOT_API || \"http://local.emsv2\";\n\nvar DataSource =\n/*#__PURE__*/\nfunction () {\n  _createClass(DataSource, null, [{\n    key: \"shared\",\n    get: function get() {\n      if (DataSource.instance == null || DataSource.instance === undefined) {\n        DataSource.instance = new DataSource();\n      }\n\n      return DataSource.instance;\n    }\n  }]);\n\n  function DataSource() {\n    _classCallCheck(this, DataSource);\n\n    this.loggedIn = false;\n  }\n\n  _createClass(DataSource, [{\n    key: \"callAPI\",\n    value: function () {\n      var _callAPI = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(endPoint) {\n        var method,\n            queryObject,\n            requestBody,\n            hasContentType,\n            url,\n            request,\n            response,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                method = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"GET\";\n                queryObject = _args.length > 2 ? _args[2] : undefined;\n                requestBody = _args.length > 3 ? _args[3] : undefined;\n                hasContentType = _args.length > 4 && _args[4] !== undefined ? _args[4] : true;\n                url = URLForEndpoint(endPoint, queryObject);\n                request = NewRequest(method, hasContentType);\n\n                if (!hasContentType) {\n                  delete request.headers[\"Content-Type\"];\n                  request.body = requestBody;\n                } else if (method !== \"GET\" && requestBody) {\n                  request.body = JSON.stringify(requestBody);\n                }\n\n                _context.prev = 7;\n                _context.next = 10;\n                return fetch(url, request);\n\n              case 10:\n                response = _context.sent;\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](7);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 16:\n                _context.next = 18;\n                return parseResponseAndHandleErrors(response);\n\n              case 18:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 13]]);\n      }));\n\n      function callAPI(_x) {\n        return _callAPI.apply(this, arguments);\n      }\n\n      return callAPI;\n    }() // by default, withToken set to true\n\n  }, {\n    key: \"callWebService\",\n    value: function callWebService(endPoint, data, method) {\n      var withToken = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var withFormData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var request = {\n        dataType: \"json\",\n        url: \"\".concat(API_HOST).concat(endPoint),\n        cache: false,\n        success: function success(response) {\n          return response;\n        }\n      };\n\n      if (method) {\n        request.method = method;\n      }\n\n      if (data) {\n        request.data = data;\n      }\n\n      if (withToken) {\n        data.token = sessionStorage.getItem('authToken');\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\n        data.UserType_Session = sessionStorage.getItem('userTypeSession');\n        data.UserUniversity_Session = sessionStorage.getItem('userUniversitySession');\n      } // this is just testing, remove this if savePost not working\n      // this might just use for upload file request only(formData), not for whole request\n\n\n      if (withFormData) {\n        request.processData = false;\n        request.contentType = false;\n      } // get token from session\n      // const token = sessionStorage.getItem('authToken');\n      // if token is available and withToken set as true, then pass request with headers\n      // they not using header Authorization so disable this\n      // if (token && withToken === true) {\n      //     request.headers = {\"Authorization\": token};\n      // }\n\n\n      return jQuery.ajax(request);\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function () {\n      var _uploadFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(files, postID) {\n        var formData, request;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(postID);\n                formData = new FormData();\n                formData.append('token', sessionStorage.getItem('authToken'));\n                formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\n                console.log(files);\n                formData.append(\"file\", files[0]);\n                formData.append(\"postID\", postID); // console.log(formData);\n                // console.log(files);\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Upload_File.asmx/uploadFile\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                return _context2.abrupt(\"return\", jQuery.ajax(request));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function uploadFile(_x2, _x3) {\n        return _uploadFile.apply(this, arguments);\n      }\n\n      return uploadFile;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(userId, password) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                data = {\n                  userID: userId,\n                  userPassword: password\n                };\n                _context3.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\n\n              case 3:\n                response = _context3.sent;\n                sessionStorage.setItem('authToken', response.token);\n                sessionStorage.setItem('schoolSession', response.UserSchool_Session);\n                sessionStorage.setItem('userIDSession', response.UserID_Session);\n                sessionStorage.setItem('userTypeSession', response.UserType_Session);\n                sessionStorage.setItem('userUniversitySession', response.UserUniversity_Session);\n                sessionStorage.setItem('usRidSession', response.USRid_Session);\n                return _context3.abrupt(\"return\", response);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function login(_x4, _x5) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      sessionStorage.removeItem('authToken');\n      sessionStorage.removeItem('schoolSession');\n      sessionStorage.removeItem('userIDSession');\n      sessionStorage.removeItem('userTypeSession');\n      sessionStorage.removeItem('userUniversitySession');\n      sessionStorage.removeItem('usRidSession');\n      window.location.replace(\"/login\");\n    }\n  }, {\n    key: \"resetEmailPassword\",\n    value: function () {\n      var _resetEmailPassword = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(userEmail) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = {\n                  userEmail: userEmail\n                };\n                _context4.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/resetPasswordEmail\", data, \"POST\", false);\n\n              case 3:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function resetEmailPassword(_x6) {\n        return _resetEmailPassword.apply(this, arguments);\n      }\n\n      return resetEmailPassword;\n    }()\n  }, {\n    key: \"resetPassword\",\n    value: function () {\n      var _resetPassword = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(userEmail, userPassword, otp) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                data = {\n                  userEmail: userEmail,\n                  userPassword: userPassword,\n                  otp: otp\n                };\n                _context5.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/resetPassword\", data, \"POST\", false);\n\n              case 3:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function resetPassword(_x7, _x8, _x9) {\n        return _resetPassword.apply(this, arguments);\n      }\n\n      return resetPassword;\n    }()\n  }, {\n    key: \"parentRegister\",\n    value: function () {\n      var _parentRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(userEmail, userPassword, studentIDNo, studentID_Index, studentDOB, studentIDType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                data = {\n                  userEmail: userEmail,\n                  userPassword: userPassword,\n                  studentID_Index: studentID_Index,\n                  studentDOB: studentDOB,\n                  studentIDType: studentIDType,\n                  studentIDNo: studentIDNo\n                };\n                _context6.next = 3;\n                return this.callWebService(\"/controller/Register.asmx/parentRegistration\", data, \"POST\", false);\n\n              case 3:\n                response = _context6.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context6.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function parentRegister(_x10, _x11, _x12, _x13, _x14, _x15) {\n        return _parentRegister.apply(this, arguments);\n      }\n\n      return parentRegister;\n    }()\n  }, {\n    key: \"getStudent\",\n    value: function () {\n      var _getStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(studentID, studentID_Index, studentFirstName, studentLastName, parentName) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  studentID_Index: studentID_Index,\n                  studentFirstName: studentFirstName,\n                  studentLastName: studentLastName,\n                  parentName: parentName // token: sessionStorage.getItem('authToken'),\n                  // UserSchool_Session: sessionStorage.getItem('schoolSession'),\n\n                };\n                _context7.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\n\n              case 3:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getStudent(_x16, _x17, _x18, _x19, _x20) {\n        return _getStudent.apply(this, arguments);\n      }\n\n      return getStudent;\n    }()\n  }, {\n    key: \"checkStudentDuplication\",\n    value: function () {\n      var _checkStudentDuplication = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(studentFirstName, studentLastName, studentDOB, studentIDType, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                data = {\n                  studentFirstName: studentFirstName,\n                  studentLastName: studentLastName,\n                  studentDOB: studentDOB,\n                  studentIDType: studentIDType,\n                  studentID: studentID\n                };\n                _context8.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/checkStudentDuplication\", data, \"POST\");\n\n              case 3:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function checkStudentDuplication(_x21, _x22, _x23, _x24, _x25) {\n        return _checkStudentDuplication.apply(this, arguments);\n      }\n\n      return checkStudentDuplication;\n    }()\n  }, {\n    key: \"saveStudent\",\n    value: function () {\n      var _saveStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                data = {\n                  jsonString: jsonString\n                };\n                _context9.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/saveStudent\", data, \"POST\");\n\n              case 3:\n                response = _context9.sent;\n                return _context9.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function saveStudent(_x26) {\n        return _saveStudent.apply(this, arguments);\n      }\n\n      return saveStudent;\n    }()\n  }, {\n    key: \"updateStudent\",\n    value: function () {\n      var _updateStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10(studentID, jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  jsonString: jsonString\n                };\n                _context10.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/updateStudent\", data, \"POST\");\n\n              case 3:\n                response = _context10.sent;\n                return _context10.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function updateStudent(_x27, _x28) {\n        return _updateStudent.apply(this, arguments);\n      }\n\n      return updateStudent;\n    }()\n  }, {\n    key: \"activeStudent\",\n    value: function () {\n      var _activeStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                data = {\n                  studentID: studentID\n                };\n                _context11.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/activeStudent\", data, \"POST\");\n\n              case 3:\n                response = _context11.sent;\n                return _context11.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function activeStudent(_x29) {\n        return _activeStudent.apply(this, arguments);\n      }\n\n      return activeStudent;\n    }()\n  }, {\n    key: \"getParentList\",\n    value: function () {\n      var _getParentList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(familyId, parentLastName, parentFirstName) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                data = {\n                  familyID: familyId,\n                  parentFirstName: parentFirstName,\n                  parentLastName: parentLastName // token: sessionStorage.getItem('authToken'),\n                  // UserSchool_Session: sessionStorage.getItem('schoolSession'),\n\n                };\n                _context12.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/getParentList\", data, \"POST\");\n\n              case 3:\n                response = _context12.sent;\n                return _context12.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getParentList(_x30, _x31, _x32) {\n        return _getParentList.apply(this, arguments);\n      }\n\n      return getParentList;\n    }()\n  }, {\n    key: \"getParent\",\n    value: function () {\n      var _getParent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13(parentID, familyID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                data = {\n                  parentID: parentID,\n                  familyID: familyID\n                };\n                _context13.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/getParent\", data, \"POST\");\n\n              case 3:\n                response = _context13.sent;\n                return _context13.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getParent(_x33, _x34) {\n        return _getParent.apply(this, arguments);\n      }\n\n      return getParent;\n    }()\n  }, {\n    key: \"getRelationship\",\n    value: function () {\n      var _getRelationship = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee14(familyID, studentID, parentFirstName, parentLastName, studentName) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                data = {\n                  familyID: familyID,\n                  studentID: studentID,\n                  parentFirstName: parentFirstName,\n                  parentLastName: parentLastName,\n                  studentName: studentName\n                };\n                _context14.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/getRelationship\", data, \"POST\");\n\n              case 3:\n                response = _context14.sent;\n                return _context14.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function getRelationship(_x35, _x36, _x37, _x38, _x39) {\n        return _getRelationship.apply(this, arguments);\n      }\n\n      return getRelationship;\n    }()\n  }, {\n    key: \"updateRelationship\",\n    value: function () {\n      var _updateRelationship = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee15(familyID, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                data = {\n                  familyID: familyID,\n                  studentID: studentID\n                };\n                _context15.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/updateRelationship\", data, \"POST\");\n\n              case 3:\n                response = _context15.sent;\n                return _context15.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function updateRelationship(_x40, _x41) {\n        return _updateRelationship.apply(this, arguments);\n      }\n\n      return updateRelationship;\n    }()\n  }, {\n    key: \"getStudentLevel\",\n    value: function () {\n      var _getStudentLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee16(studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                data = {\n                  studentID: studentID\n                };\n                _context16.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentLevel\", data, \"POST\");\n\n              case 3:\n                response = _context16.sent;\n                return _context16.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function getStudentLevel(_x42) {\n        return _getStudentLevel.apply(this, arguments);\n      }\n\n      return getStudentLevel;\n    }()\n  }, {\n    key: \"getEditClass\",\n    value: function () {\n      var _getEditClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee17(semID, subjectcourseID, customClassNotEqual) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                data = {\n                  semID: semID,\n                  subjectcourseID: subjectcourseID,\n                  customClassNotEqual: customClassNotEqual\n                };\n                _context17.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getEditClass\", data, \"POST\");\n\n              case 3:\n                response = _context17.sent;\n                return _context17.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function getEditClass(_x43, _x44, _x45) {\n        return _getEditClass.apply(this, arguments);\n      }\n\n      return getEditClass;\n    }()\n  }, {\n    key: \"getStudentClass\",\n    value: function () {\n      var _getStudentClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee18(studentID, courseID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  courseID: courseID\n                };\n                _context18.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentClass\", data, \"POST\");\n\n              case 3:\n                response = _context18.sent;\n                return _context18.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function getStudentClass(_x46, _x47) {\n        return _getStudentClass.apply(this, arguments);\n      }\n\n      return getStudentClass;\n    }()\n  }, {\n    key: \"setClass\",\n    value: function () {\n      var _setClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee19(studentID, classID, studentCourseID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  classID: classID,\n                  studentCourseID: studentCourseID\n                };\n                _context19.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/setClass\", data, \"POST\");\n\n              case 3:\n                response = _context19.sent;\n                return _context19.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function setClass(_x48, _x49, _x50) {\n        return _setClass.apply(this, arguments);\n      }\n\n      return setClass;\n    }()\n  }, {\n    key: \"updateLevel\",\n    value: function () {\n      var _updateLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee20(studentID, studentCourseID, actionMode) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  studentCourseID: studentCourseID,\n                  actionMode: actionMode\n                };\n                _context20.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/updateLevel\", data, \"POST\");\n\n              case 3:\n                response = _context20.sent;\n                return _context20.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function updateLevel(_x51, _x52, _x53) {\n        return _updateLevel.apply(this, arguments);\n      }\n\n      return updateLevel;\n    }()\n  }, {\n    key: \"getSibling\",\n    value: function () {\n      var _getSibling = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee21(studentID_Index, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                data = {\n                  studentID_Index: studentID_Index,\n                  studentID: studentID\n                };\n                _context21.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getSibling\", data, \"POST\");\n\n              case 3:\n                response = _context21.sent;\n                return _context21.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function getSibling(_x54, _x55) {\n        return _getSibling.apply(this, arguments);\n      }\n\n      return getSibling;\n    }()\n  }, {\n    key: \"saveParent\",\n    value: function () {\n      var _saveParent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee22(jsonString, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                data = {\n                  jsonString: jsonString,\n                  studentID: studentID\n                };\n                _context22.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/saveParent\", data, \"POST\");\n\n              case 3:\n                response = _context22.sent;\n                return _context22.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function saveParent(_x56, _x57) {\n        return _saveParent.apply(this, arguments);\n      }\n\n      return saveParent;\n    }()\n  }, {\n    key: \"saveParentWithFamilyID\",\n    value: function () {\n      var _saveParentWithFamilyID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee23(parentID, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                data = {\n                  parentID: parentID,\n                  studentID: studentID\n                };\n                _context23.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/saveParentWithFamilyID\", data, \"POST\");\n\n              case 3:\n                response = _context23.sent;\n                return _context23.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function saveParentWithFamilyID(_x58, _x59) {\n        return _saveParentWithFamilyID.apply(this, arguments);\n      }\n\n      return saveParentWithFamilyID;\n    }()\n  }, {\n    key: \"updateParent\",\n    value: function () {\n      var _updateParent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee24(parentID, jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                data = {\n                  parentID: parentID,\n                  jsonString: jsonString\n                };\n                _context24.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/updateParent\", data, \"POST\");\n\n              case 3:\n                response = _context24.sent;\n                return _context24.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function updateParent(_x60, _x61) {\n        return _updateParent.apply(this, arguments);\n      }\n\n      return updateParent;\n    }()\n  }, {\n    key: \"getAcademicYearDateRange\",\n    value: function () {\n      var _getAcademicYearDateRange = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee25(academicYearID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                data = {\n                  academicYearID: academicYearID\n                };\n                _context25.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getAcademicYearDateRange\", data, \"POST\");\n\n              case 3:\n                response = _context25.sent;\n                return _context25.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function getAcademicYearDateRange(_x62) {\n        return _getAcademicYearDateRange.apply(this, arguments);\n      }\n\n      return getAcademicYearDateRange;\n    }()\n  }, {\n    key: \"setLevel\",\n    value: function () {\n      var _setLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee26(studentID, levelID, fromDate, toDate, academicYearID, intakeYear) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  levelID: levelID,\n                  fromDate: fromDate,\n                  toDate: toDate,\n                  academicYearID: academicYearID,\n                  intakeYear: intakeYear\n                };\n                _context26.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/setLevel\", data, \"POST\");\n\n              case 3:\n                response = _context26.sent;\n                return _context26.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function setLevel(_x63, _x64, _x65, _x66, _x67, _x68) {\n        return _setLevel.apply(this, arguments);\n      }\n\n      return setLevel;\n    }()\n  }, {\n    key: \"checkParentDuplication\",\n    value: function () {\n      var _checkParentDuplication = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee27(firstName, lastName, checkMode) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                data = {\n                  firstName: firstName,\n                  lastName: lastName,\n                  checkMode: checkMode\n                };\n                _context27.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/checkParentDuplication\", data, \"POST\");\n\n              case 3:\n                response = _context27.sent;\n                return _context27.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function checkParentDuplication(_x69, _x70, _x71) {\n        return _checkParentDuplication.apply(this, arguments);\n      }\n\n      return checkParentDuplication;\n    }()\n  }, {\n    key: \"getUserMenu\",\n    value: function () {\n      var _getUserMenu = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee28() {\n        var data, userType, response;\n        return regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                data = {};\n                userType = sessionStorage.getItem('userTypeSession');\n\n                if (userType !== \"Parent\") {\n                  data.USRid_Session = sessionStorage.getItem('usRidSession');\n                }\n\n                _context28.next = 5;\n                return this.callWebService(\"/controller/User.asmx/getUserMenu\", data, \"POST\");\n\n              case 5:\n                response = _context28.sent;\n                return _context28.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function getUserMenu() {\n        return _getUserMenu.apply(this, arguments);\n      }\n\n      return getUserMenu;\n    }()\n  }, {\n    key: \"getStaffPost\",\n    value: function () {\n      var _getStaffPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee29() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                data = {};\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context29.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\n\n              case 4:\n                response = _context29.sent;\n                return _context29.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function getStaffPost() {\n        return _getStaffPost.apply(this, arguments);\n      }\n\n      return getStaffPost;\n    }()\n  }, {\n    key: \"getPostDropdown\",\n    value: function () {\n      var _getPostDropdown = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee30() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                data = {};\n                _context30.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostDropDown\", data, \"POST\");\n\n              case 3:\n                response = _context30.sent;\n                return _context30.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this);\n      }));\n\n      function getPostDropdown() {\n        return _getPostDropdown.apply(this, arguments);\n      }\n\n      return getPostDropdown;\n    }()\n  }, {\n    key: \"getParentPost\",\n    value: function () {\n      var _getParentPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee31() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                data = {};\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context31.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPostParent\", data, \"POST\");\n\n              case 4:\n                response = _context31.sent;\n                return _context31.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function getParentPost() {\n        return _getParentPost.apply(this, arguments);\n      }\n\n      return getParentPost;\n    }()\n  }, {\n    key: \"savePost\",\n    value: function () {\n      var _savePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee32(files, postContent, tagAcademicYearID, profolio, tagUserID, tagClassID, tagLevelID) {\n        var formData, key, request, response;\n        return regeneratorRuntime.wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('token', sessionStorage.getItem('authToken'));\n                formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    // console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        formData.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        formData.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  formData.append(\"upload\", files[0]);\n                }\n\n                formData.append(\"postContent\", postContent);\n                formData.append(\"tagAcademicYearID\", tagAcademicYearID);\n                formData.append(\"profolio\", profolio);\n                formData.append(\"tagUserID\", tagUserID);\n                formData.append(\"tagClassID\", tagClassID);\n                formData.append(\"tagLevelID\", tagLevelID);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Posting.asmx/savePost\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context32.next = 13;\n                return jQuery.ajax(request);\n\n              case 13:\n                response = _context32.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context32.abrupt(\"return\", response);\n\n              case 16:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this);\n      }));\n\n      function savePost(_x72, _x73, _x74, _x75, _x76, _x77, _x78) {\n        return _savePost.apply(this, arguments);\n      }\n\n      return savePost;\n    }()\n  }, {\n    key: \"getPostFile\",\n    value: function () {\n      var _getPostFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee33(postID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                data = {\n                  postID: postID\n                };\n                _context33.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostFile\", data, \"POST\");\n\n              case 3:\n                response = _context33.sent;\n                return _context33.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function getPostFile(_x79) {\n        return _getPostFile.apply(this, arguments);\n      }\n\n      return getPostFile;\n    }()\n  }, {\n    key: \"pendingPost\",\n    value: function () {\n      var _pendingPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee34(ID, PostID, PostContent, PostStatus, PostCreatedDate, PostApproverID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                data = {\n                  ID: ID,\n                  PostID: PostID,\n                  PostContent: PostContent,\n                  PostStatus: PostStatus,\n                  PostCreatedDate: PostCreatedDate,\n                  PostApproverID: PostApproverID\n                };\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context34.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getPendingApproverPost\", data, \"POST\");\n\n              case 4:\n                response = _context34.sent;\n                return _context34.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this);\n      }));\n\n      function pendingPost(_x80, _x81, _x82, _x83, _x84, _x85) {\n        return _pendingPost.apply(this, arguments);\n      }\n\n      return pendingPost;\n    }()\n  }, {\n    key: \"approvePost\",\n    value: function () {\n      var _approvePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee35(postApproverID, actionStatus) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                data = {\n                  actionStatus: actionStatus,\n                  postApproverID: postApproverID\n                };\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context35.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/approvePost\", data, \"POST\");\n\n              case 4:\n                response = _context35.sent;\n                return _context35.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n\n      function approvePost(_x86, _x87) {\n        return _approvePost.apply(this, arguments);\n      }\n\n      return approvePost;\n    }()\n  }, {\n    key: \"updatePost\",\n    value: function () {\n      var _updatePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee36(currentFiles, actionStatus, postID, UpdateContent, profolio, tagUserID, tagClassID, tagLevelID) {\n        var formData, key, request, response;\n        return regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('token', sessionStorage.getItem('authToken'));\n                formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\n                console.log(currentFiles);\n\n                if (currentFiles && currentFiles.length > 1) {\n                  for (key in currentFiles) {\n                    // console.log(key);\n                    if (currentFiles.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        formData.append(\"upload_\".concat(key), currentFiles[key]);\n                      } else {\n                        formData.append(\"upload\", currentFiles[key]);\n                      }\n                    }\n                  }\n                } else if (currentFiles) {\n                  formData.append(\"upload\", currentFiles[0]);\n                }\n\n                formData.append(\"actionStatus\", actionStatus);\n                formData.append(\"postID\", postID);\n                formData.append(\"UpdateContent\", UpdateContent);\n                formData.append(\"profolio\", profolio);\n                formData.append(\"tagUserID\", tagUserID);\n                formData.append(\"tagClassID\", tagClassID);\n                formData.append(\"tagLevelID\", tagLevelID);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Posting.asmx/updatePost\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context36.next = 15;\n                return jQuery.ajax(request);\n\n              case 15:\n                response = _context36.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context36.abrupt(\"return\", response);\n\n              case 18:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this);\n      }));\n\n      function updatePost(_x88, _x89, _x90, _x91, _x92, _x93, _x94, _x95) {\n        return _updatePost.apply(this, arguments);\n      }\n\n      return updatePost;\n    }()\n  }, {\n    key: \"getApproverMaster\",\n    value: function () {\n      var _getApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee37() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                data = {};\n                data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                _context37.next = 4;\n                return this.callWebService(\"/controller/Posting.asmx/getApproverMaster\", data, \"POST\");\n\n              case 4:\n                response = _context37.sent;\n                return _context37.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this);\n      }));\n\n      function getApproverMaster() {\n        return _getApproverMaster.apply(this, arguments);\n      }\n\n      return getApproverMaster;\n    }()\n  }, {\n    key: \"saveApproverMaster\",\n    value: function () {\n      var _saveApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee38(approverLevel, approverUserID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                data = {\n                  approverLevel: approverLevel,\n                  approverUserID: approverUserID\n                };\n                data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                data.UserID_Session = sessionStorage.getItem('userIDSession');\n                _context38.next = 5;\n                return this.callWebService(\"/controller/Posting.asmx/saveApproverMaster\", data, \"POST\");\n\n              case 5:\n                response = _context38.sent;\n                return _context38.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n\n      function saveApproverMaster(_x96, _x97) {\n        return _saveApproverMaster.apply(this, arguments);\n      }\n\n      return saveApproverMaster;\n    }()\n  }, {\n    key: \"updateApproverMaster\",\n    value: function () {\n      var _updateApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee39(approverID, approverLevel, approverUserID, status) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                data = {\n                  approverID: approverID,\n                  approverLevel: approverLevel,\n                  approverUserID: approverUserID,\n                  status: status\n                }; // data.UserSchool_Session = sessionStorage.getItem('schoolSession');\n                // data.UserID_Session = sessionStorage.getItem('userIDSession');\n\n                _context39.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/updateApproverMaster\", data, \"POST\");\n\n              case 3:\n                response = _context39.sent;\n                return _context39.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39, this);\n      }));\n\n      function updateApproverMaster(_x98, _x99, _x100, _x101) {\n        return _updateApproverMaster.apply(this, arguments);\n      }\n\n      return updateApproverMaster;\n    }()\n  }, {\n    key: \"login2\",\n    value: function () {\n      var _login2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee40(userId, password) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                data = {\n                  username: userId,\n                  password: password\n                };\n                _context40.next = 3;\n                return this.callAPI(\"/login\", \"POST\", null, data);\n\n              case 3:\n                response = _context40.sent;\n                sessionStorage.setItem('authToken', response.token);\n                return _context40.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40, this);\n      }));\n\n      function login2(_x102, _x103) {\n        return _login2.apply(this, arguments);\n      }\n\n      return login2;\n    }()\n  }, {\n    key: \"getCountryList\",\n    value: function () {\n      var _getCountryList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee41() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                // let response;\n                // try {\n                //     response = await fetch(\"http://local.emsv2/controller/Students.asmx/getCountryList\");\n                // } catch (err) {\n                //     console.log(err);\n                //     throw ERROR_SERVER_UNREACHABLE;\n                // }\n                // return await parseResponseAndHandleErrors(response);\n                data = {};\n                _context41.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getCountryList\", data, \"POST\");\n\n              case 3:\n                response = _context41.sent;\n                return _context41.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41, this);\n      }));\n\n      function getCountryList() {\n        return _getCountryList.apply(this, arguments);\n      }\n\n      return getCountryList;\n    }()\n  }, {\n    key: \"getLevel\",\n    value: function () {\n      var _getLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee42(customLevelNotEqual) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                data = {\n                  customLevelNotEqual: customLevelNotEqual\n                };\n                _context42.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getLevel\", data, \"POST\");\n\n              case 3:\n                response = _context42.sent;\n                return _context42.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42, this);\n      }));\n\n      function getLevel(_x104) {\n        return _getLevel.apply(this, arguments);\n      }\n\n      return getLevel;\n    }()\n  }, {\n    key: \"getStudentDropDownList\",\n    value: function () {\n      var _getStudentDropDownList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee43(jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                data = {\n                  jsonString: jsonString\n                };\n                _context43.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentDropDownList\", data, \"POST\");\n\n              case 3:\n                response = _context43.sent;\n                return _context43.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43, this);\n      }));\n\n      function getStudentDropDownList(_x105) {\n        return _getStudentDropDownList.apply(this, arguments);\n      }\n\n      return getStudentDropDownList;\n    }()\n  }, {\n    key: \"getAcademicYear\",\n    value: function () {\n      var _getAcademicYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee44() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee44$(_context44) {\n          while (1) {\n            switch (_context44.prev = _context44.next) {\n              case 0:\n                data = {};\n                _context44.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getAcademicYear\", data, \"POST\");\n\n              case 3:\n                response = _context44.sent;\n                return _context44.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context44.stop();\n            }\n          }\n        }, _callee44, this);\n      }));\n\n      function getAcademicYear() {\n        return _getAcademicYear.apply(this, arguments);\n      }\n\n      return getAcademicYear;\n    }()\n  }, {\n    key: \"getIntakeYear\",\n    value: function () {\n      var _getIntakeYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee45() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                data = {};\n                _context45.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getIntakeYear\", data, \"POST\");\n\n              case 3:\n                response = _context45.sent;\n                return _context45.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45, this);\n      }));\n\n      function getIntakeYear() {\n        return _getIntakeYear.apply(this, arguments);\n      }\n\n      return getIntakeYear;\n    }()\n  }, {\n    key: \"getUserList\",\n    value: function () {\n      var _getUserList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee46() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                data = {};\n                _context46.next = 3;\n                return this.callWebService(\"/controller/UserMagt.asmx/getUserList\", data, \"POST\");\n\n              case 3:\n                response = _context46.sent;\n                return _context46.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46, this);\n      }));\n\n      function getUserList() {\n        return _getUserList.apply(this, arguments);\n      }\n\n      return getUserList;\n    }() // SAMPLE 2 using axios\n\n  }, {\n    key: \"PostToGetDataWEIRD\",\n    value: function () {\n      var _PostToGetDataWEIRD = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee47() {\n        var options, response;\n        return regeneratorRuntime.wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                options = {\n                  countryID: \"\"\n                };\n                _context47.prev = 1;\n                _context47.next = 4;\n                return axios.post(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\", options);\n\n              case 4:\n                response = _context47.sent;\n                _context47.next = 11;\n                break;\n\n              case 7:\n                _context47.prev = 7;\n                _context47.t0 = _context47[\"catch\"](1);\n                console.log(_context47.t0);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 11:\n                return _context47.abrupt(\"return\", response.data);\n\n              case 12:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47, this, [[1, 7]]);\n      }));\n\n      function PostToGetDataWEIRD() {\n        return _PostToGetDataWEIRD.apply(this, arguments);\n      }\n\n      return PostToGetDataWEIRD;\n    }() // POST SAMPLE\n\n  }, {\n    key: \"createStudent\",\n    value: function () {\n      var _createStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee48() {\n        var headers, request, requestBody, response;\n        return regeneratorRuntime.wrap(function _callee48$(_context48) {\n          while (1) {\n            switch (_context48.prev = _context48.next) {\n              case 0:\n                headers = new Headers();\n                headers.append(\"Content-Type\", \"application/json\");\n                request = {\n                  method: \"POST\",\n                  headers: headers\n                };\n                requestBody = {\n                  countryID: \"\"\n                };\n                request.body = JSON.stringify(requestBody);\n                _context48.prev = 5;\n                _context48.next = 8;\n                return fetch(\"URL\", request);\n\n              case 8:\n                response = _context48.sent;\n                _context48.next = 15;\n                break;\n\n              case 11:\n                _context48.prev = 11;\n                _context48.t0 = _context48[\"catch\"](5);\n                console.log(_context48.t0);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 15:\n                _context48.next = 17;\n                return parseResponseAndHandleErrors(response);\n\n              case 17:\n                return _context48.abrupt(\"return\", _context48.sent);\n\n              case 18:\n              case \"end\":\n                return _context48.stop();\n            }\n          }\n        }, _callee48, this, [[5, 11]]);\n      }));\n\n      function createStudent() {\n        return _createStudent.apply(this, arguments);\n      }\n\n      return createStudent;\n    }()\n  }]);\n\n  return DataSource;\n}();\n\nexport { DataSource as default };",{"version":3,"sources":["C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\data\\datasource.js"],"names":["URLForEndpoint","NewRequest","parseResponseAndHandleErrors","parseObject","ERROR_SERVER_UNREACHABLE","axios","jQuery","API_HOST","process","env","VUE_APP_ROOT_API","DataSource","instance","undefined","loggedIn","endPoint","method","queryObject","requestBody","hasContentType","url","request","headers","body","JSON","stringify","fetch","response","data","withToken","withFormData","dataType","cache","success","token","sessionStorage","getItem","UserSchool_Session","UserID_Session","UserType_Session","UserUniversity_Session","processData","contentType","ajax","files","postID","console","log","formData","FormData","append","type","enctype","async","json","userId","password","userID","userPassword","callWebService","setItem","USRid_Session","removeItem","window","location","replace","userEmail","otp","studentIDNo","studentID_Index","studentDOB","studentIDType","parse","studentID","studentFirstName","studentLastName","parentName","jsonString","familyId","parentLastName","parentFirstName","familyID","parentID","studentName","semID","subjectcourseID","customClassNotEqual","courseID","classID","studentCourseID","actionMode","academicYearID","levelID","fromDate","toDate","intakeYear","firstName","lastName","checkMode","userType","postContent","tagAcademicYearID","profolio","tagUserID","tagClassID","tagLevelID","length","key","hasOwnProperty","ID","PostID","PostContent","PostStatus","PostCreatedDate","PostApproverID","postApproverID","actionStatus","currentFiles","UpdateContent","approverLevel","approverUserID","approverID","status","username","callAPI","customLevelNotEqual","options","countryID","post","Headers"],"mappings":"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","sourcesContent":["import {URLForEndpoint, NewRequest, parseResponseAndHandleErrors, parseObject} from \"../data/requests\";\r\nimport {ERROR_SERVER_UNREACHABLE} from \"../data/datasourceConst\";\r\nimport axios from \"axios\";\r\nimport jQuery from 'jquery';\r\n\r\nconst API_HOST = process.env.VUE_APP_ROOT_API || \"http://local.emsv2\";\r\nexport default class DataSource {\r\n    static get shared() {\r\n        if (DataSource.instance == null || DataSource.instance === undefined) {\r\n            DataSource.instance = new DataSource();\r\n        }\r\n        return DataSource.instance;\r\n    }\r\n\r\n    constructor() {\r\n        this.loggedIn = false;\r\n    }\r\n\r\n    async callAPI(endPoint, method = \"GET\", queryObject, requestBody, hasContentType = true) {\r\n        const url = URLForEndpoint(endPoint, queryObject);\r\n        const request = NewRequest(method, hasContentType);\r\n\r\n        if (!hasContentType) {\r\n            delete request.headers[\"Content-Type\"];\r\n            request.body = requestBody;\r\n        } else if (method !== \"GET\" && requestBody) {\r\n            request.body = JSON.stringify(requestBody);\r\n        }\r\n        let response;\r\n        try {\r\n            response = await fetch(url, request);\r\n        } catch (err) {\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return await parseResponseAndHandleErrors(response);\r\n    }\r\n\r\n    // by default, withToken set to true\r\n    callWebService(endPoint, data, method, withToken = true, withFormData = false) {\r\n        const request = {\r\n            dataType: \"json\",\r\n            url: `${API_HOST}${endPoint}`,\r\n            cache: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        if (method) {\r\n            request.method = method;\r\n        }\r\n\r\n        if (data) {\r\n            request.data = data;\r\n        }\r\n\r\n        if (withToken) {\r\n            data.token = sessionStorage.getItem('authToken');\r\n            data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n            data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n            data.UserType_Session = sessionStorage.getItem('userTypeSession');\r\n            data.UserUniversity_Session = sessionStorage.getItem('userUniversitySession');\r\n        }\r\n\r\n        // this is just testing, remove this if savePost not working\r\n        // this might just use for upload file request only(formData), not for whole request\r\n        if (withFormData) {\r\n            request.processData = false;\r\n            request.contentType = false;\r\n        }\r\n\r\n        // get token from session\r\n        // const token = sessionStorage.getItem('authToken');\r\n\r\n        // if token is available and withToken set as true, then pass request with headers\r\n        // they not using header Authorization so disable this\r\n        // if (token && withToken === true) {\r\n        //     request.headers = {\"Authorization\": token};\r\n        // }\r\n\r\n        return jQuery.ajax(request);\r\n    }\r\n\r\n    async uploadFile(files, postID) {\r\n        console.log(postID);\r\n        const formData = new FormData();\r\n        formData.append('token', sessionStorage.getItem('authToken'));\r\n        formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\r\n\r\n        console.log(files);\r\n\r\n        formData.append(\"file\", files[0]);\r\n        formData.append(\"postID\", postID);\r\n        // console.log(formData);\r\n        // console.log(files);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Upload_File.asmx/uploadFile`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        return jQuery.ajax(request);\r\n\r\n        // const response = await this.callWebService(\"/controller/Upload_File.asmx/uploadFile\", data, \"POST\", true, true);\r\n        // return response;\r\n    }\r\n\r\n\r\n    async login(userId, password) {\r\n        const data = {\r\n            userID: userId,\r\n            userPassword: password\r\n        };\r\n        const response = await this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\r\n        sessionStorage.setItem('authToken', response.token);\r\n        sessionStorage.setItem('schoolSession', response.UserSchool_Session);\r\n        sessionStorage.setItem('userIDSession', response.UserID_Session);\r\n        sessionStorage.setItem('userTypeSession', response.UserType_Session);\r\n        sessionStorage.setItem('userUniversitySession', response.UserUniversity_Session);\r\n        sessionStorage.setItem('usRidSession', response.USRid_Session);\r\n        return response;\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('authToken');\r\n        sessionStorage.removeItem('schoolSession');\r\n        sessionStorage.removeItem('userIDSession');\r\n        sessionStorage.removeItem('userTypeSession');\r\n        sessionStorage.removeItem('userUniversitySession');\r\n        sessionStorage.removeItem('usRidSession');\r\n        window.location.replace(\"/login\");\r\n\r\n    }\r\n\r\n    async resetEmailPassword(userEmail) {\r\n        const data = {\r\n            userEmail: userEmail\r\n        };\r\n        const response = await this.callWebService(\"/controller/Login.asmx/resetPasswordEmail\", data, \"POST\", false);\r\n        return response;\r\n    }\r\n\r\n    async resetPassword(userEmail, userPassword, otp) {\r\n        const data = {\r\n            userEmail: userEmail,\r\n            userPassword: userPassword,\r\n            otp: otp\r\n        };\r\n        const response = await this.callWebService(\"/controller/Login.asmx/resetPassword\", data, \"POST\", false);\r\n        return response;\r\n    }\r\n\r\n    async parentRegister(userEmail, userPassword, studentIDNo, studentID_Index, studentDOB, studentIDType) {\r\n        const data = {\r\n            userEmail: userEmail,\r\n            userPassword: userPassword,\r\n            studentID_Index: studentID_Index,\r\n            studentDOB: studentDOB,\r\n            studentIDType: studentIDType,\r\n            studentIDNo: studentIDNo\r\n        };\r\n        let response = await this.callWebService(\"/controller/Register.asmx/parentRegistration\", data, \"POST\", false);\r\n\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    async getStudent(studentID, studentID_Index, studentFirstName, studentLastName, parentName) {\r\n        const data = {\r\n            studentID: studentID,\r\n            studentID_Index: studentID_Index,\r\n            studentFirstName: studentFirstName,\r\n            studentLastName: studentLastName,\r\n            parentName: parentName,\r\n            // token: sessionStorage.getItem('authToken'),\r\n            // UserSchool_Session: sessionStorage.getItem('schoolSession'),\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async checkStudentDuplication(studentFirstName, studentLastName, studentDOB, studentIDType, studentID) {\r\n        const data = {\r\n            studentFirstName: studentFirstName,\r\n            studentLastName: studentLastName,\r\n            studentDOB: studentDOB,\r\n            studentIDType: studentIDType,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/checkStudentDuplication\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveStudent(jsonString) {\r\n        const data = {\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/saveStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateStudent(studentID, jsonString) {\r\n        const data = {\r\n            studentID: studentID,\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/updateStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async activeStudent(studentID) {\r\n        const data = {\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/activeStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParentList(familyId, parentLastName, parentFirstName) {\r\n        const data = {\r\n            familyID: familyId,\r\n            parentFirstName: parentFirstName,\r\n            parentLastName: parentLastName,\r\n            // token: sessionStorage.getItem('authToken'),\r\n            // UserSchool_Session: sessionStorage.getItem('schoolSession'),\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getParentList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParent(parentID, familyID) {\r\n        const data = {\r\n            parentID: parentID,\r\n            familyID: familyID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getRelationship(familyID, studentID, parentFirstName, parentLastName, studentName) {\r\n        const data = {\r\n            familyID: familyID,\r\n            studentID: studentID,\r\n            parentFirstName: parentFirstName,\r\n            parentLastName: parentLastName,\r\n            studentName: studentName,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getRelationship\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateRelationship(familyID, studentID) {\r\n        const data = {\r\n            familyID: familyID,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/updateRelationship\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentLevel(studentID) {\r\n        const data = {\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getEditClass(semID, subjectcourseID, customClassNotEqual) {\r\n        const data = {\r\n            semID: semID,\r\n            subjectcourseID: subjectcourseID,\r\n            customClassNotEqual: customClassNotEqual,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getEditClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentClass(studentID, courseID) {\r\n        const data = {\r\n            studentID: studentID,\r\n            courseID: courseID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async setClass(studentID, classID, studentCourseID) {\r\n        const data = {\r\n            studentID: studentID,\r\n            classID: classID,\r\n            studentCourseID: studentCourseID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/setClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateLevel(studentID, studentCourseID, actionMode) {\r\n        const data = {\r\n            studentID: studentID,\r\n            studentCourseID: studentCourseID,\r\n            actionMode: actionMode,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/updateLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getSibling(studentID_Index, studentID) {\r\n        const data = {\r\n            studentID_Index: studentID_Index,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getSibling\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveParent(jsonString, studentID) {\r\n        const data = {\r\n            jsonString: jsonString,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/saveParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveParentWithFamilyID(parentID, studentID) {\r\n        const data = {\r\n            parentID: parentID,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/saveParentWithFamilyID\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateParent(parentID, jsonString) {\r\n        const data = {\r\n            parentID: parentID,\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/updateParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAcademicYearDateRange(academicYearID) {\r\n        const data = {\r\n            academicYearID: academicYearID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getAcademicYearDateRange\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async setLevel(studentID, levelID, fromDate, toDate, academicYearID, intakeYear) {\r\n        const data = {\r\n            studentID: studentID,\r\n            levelID: levelID,\r\n            fromDate: fromDate,\r\n            toDate: toDate,\r\n            academicYearID: academicYearID,\r\n            intakeYear: intakeYear,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/setLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async checkParentDuplication(firstName, lastName, checkMode) {\r\n        const data = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            checkMode: checkMode,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/checkParentDuplication\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getUserMenu() {\r\n        const data = {};\r\n\r\n        const userType = sessionStorage.getItem('userTypeSession');\r\n        if (userType !== \"Parent\") {\r\n            data.USRid_Session = sessionStorage.getItem('usRidSession');\r\n        }\r\n\r\n        const response = await this.callWebService(\"/controller/User.asmx/getUserMenu\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStaffPost() {\r\n        const data = {};\r\n\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getPostDropdown() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostDropDown\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParentPost() {\r\n        const data = {};\r\n\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async savePost(files, postContent, tagAcademicYearID, profolio, tagUserID, tagClassID, tagLevelID) {\r\n        const formData = new FormData();\r\n        formData.append('token', sessionStorage.getItem('authToken'));\r\n        formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                // console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        formData.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        formData.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            formData.append(\"upload\", files[0]);\r\n        }\r\n\r\n        formData.append(\"postContent\", postContent);\r\n        formData.append(\"tagAcademicYearID\", tagAcademicYearID);\r\n        formData.append(\"profolio\", profolio);\r\n        formData.append(\"tagUserID\", tagUserID);\r\n        formData.append(\"tagClassID\", tagClassID);\r\n        formData.append(\"tagLevelID\", tagLevelID);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Posting.asmx/savePost`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async getPostFile(postID) {\r\n        const data = {\r\n            postID: postID\r\n        };\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostFile\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async pendingPost(ID, PostID, PostContent, PostStatus, PostCreatedDate, PostApproverID) {\r\n        const data = {\r\n            ID: ID,\r\n            PostID: PostID,\r\n            PostContent: PostContent,\r\n            PostStatus: PostStatus,\r\n            PostCreatedDate: PostCreatedDate,\r\n            PostApproverID: PostApproverID\r\n        };\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPendingApproverPost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async approvePost(postApproverID, actionStatus) {\r\n        const data = {\r\n            actionStatus: actionStatus,\r\n            postApproverID: postApproverID,\r\n        };\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/approvePost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updatePost(currentFiles, actionStatus, postID, UpdateContent, profolio, tagUserID, tagClassID, tagLevelID) {\r\n        const formData = new FormData();\r\n        formData.append('token', sessionStorage.getItem('authToken'));\r\n        formData.append('UserID_Session', sessionStorage.getItem('userIDSession'));\r\nconsole.log(currentFiles);\r\n        if (currentFiles && currentFiles.length > 1) {\r\n            for (let key in currentFiles) {\r\n                // console.log(key);\r\n                if (currentFiles.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        formData.append(`upload_${key}`, currentFiles[key]);\r\n                    } else {\r\n                        formData.append(\"upload\", currentFiles[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (currentFiles) {\r\n            formData.append(\"upload\", currentFiles[0]);\r\n        }\r\n\r\n        formData.append(\"actionStatus\", actionStatus);\r\n        formData.append(\"postID\", postID);\r\n        formData.append(\"UpdateContent\", UpdateContent);\r\n        formData.append(\"profolio\", profolio);\r\n        formData.append(\"tagUserID\", tagUserID);\r\n        formData.append(\"tagClassID\", tagClassID);\r\n        formData.append(\"tagLevelID\", tagLevelID);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Posting.asmx/updatePost`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async getApproverMaster() {\r\n        const data = {};\r\n\r\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveApproverMaster(approverLevel, approverUserID) {\r\n        const data = {\r\n            approverLevel: approverLevel,\r\n            approverUserID: approverUserID\r\n        };\r\n\r\n        data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n        data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/saveApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateApproverMaster(approverID, approverLevel, approverUserID, status) {\r\n        const data = {\r\n            approverID: approverID,\r\n            approverLevel: approverLevel,\r\n            approverUserID: approverUserID,\r\n            status: status,\r\n        };\r\n\r\n        // data.UserSchool_Session = sessionStorage.getItem('schoolSession');\r\n        // data.UserID_Session = sessionStorage.getItem('userIDSession');\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/updateApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async login2(userId, password) {\r\n        const data = {\r\n            username: userId,\r\n            password: password\r\n        };\r\n        const response = await this.callAPI(\"/login\", \"POST\", null, data);\r\n        sessionStorage.setItem('authToken', response.token);\r\n        return response;\r\n    }\r\n\r\n    async getCountryList() {\r\n        // let response;\r\n        // try {\r\n        //     response = await fetch(\"http://local.emsv2/controller/Students.asmx/getCountryList\");\r\n        // } catch (err) {\r\n        //     console.log(err);\r\n        //     throw ERROR_SERVER_UNREACHABLE;\r\n        // }\r\n        // return await parseResponseAndHandleErrors(response);\r\n\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getCountryList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getLevel(customLevelNotEqual) {\r\n        const data = {\r\n            customLevelNotEqual: customLevelNotEqual,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentDropDownList(jsonString) {\r\n        const data = {\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentDropDownList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAcademicYear() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getAcademicYear\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getIntakeYear() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getIntakeYear\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getUserList() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/UserMagt.asmx/getUserList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    // SAMPLE 2 using axios\r\n    async PostToGetDataWEIRD() {\r\n        const options = {\r\n            countryID: \"\",\r\n        };\r\n\r\n        let response;\r\n        try {\r\n            response = await axios.post(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\", options);\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return response.data;\r\n    }\r\n\r\n    // POST SAMPLE\r\n    async createStudent() {\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        const request = {\r\n            method: \"POST\",\r\n            headers: headers,\r\n        };\r\n        const requestBody = {\r\n            countryID: \"\",\r\n        };\r\n        request.body = JSON.stringify(requestBody);\r\n\r\n        let response;\r\n        try {\r\n            response = await fetch(\"URL\", request);\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return await parseResponseAndHandleErrors(response);\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}]}