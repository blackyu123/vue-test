{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\TransferIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\TransferIn.vue","mtime":1555608750372},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552619058231},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1552619052419},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552619058231},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1552619058571}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataSource from \"../data/datasource\";\nexport default {\n  name: \"TransferIn\",\n  data: function data() {\n    var _this = this;\n\n    return {\n      levelList: [],\n      academicYearList: [],\n      studentIntakeYearList: [],\n      transferStudentID: '',\n      studentSchoolID: '',\n      inputDateOfCommencement: '',\n      transferInListInt: [],\n      transferInList: [{\n        prop: \"Index_No\",\n        label: \"Student ID\"\n      }, {\n        prop: \"Full_Name\",\n        label: \"First Name\"\n      }, {\n        prop: \"Middle Name\",\n        label: \"Middle_name\"\n      }, {\n        prop: \"Last Name\",\n        label: \"Last_name\"\n      }],\n      transferListAction: {\n        label: 'Action',\n        props: {\n          align: 'center'\n        },\n        buttons: [{\n          props: {\n            type: 'primary',\n            icon: 'el-icon-edit'\n          },\n          handler: function handler(row) {\n            _this.transferStudentID = row.Student_ID;\n            _this.studentSchoolID = row.PK_STUSCH_ID;\n            _this.inputDateOfCommencement = row.STUSCH_EffectiveDate_convert;\n\n            _this.$refs.transferShowModal.show();\n          },\n          label: 'Action'\n        }]\n      }\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.getPendingAcceptTransferSchoolList();\n              this.BindStudentLevel();\n              this.BindAcademicYear();\n              this.BindStudentIntakeYear();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    getPendingAcceptTransferSchoolList: function () {\n      var _getPendingAcceptTransferSchoolList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.$vs.loading();\n                _context3.prev = 1;\n                _context3.next = 4;\n                return DataSource.shared.getPendingAcceptTransferSchoolBySchool();\n\n              case 4:\n                response = _context3.sent;\n\n                if (!response) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                _context3.t0 = response.code;\n                _context3.next = _context3.t0 === \"88\" ? 9 : _context3.t0 === \"99\" ? 11 : 13;\n                break;\n\n              case 9:\n                this.$router.push('/');\n                return _context3.abrupt(\"break\", 13);\n\n              case 11:\n                this.$notify.error({\n                  title: 'Error',\n                  message: 'Error'\n                });\n                return _context3.abrupt(\"break\", 13);\n\n              case 13:\n                this.transferInListInt = response.Table;\n\n              case 14:\n                _context3.next = 19;\n                break;\n\n              case 16:\n                _context3.prev = 16;\n                _context3.t1 = _context3[\"catch\"](1);\n                this.results = _context3.t1;\n\n              case 19:\n                this.$vs.loading.close();\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 16]]);\n      }));\n\n      function getPendingAcceptTransferSchoolList() {\n        return _getPendingAcceptTransferSchoolList.apply(this, arguments);\n      }\n\n      return getPendingAcceptTransferSchoolList;\n    }(),\n    BindStudentLevel: function () {\n      var _BindStudentLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return DataSource.shared.getLevel('');\n\n              case 3:\n                response = _context4.sent;\n\n                if (response) {\n                  this.levelListResponse = response.Table;\n                  this.levelListResponse.forEach(function (m) {\n                    _this2.levelList.push(m);\n                  });\n                }\n\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                this.results = _context4.t0;\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n\n      function BindStudentLevel() {\n        return _BindStudentLevel.apply(this, arguments);\n      }\n\n      return BindStudentLevel;\n    }(),\n    BindAcademicYear: function () {\n      var _BindAcademicYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var _this3 = this;\n\n        var response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return DataSource.shared.getAcademicYear();\n\n              case 3:\n                response = _context5.sent;\n\n                if (response) {\n                  this.academicYearListResponse = response.Table;\n                  this.academicYearListResponse.forEach(function (m) {\n                    _this3.academicYearList.push(m);\n                  });\n                }\n\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                this.results = _context5.t0;\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 7]]);\n      }));\n\n      function BindAcademicYear() {\n        return _BindAcademicYear.apply(this, arguments);\n      }\n\n      return BindAcademicYear;\n    }(),\n    BindStudentIntakeYear: function () {\n      var _BindStudentIntakeYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var _this4 = this;\n\n        var response;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return DataSource.shared.getIntakeYear();\n\n              case 3:\n                response = _context6.sent;\n\n                if (response) {\n                  this.studentIntakeYearListResponse = response.Table;\n                  this.studentIntakeYearListResponse.forEach(function (m) {\n                    _this4.studentIntakeYearList.push(m);\n                  });\n                }\n\n                _context6.next = 10;\n                break;\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n                this.results = _context6.t0;\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n\n      function BindStudentIntakeYear() {\n        return _BindStudentIntakeYear.apply(this, arguments);\n      }\n\n      return BindStudentIntakeYear;\n    }(),\n    ApproveReject: function () {\n      var _ApproveReject = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(value) {\n        var getAcaYearRes, academicYearFromDate, academicYearToDate;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n\n                if (!(this.transferStudentID !== \"\" && this.studentSchoolID !== \"\")) {\n                  _context7.next = 16;\n                  break;\n                }\n\n                if (!(value === 'APPROVE')) {\n                  _context7.next = 13;\n                  break;\n                }\n\n                if (!(this.$refs.ddlStudentSelectLevel.value !== \"\" && this.$refs.ddlStudentFirstAcademicYear.value !== \"\" && this.$refs.ddlStudentIntakeYear.value !== \"\")) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                _context7.next = 6;\n                return DataSource.shared.getAcademicYearDateRange(this.$refs.ddlStudentFirstAcademicYear.value);\n\n              case 6:\n                getAcaYearRes = _context7.sent;\n\n                if (getAcaYearRes) {\n                  if (getAcaYearRes.code === \"99\") {\n                    alert('Get Academic Year Error - Please try again later');\n                  } else {\n                    this.getAcaYearResTemp = getAcaYearRes.Table;\n                    this.getAcaYearResTemp.forEach(function (m) {\n                      academicYearFromDate = m.SMT_From;\n                      academicYearToDate = m.SMT_To;\n                    });\n                    this.academicYearToDate(value, academicYearFromDate, academicYearToDate, this.$refs.ddlStudentSelectLevel.value, this.$refs.ddlStudentFirstAcademicYear.value, this.$refs.ddlStudentIntakeYear.value);\n                  }\n                }\n\n                _context7.next = 11;\n                break;\n\n              case 10:\n                alert('Please fill in all the information');\n\n              case 11:\n                _context7.next = 14;\n                break;\n\n              case 13:\n                if (value === 'REJECT') {\n                  this.academicYearToDate(value, 'NO DATA', 'NO DATA', 'NO DATA', 'NO DATA', 'NO DATA');\n                }\n\n              case 14:\n                _context7.next = 17;\n                break;\n\n              case 16:\n                alert('Error! Fail to get table info');\n\n              case 17:\n                _context7.next = 22;\n                break;\n\n              case 19:\n                _context7.prev = 19;\n                _context7.t0 = _context7[\"catch\"](0);\n                this.results = _context7.t0;\n\n              case 22:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 19]]);\n      }));\n\n      function ApproveReject(_x) {\n        return _ApproveReject.apply(this, arguments);\n      }\n\n      return ApproveReject;\n    }(),\n    academicYearToDate: function () {\n      var _academicYearToDate2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(value, academicYearFromDate, _academicYearToDate, level, adYear, intakeYear) {\n        var getSetLvlRes;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return DataSource.shared.setLevelForAcceptScool(this.transferStudentID, level, academicYearFromDate, _academicYearToDate, adYear, intakeYear, value, this.studentSchoolID, this.inputDateOfCommencement);\n\n              case 3:\n                getSetLvlRes = _context8.sent;\n\n                if (getSetLvlRes) {\n                  if (getSetLvlRes.code === \"1\") {\n                    alert('Records Successfully Saved');\n                    window.location.replace('/TransferIn');\n                  } else if (getSetLvlRes.code === \"2\") {\n                    alert('Date of Commencement Cannot today or less than today');\n                  } else {\n                    alert('Save Student Accept / Reject School - Please try again later');\n                  }\n                }\n\n                _context8.next = 10;\n                break;\n\n              case 7:\n                _context8.prev = 7;\n                _context8.t0 = _context8[\"catch\"](0);\n                this.results = _context8.t0;\n\n              case 10:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 7]]);\n      }));\n\n      function academicYearToDate(_x2, _x3, _x4, _x5, _x6, _x7) {\n        return _academicYearToDate2.apply(this, arguments);\n      }\n\n      return academicYearToDate;\n    }()\n  }\n};",{"version":3,"sources":["TransferIn.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"transferin\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class= \"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <div v-if=\"transferInListInt.length>0\">\r\n                        <data-tables :data=\"transferInListInt\" :action-col=\"transferListAction\">\r\n                            <el-table-column v-for=\"transferInListInfo in transferInList\" :prop=\"transferInListInfo.prop\"\r\n                                             :label=\"transferInListInfo.label\" :key=\"transferInListInfo.prop\"\r\n                                             sortable=\"custom\">\r\n                            </el-table-column>\r\n                        </data-tables>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <b-modal id=\"transferModal\" size=\"lg\" title=\"Transfer\" ok-only ok-variant=\"secondary\" ok-title=\"Cancel\" ref=\"transferShowModal\">\r\n            <div style=\"display: none;\">{{ transferStudentID }} - {{ studentSchoolID }}</div>\r\n            <div class=\"row col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Select Level</label>\r\n                    <select ref=\"ddlStudentSelectLevel\" class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in levelList\" v-bind:value=\"item.PK_Course_ID.trim()\">{{ item.CRS_Course_Name.trim() }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>First Academic Year</label>\r\n                    <select ref=\"ddlStudentFirstAcademicYear\"\r\n                            class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in academicYearList\" v-bind:value=\"item.PK_Semester_ID.trim()\">{{ item.SMT_Code.trim() }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Intake Year</label>\r\n                    <select ref=\"ddlStudentIntakeYear\" class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in studentIntakeYearList\" v-bind:value=\"item.PK_PAI_ID.trim()\">{{ item.PAI_Intake_No.trim() }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Date of Commencement</label>\r\n                    <div class=\"date\">\r\n                        <el-date-picker v-model=\"inputDateOfCommencement\" format=\"dd/MM/yyyy\"\r\n                                        value-format=\"dd/MM/yyyy\" type=\"date\" placeholder=\"Pick a date\"></el-date-picker>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <button class=\"btn btn-primary waves-effect waves-light m-r-10\" v-on:click=\"ApproveReject('APPROVE')\">Approve</button>\r\n                    <button class=\"btn btn-primary waves-effect waves-light m-r-10\" v-on:click=\"ApproveReject('REJECT')\">Reject</button>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"TransferIn\",\r\n        data() {\r\n            return {\r\n                levelList: [],\r\n                academicYearList: [],\r\n                studentIntakeYearList: [],\r\n                transferStudentID: '',\r\n                studentSchoolID: '',\r\n                inputDateOfCommencement: '',\r\n\r\n                transferInListInt: [],\r\n                transferInList: [{\r\n                    prop: \"Index_No\",\r\n                    label: \"Student ID\"\r\n                }, {\r\n                    prop: \"Full_Name\",\r\n                    label: \"First Name\"\r\n                }, {\r\n                    prop: \"Middle Name\",\r\n                    label: \"Middle_name\"\r\n                }, {\r\n                    prop: \"Last Name\",\r\n                    label: \"Last_name\"\r\n                }],\r\n                transferListAction: {\r\n                    label: 'Action',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            icon: 'el-icon-edit'\r\n                        },\r\n                        handler: row => {\r\n                            this.transferStudentID = row.Student_ID;\r\n                            this.studentSchoolID = row.PK_STUSCH_ID;\r\n                            this.inputDateOfCommencement = row.STUSCH_EffectiveDate_convert;\r\n                            this.$refs.transferShowModal.show();\r\n                        },\r\n                        label: 'Action'\r\n                    }]\r\n                },\r\n            };\r\n        },\r\n        async created() {\r\n            this.getPendingAcceptTransferSchoolList();\r\n            this.BindStudentLevel();\r\n            this.BindAcademicYear();\r\n            this.BindStudentIntakeYear();\r\n        },\r\n        async mounted() {\r\n\r\n        },\r\n        methods: {\r\n            async getPendingAcceptTransferSchoolList() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getPendingAcceptTransferSchoolBySchool();\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n                        }\r\n\r\n                        this.transferInListInt = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n            async BindStudentLevel() {\r\n                try {\r\n                    const response = await DataSource.shared.getLevel('');\r\n                    if (response) {\r\n                        this.levelListResponse = response.Table;\r\n                        this.levelListResponse.forEach(m => {\r\n                            this.levelList.push(m);\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async BindAcademicYear() {\r\n                try {\r\n                    const response = await DataSource.shared.getAcademicYear();\r\n                    if (response) {\r\n                        this.academicYearListResponse = response.Table;\r\n                        this.academicYearListResponse.forEach(m => {\r\n                            this.academicYearList.push(m);\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async BindStudentIntakeYear() {\r\n                try {\r\n                    const response = await DataSource.shared.getIntakeYear();\r\n                    if (response) {\r\n                        this.studentIntakeYearListResponse = response.Table;\r\n                        this.studentIntakeYearListResponse.forEach(m => {\r\n                            this.studentIntakeYearList.push(m);\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async ApproveReject(value) {\r\n                try {\r\n                    if (this.transferStudentID !== \"\" && this.studentSchoolID !== \"\") {\r\n                        if (value === 'APPROVE') {\r\n                            if (this.$refs.ddlStudentSelectLevel.value !== \"\" && this.$refs.ddlStudentFirstAcademicYear.value !== \"\" && this.$refs.ddlStudentIntakeYear.value !== \"\") {\r\n                                const getAcaYearRes = await DataSource.shared.getAcademicYearDateRange(this.$refs.ddlStudentFirstAcademicYear.value);\r\n\r\n                                if (getAcaYearRes) {\r\n                                    if (getAcaYearRes.code === \"99\") {\r\n                                        alert('Get Academic Year Error - Please try again later');\r\n                                    } else {\r\n                                        let academicYearFromDate, academicYearToDate;\r\n\r\n                                        this.getAcaYearResTemp = getAcaYearRes.Table;\r\n                                        this.getAcaYearResTemp.forEach(m => {\r\n                                            academicYearFromDate = m.SMT_From;\r\n                                            academicYearToDate = m.SMT_To;\r\n                                        });\r\n\r\n                                        this.academicYearToDate(value, academicYearFromDate, academicYearToDate, this.$refs.ddlStudentSelectLevel.value, this.$refs.ddlStudentFirstAcademicYear.value, this.$refs.ddlStudentIntakeYear.value);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                alert('Please fill in all the information');\r\n                            }\r\n                        } else if (value === 'REJECT') {\r\n                            this.academicYearToDate(value, 'NO DATA', 'NO DATA', 'NO DATA', 'NO DATA', 'NO DATA');\r\n                        }\r\n                    } else {\r\n                        alert('Error! Fail to get table info');\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async academicYearToDate(value, academicYearFromDate, academicYearToDate, level, adYear, intakeYear) {\r\n                try {\r\n                    const getSetLvlRes = await DataSource.shared.setLevelForAcceptScool(this.transferStudentID, level, academicYearFromDate, academicYearToDate, adYear, intakeYear, value, this.studentSchoolID, this.inputDateOfCommencement);\r\n\r\n                    if (getSetLvlRes) {\r\n                        if (getSetLvlRes.code === \"1\") {\r\n                            alert('Records Successfully Saved');\r\n                            window.location.replace('/TransferIn');\r\n                        } else if (getSetLvlRes.code === \"2\") {\r\n                                alert('Date of Commencement Cannot today or less than today');\r\n                        } else {\r\n                            alert('Save Student Accept / Reject School - Please try again later');\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src\\pages"}]}