{"remainingRequest":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\components\\RichTextEditor\\RichTextEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\src\\components\\RichTextEditor\\RichTextEditor.vue","mtime":1547391760045},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":1545311081350},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545311097356},{"path":"C:\\Users\\jessica\\Documents\\git\\vue-test\\node_modules\\vue-loader\\lib\\index.js","mtime":1545311099620}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Editor, EditorContent, EditorMenuBar } from 'tiptap';\nimport { Blockquote, CodeBlock, HardBreak, Heading, OrderedList, BulletList, ListItem, TodoItem, TodoList, Bold, Code, Italic, Link, Strike, Underline, History } from 'tiptap-extensions';\nexport default {\n  components: {\n    EditorMenuBar: EditorMenuBar,\n    EditorContent: EditorContent\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      editor: new Editor({\n        extensions: [new Blockquote(), new CodeBlock(), new HardBreak(), new Heading({\n          levels: [1, 2, 3]\n        }), new BulletList(), new OrderedList(), new ListItem(), new TodoItem(), new TodoList(), new Bold(), new Code(), new Italic(), new Link(), new Strike(), new Underline(), new History()],\n        content: \"Post Content\",\n        onUpdate: function onUpdate(_ref) {\n          var getJSON = _ref.getJSON,\n              getHTML = _ref.getHTML;\n          var json = getJSON(); // this.html = getHTML();\n\n          var html = getHTML();\n\n          _this.$emit('inputChange', html);\n        }\n      })\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.editor.destroy();\n  }\n};",{"version":3,"sources":["RichTextEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,SAAA,MAAA,EAAA,aAAA,EAAA,aAAA,QAAA,QAAA;AACA,SACA,UADA,EAEA,SAFA,EAGA,SAHA,EAIA,OAJA,EAKA,WALA,EAMA,UANA,EAOA,QAPA,EAQA,QARA,EASA,QATA,EAUA,IAVA,EAWA,IAXA,EAYA,MAZA,EAaA,IAbA,EAcA,MAdA,EAeA,SAfA,EAgBA,OAhBA,QAiBA,mBAjBA;AAmBA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,aAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AAAA;;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IAAA,MAAA,CAAA;AACA,QAAA,UAAA,EAAA,CACA,IAAA,UAAA,EADA,EAEA,IAAA,SAAA,EAFA,EAGA,IAAA,SAAA,EAHA,EAIA,IAAA,OAAA,CAAA;AAAA,UAAA,MAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AAAA,SAAA,CAJA,EAKA,IAAA,UAAA,EALA,EAMA,IAAA,WAAA,EANA,EAOA,IAAA,QAAA,EAPA,EAQA,IAAA,QAAA,EARA,EASA,IAAA,QAAA,EATA,EAUA,IAAA,IAAA,EAVA,EAWA,IAAA,IAAA,EAXA,EAYA,IAAA,MAAA,EAZA,EAaA,IAAA,IAAA,EAbA,EAcA,IAAA,MAAA,EAdA,EAeA,IAAA,SAAA,EAfA,EAgBA,IAAA,OAAA,EAhBA,CADA;AAmBA,QAAA,OAAA,gBAnBA;AAoBA,QAAA,QAAA,EAAA,wBAAA;AAAA,cAAA,OAAA,QAAA,OAAA;AAAA,cAAA,OAAA,QAAA,OAAA;AACA,cAAA,IAAA,GAAA,OAAA,EAAA,CADA,CAEA;;AACA,cAAA,IAAA,GAAA,OAAA,EAAA;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,aAAA,EAAA,IAAA;AACA;AAzBA,OAAA;AADA,KAAA;AA6BA,GAnCA;AAoCA,EAAA,aApCA,2BAoCA;AACA,SAAA,MAAA,CAAA,OAAA;AACA;AAtCA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <editor-menu-bar :editor=\"editor\" class=\"editor\">\r\n            <div class=\"menubar\" slot-scope=\"{ commands, isActive }\">\r\n\r\n                <button class=\"menubar__button\"\r\n                        :class=\"{ 'is-active': isActive.bold() }\"\r\n                        @click=\"commands.bold\">\r\n                    <i class=\"fa fa-bold\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                <button class=\"menubar__button\"\r\n                        :class=\"{ 'is-active': isActive.italic() }\"\r\n                        @click=\"commands.italic\">\r\n                    <i class=\"fa fa-italic\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                <button class=\"menubar__button\"\r\n                        :class=\"{ 'is-active': isActive.paragraph() }\"\r\n                        @click=\"commands.paragraph\">\r\n                    <i class=\"fa fa-paragraph\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                <button class=\"menubar__button\"\r\n                        :class=\"{ 'is-active': isActive.heading({ level: 1 }) }\"\r\n                        @click=\"commands.heading({ level: 1 })\">\r\n                    H1\r\n                </button>\r\n\r\n                <button class=\"menubar__button\"\r\n                        :class=\"{ 'is-active': isActive.heading({ level: 2 }) }\"\r\n                        @click=\"commands.heading({ level: 2 })\">\r\n                    H2\r\n                </button>\r\n\r\n                <button class=\"menubar__button\"\r\n                        :class=\"{ 'is-active': isActive.heading({ level: 3 }) }\"\r\n                        @click=\"commands.heading({ level: 3 })\">\r\n                    H3\r\n                </button>\r\n\r\n                <button class=\"menubar__button\"\r\n                        :class=\"{ 'is-active': isActive.bullet_list() }\"\r\n                        @click=\"commands.bullet_list\">\r\n                    <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                <button class=\"menubar__button\"\r\n                        :class=\"{ 'is-active': isActive.ordered_list() }\"\r\n                        @click=\"commands.ordered_list\">\r\n                    <i class=\"fa fa-list-ol\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n\r\n            </div>\r\n        </editor-menu-bar>\r\n        <editor-content :editor=\"editor\"/>\r\n\r\n        <!--<hr/>-->\r\n        <!--<div>-->\r\n            <!--Output:-->\r\n            <!--<pre><code>{{ html }}</code></pre>-->\r\n        <!--</div>-->\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {Editor, EditorContent, EditorMenuBar} from 'tiptap';\r\n    import {\r\n        Blockquote,\r\n        CodeBlock,\r\n        HardBreak,\r\n        Heading,\r\n        OrderedList,\r\n        BulletList,\r\n        ListItem,\r\n        TodoItem,\r\n        TodoList,\r\n        Bold,\r\n        Code,\r\n        Italic,\r\n        Link,\r\n        Strike,\r\n        Underline,\r\n        History,\r\n    } from 'tiptap-extensions';\r\n\r\n    export default {\r\n        components: {\r\n            EditorMenuBar,\r\n            EditorContent,\r\n        },\r\n        data() {\r\n            return {\r\n                editor: new Editor({\r\n                    extensions: [\r\n                        new Blockquote(),\r\n                        new CodeBlock(),\r\n                        new HardBreak(),\r\n                        new Heading({levels: [1, 2, 3]}),\r\n                        new BulletList(),\r\n                        new OrderedList(),\r\n                        new ListItem(),\r\n                        new TodoItem(),\r\n                        new TodoList(),\r\n                        new Bold(),\r\n                        new Code(),\r\n                        new Italic(),\r\n                        new Link(),\r\n                        new Strike(),\r\n                        new Underline(),\r\n                        new History(),\r\n                    ],\r\n                    content: `Post Content`,\r\n                    onUpdate: ({getJSON, getHTML}) => {\r\n                        const json = getJSON();\r\n                        // this.html = getHTML();\r\n                        const html = getHTML();\r\n                        this.$emit('inputChange', html)\r\n                    },\r\n                }),\r\n            };\r\n        },\r\n        beforeDestroy() {\r\n            this.editor.destroy();\r\n        },\r\n    };\r\n</script>\r\n\r\n<style>\r\n    .menubar.editor button {\r\n        background: none;\r\n        border: 0px;\r\n        padding: 5px 10px;\r\n        margin: 0px 5px;\r\n        cursor: pointer;\r\n        border-radius: 4px;\r\n    }\r\n\r\n    .menubar.editor button:hover {\r\n        background: #d8d8d8;\r\n    }\r\n\r\n    .menubar.editor {\r\n        background: #f7f7f7;\r\n        padding: 5px 0px;\r\n    }\r\n\r\n    .ProseMirror {\r\n        border: 1px solid #f5f5f5;\r\n        padding: 10px;\r\n    }\r\n</style>"],"sourceRoot":"src\\components\\RichTextEditor"}]}